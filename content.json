{"meta":{"title":"Blog of Faradays' Studio","subtitle":"照见五蕴皆空，度一切苦厄。","description":"自信人生二百里，会当击水三千里！","author":"David","url":"https://faradays-studio.gitee.io","root":"/"},"pages":[{"title":"网站设计的笔记","date":"2020-08-28T14:01:09.790Z","updated":"2020-08-28T14:01:09.790Z","comments":true,"path":"about/hide.html","permalink":"https://faradays-studio.gitee.io/about/hide.html","excerpt":"","text":"本文件内容不对外开放！！！ hexo-theme-faradays 开发笔记"},{"title":"About me 关于我","date":"2020-08-23T01:11:19.000Z","updated":"2020-09-06T00:58:14.547Z","comments":true,"path":"about/index.html","permalink":"https://faradays-studio.gitee.io/about/index.html","excerpt":"","text":"Faradays’ Studio 是我的虚拟工作室。 斯是陋室，惟吾德馨。在平凡的地方，创造不平凡的业绩，这是我的目标。 由于 GitHub 访问速度原因，增加 https://faradays-studio.gitee.io/ 作为备用站点。 栏目设置 电脑爱好者：电脑维护的一些技巧、方法总结。 随笔：生活感悟。 工作中的魔法：工作中的使用编程方法解决问题的实例总结。 开发笔记：hexo-theme-faradays 主题开发的记录。 编程笔记：业务编程的一些工作实践或知识总结。 English：用英文写作的文章。 GitHub wiki 首页 https://github.com/faradays-studio/faradays-studio.github.io/wiki/Home-%E9%A6%96%E9%A1%B5 产品变更说明hexo 项目 hexo-faradays 项目记录 百度搜索资源平台 百度统计"},{"title":"TimeLine","date":"2020-08-12T15:19:40.000Z","updated":"2020-08-23T02:33:24.538Z","comments":true,"path":"timeline/index.html","permalink":"https://faradays-studio.gitee.io/timeline/index.html","excerpt":"","text":"时间轴"},{"title":"hexo 博客系统开发笔记","date":"2020-09-06T14:58:03.554Z","updated":"2020-09-06T14:58:03.554Z","comments":true,"path":"about/change_log-hexo.html","permalink":"https://faradays-studio.gitee.io/about/change_log-hexo.html","excerpt":"项目概要 创建于: 2020/07/05 08:23:50 0.0.0 更新于: 2020/08/29 21:17:38 0.1.7 项目名称： Faradays 〔Ocean〕 设计理念：立足现在，放眼未来。 许可协议：请遵守 APGLv3 协议，侵权必究！ Licensed under GNU APGLv3. You may send your request to imhhj@vip.qq.com and wait for your License Confirmation email. See https://www.gnu.org/licenses/agpl-3.0.html or https://choosealicense.com/licenses/agpl-3.0/ for the license details. hexo 基础知识 Hexo 会默认安装： hexo：主程序hexo-deployer-git：实现 git 部署方式hexo-generator-archive：存档页面生成器hexo-generator-category：分类页面生成器hexo-generator-index：index 生成器hexo-generator-tag：标签页面生成器hexo-renderer-ejs：支持 EJS 渲染hexo-renderer-marked：Markdown 引擎hexo-renderer-stylus：支持 stylus 渲染hexo-server：支持本地预览，默认地址 localhost:4000 新安装的依赖包，保存在 node_module 文件夹下。 hexo 内置了一些内部变量，为进一步定制开发提供了重要的基础；最重要的是 site 变量，长得如下： site = &#123; posts: [object object], // 包含文章对象的数组 pages: [object object], // 包含页面对象的数组 categories: [object object], // 包含分类对象的数组 tags: [object object] // 包含标签对象的数组&#125; 我们可以在 JavaScript 通过 site 变量获取站点的文章总数，标签总数和分类总数。 console.log(site.pages) 可以在 .ejs 中获取相关变量： **&lt;% `code` %&gt;**：用于执行其中javascript代码。**&lt;%= `code` %&gt;**：会对code进行html转义； **&lt;%- `code` %&gt;**：不会进行转义， 也可以在 shell 中查看相关变量的值： #查看当前文章、独立页等情况hexo list [ page | post | route |tag | category ] 如果需要查看 hexo 内置了哪些内部变量、内部函数，可以访问以下链接： Tommy Chen, HEXO官方文档.hexo 变量[EB/OL].https://hexo.io/zh-cn/docs/variables.html, 2020/08/22. Tommy Chen, HEXO官方文档.hexo 辅助函数（Helpers）[EB/OL].https://hexo.io/zh-cn/docs/helpers, 2020/08/22. 模板定制的理论基础Hexo provides the Swig template engine by default, but you can easily install additional plugins to support alternative engines such as EJS, Haml, Jade, or Pug. Hexo chooses the template engine based on the file extension of the template (just like the posts). For example: layout.ejs - uses EJS layout.swig - uses Swig By default, the layout template is used by all other templates. You can specify additional layouts in the front-matter or set it to false to disable it. It’s even possible to build a complex nested structure by including more layout templates in your top layout. Every layout file should contain a body variable to display the contents of the template in question. Partials are useful for sharing components between your templates. Typical examples include headers, footers or sidebars. You may want to put your partials in separate files to make maintaining your website significantly more convenient. 在模板中，举例说来，&lt;%- partial(&#39;partial/header&#39;, &#123;title: &#39;Hello World&#39;&#125;) %&gt; 一句在直接导入 partial/header.ejs 的同时，同时也将该文件中定义的 title 变量赋值为 Hello World 。Partials 模板就等同于模板中定义了一个子函数一样，使得模板能够灵活地使用编程技术动态组态。 模板 用途 回退 备注 index 首页 post 文章 index page 分页 index archive 归档 index category 分类归档 archive tag 标签归档 archive hexo 博客根据网页的类型，每种页面都会从相应的布局文件进入网页，并同时加入 layout.ejs 的共享设置。因此，有人说，layout.ejs 是整个页面的入口，所有的页面都共用 layout.ejs 布局。 样式定制的理论基础Hexo ignores hidden files and files or folders prefixed with _ (underscore). 在 themes\\faradays\\source\\css\\_partial 中，由于文件夹以下划线起始，hexo在编译的时候就会略过他们不生成具体的css 。也就是说最后只会生成 css 目录中不以下划线开头的名字对应的CSS文件，如 style.css 、 timeline.css 、 tocbot.css ，而不会生成诸如 _layout/footer.css 这样的文件了。 hexo-theme-faradays 主题结构以下简称“Faradays 主题”，主题的内容主要是包含布局、样式等内容，具体见后续逐一解剖—— Faradays 主题的模板Faradays 主题目前使用 hexo-renderer-ejs 管理布局文件，相关文件结构如下： layout│-- archive.ejs // 存档，在 **_archive/** 目录下进一步定义│-- category.ejs│-- index.ejs // 首页，在 **_index/** 目录下进一步定义│-- layout.ejs // 公共样式（页头、页眉、页脚、侧边栏等），在 **_layout/** 目录下进一步定义│-- post.ejs // 文章页，在 **_post/** 目录下进一步定义│-- tag.ejs│-- page.ejs // 独立页（仅设置统一样式），在 **_page/** 目录下进一步定义│-- timeline // 独立页（时间轴）│-- &lt;some_page&gt; // 独立页（其他，个性化样式），在 **_&lt;some_page&gt;/** 目录下进一步定义 根据 hexo layout 的特征，对 Faradays 主题的文件结构可以概括为， themes\\faradays\\layout 根目录下的每一个 .ejs 文件，都对应于一个以 _为前缀的同名文件夹来配套定义其具体布局。 Faradays 主题除了 index、archive、post 等传统布局统一设置外，主要是设置了独立的 page 布局，为进一步定制更多功能提供了可能性。比如说，时间轴就是其中的一种独立布局样式。 archive 、 category 、 tag 等共享布局的文件，也进行了解耦，更利于后期进一步精细调整、减少交叉干涉的影响程度。 page 样式虽然和 post 样式基本接近，不过代码高亮等由于插件预定义的设置问题，还是存在一些细微的差异。 测试表明，更改 ejs 、 styl 文件，不需要重新生成网站就能显示最新效果。更为重要的是，修改 .md 格式的文章，保存后刷新就生效。 Faradays 主题的样式默认情况下，生成一个 site.css 总文件，后续每新增独立 page 布局，就设置一个独立的 .css。他们都由 hexo-renderer-stylus 将同名的 .styl 文件转换生成。 hexo 文章的书写hexo 博客文章页可以像 reStructuredText 文章一样，灵活地增加特定格式的文本，而无须通过 .EJS 模板文件进行预定义。 按照 Markdown 语法编写文章。 参考 https://hexo.io/zh-cn/docs/tag-plugins 使用 hexo 特有的标签语法扩展文章的书写方式。 在文章中插入引言，可包含作者、来源和标题。 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem. [author[source]] [link] [source_link_title] 在文章中插入代码。 [title] [lang:language] [url] [link text] [additional options]code snippet 特殊地，也可以将 source/downloads/code （在 _config.yml 中定义的 code_dir 路径 ）文件夹内的代码文件插入：&#123;% include_code [title] [lang:language] [from:line] [to:line] path/to/file %&#125;。示例如下： 嵌入 test.js 文件全文：&#123;% include_code lang:javascript test.bat %&#125; test.batview raw:: test.bat （需要保存为 ANSI 编码后双击运行）@echo offecho 当前路径的完整字符串：%0echo 去掉引号：%~0echo 所在分区：%~d0echo 所处路径：%~p0echo 文件名：%~n0echo 扩展名：%~x0echo 文件属性：%~a0echo 修改时间：%~t0echo 文件大小：%~z0echo.pause 只嵌入第 3 行:：&#123;% include_code lang:javascript from:3 to:3 test.bat %&#125; test.batview rawecho 当前路径的完整字符串：%0 嵌入第 5 行至第 8 行：&#123;% include_code lang:javascript from:5 to:8 test.bat %&#125; test.batview rawecho 所在分区：%~d0echo 所处路径：%~p0echo 文件名：%~n0echo 扩展名：%~x0 嵌入第 5 行至文件结束：&#123;% include_code lang:javascript from:5 test.bat %&#125; test.batview rawecho 所在分区：%~d0echo 所处路径：%~p0echo 文件名：%~n0echo 扩展名：%~x0echo 文件属性：%~a0echo 修改时间：%~t0echo 文件大小：%~z0echo.pause 嵌入第 1 行至第 8 行：&#123;% include_code lang:javascript to:8 test.bat %&#125; test.batview raw:: test.bat （需要保存为 ANSI 编码后双击运行）@echo offecho 当前路径的完整字符串：%0echo 去掉引号：%~0echo 所在分区：%~d0echo 所处路径：%~p0echo 文件名：%~n0echo 扩展名：%~x0 在文章中插入 iframe ：&#123;% iframe url [width] [height] %&#125;。 在文章中插入指定大小的图片（需要绝对路径）：&#123;% img [class names] /path/to/image [width] [height] '\"title text\" \"alt text\"' %&#125;。 在文章中插入链接，并自动给外部链接添加 target=”_blank” 属性： &#123;% link text url [external] [title] %&#125;。 text url [external] [title] 引用其他文章的链接： &#123;% post_path filename %&#125; 或 &#123;% post_link filename [title] [escape] %&#125;。 在使用此标签时可以忽略文章文件所在的路径或者文章的永久链接信息、如语言、日期。 例如，在文章中使用 Post not found: how-to-bake-a-cake 时，只需有一个名为 how-to-bake-a-cake.md 的文章文件即可。即使这个文件位于站点文件夹的 source/posts/2015-02-my-family-holiday 目录下、或者文章的永久链接是 2018/en/how-to-bake-a-cake，都没有影响。 默认链接文字是文章的标题，你也可以自定义要显示的文本。 默认对文章的标题和自定义标题里的特殊字符进行转义。可以使用escape选项，禁止对特殊字符进行转义。 引用文章的资源： &#123;% asset_path filename %&#125;、&#123;% asset_img [class names] slug [width] [height] [title text [alt text]] %&#125;、&#123;% asset_link filename [title] [escape] %&#125;。 使用 Raw 标签，以免发生解析异常：content。 文章摘要和截断：在文章中使用","text":"项目概要 创建于: 2020/07/05 08:23:50 0.0.0 更新于: 2020/08/29 21:17:38 0.1.7 项目名称： Faradays 〔Ocean〕 设计理念：立足现在，放眼未来。 许可协议：请遵守 APGLv3 协议，侵权必究！ Licensed under GNU APGLv3. You may send your request to imhhj@vip.qq.com and wait for your License Confirmation email. See https://www.gnu.org/licenses/agpl-3.0.html or https://choosealicense.com/licenses/agpl-3.0/ for the license details. hexo 基础知识 Hexo 会默认安装： hexo：主程序hexo-deployer-git：实现 git 部署方式hexo-generator-archive：存档页面生成器hexo-generator-category：分类页面生成器hexo-generator-index：index 生成器hexo-generator-tag：标签页面生成器hexo-renderer-ejs：支持 EJS 渲染hexo-renderer-marked：Markdown 引擎hexo-renderer-stylus：支持 stylus 渲染hexo-server：支持本地预览，默认地址 localhost:4000 新安装的依赖包，保存在 node_module 文件夹下。 hexo 内置了一些内部变量，为进一步定制开发提供了重要的基础；最重要的是 site 变量，长得如下： site = &#123; posts: [object object], // 包含文章对象的数组 pages: [object object], // 包含页面对象的数组 categories: [object object], // 包含分类对象的数组 tags: [object object] // 包含标签对象的数组&#125; 我们可以在 JavaScript 通过 site 变量获取站点的文章总数，标签总数和分类总数。 console.log(site.pages) 可以在 .ejs 中获取相关变量： **&lt;% `code` %&gt;**：用于执行其中javascript代码。**&lt;%= `code` %&gt;**：会对code进行html转义； **&lt;%- `code` %&gt;**：不会进行转义， 也可以在 shell 中查看相关变量的值： #查看当前文章、独立页等情况hexo list [ page | post | route |tag | category ] 如果需要查看 hexo 内置了哪些内部变量、内部函数，可以访问以下链接： Tommy Chen, HEXO官方文档.hexo 变量[EB/OL].https://hexo.io/zh-cn/docs/variables.html, 2020/08/22. Tommy Chen, HEXO官方文档.hexo 辅助函数（Helpers）[EB/OL].https://hexo.io/zh-cn/docs/helpers, 2020/08/22. 模板定制的理论基础Hexo provides the Swig template engine by default, but you can easily install additional plugins to support alternative engines such as EJS, Haml, Jade, or Pug. Hexo chooses the template engine based on the file extension of the template (just like the posts). For example: layout.ejs - uses EJS layout.swig - uses Swig By default, the layout template is used by all other templates. You can specify additional layouts in the front-matter or set it to false to disable it. It’s even possible to build a complex nested structure by including more layout templates in your top layout. Every layout file should contain a body variable to display the contents of the template in question. Partials are useful for sharing components between your templates. Typical examples include headers, footers or sidebars. You may want to put your partials in separate files to make maintaining your website significantly more convenient. 在模板中，举例说来，&lt;%- partial(&#39;partial/header&#39;, &#123;title: &#39;Hello World&#39;&#125;) %&gt; 一句在直接导入 partial/header.ejs 的同时，同时也将该文件中定义的 title 变量赋值为 Hello World 。Partials 模板就等同于模板中定义了一个子函数一样，使得模板能够灵活地使用编程技术动态组态。 模板 用途 回退 备注 index 首页 post 文章 index page 分页 index archive 归档 index category 分类归档 archive tag 标签归档 archive hexo 博客根据网页的类型，每种页面都会从相应的布局文件进入网页，并同时加入 layout.ejs 的共享设置。因此，有人说，layout.ejs 是整个页面的入口，所有的页面都共用 layout.ejs 布局。 样式定制的理论基础Hexo ignores hidden files and files or folders prefixed with _ (underscore). 在 themes\\faradays\\source\\css\\_partial 中，由于文件夹以下划线起始，hexo在编译的时候就会略过他们不生成具体的css 。也就是说最后只会生成 css 目录中不以下划线开头的名字对应的CSS文件，如 style.css 、 timeline.css 、 tocbot.css ，而不会生成诸如 _layout/footer.css 这样的文件了。 hexo-theme-faradays 主题结构以下简称“Faradays 主题”，主题的内容主要是包含布局、样式等内容，具体见后续逐一解剖—— Faradays 主题的模板Faradays 主题目前使用 hexo-renderer-ejs 管理布局文件，相关文件结构如下： layout│-- archive.ejs // 存档，在 **_archive/** 目录下进一步定义│-- category.ejs│-- index.ejs // 首页，在 **_index/** 目录下进一步定义│-- layout.ejs // 公共样式（页头、页眉、页脚、侧边栏等），在 **_layout/** 目录下进一步定义│-- post.ejs // 文章页，在 **_post/** 目录下进一步定义│-- tag.ejs│-- page.ejs // 独立页（仅设置统一样式），在 **_page/** 目录下进一步定义│-- timeline // 独立页（时间轴）│-- &lt;some_page&gt; // 独立页（其他，个性化样式），在 **_&lt;some_page&gt;/** 目录下进一步定义 根据 hexo layout 的特征，对 Faradays 主题的文件结构可以概括为， themes\\faradays\\layout 根目录下的每一个 .ejs 文件，都对应于一个以 _为前缀的同名文件夹来配套定义其具体布局。 Faradays 主题除了 index、archive、post 等传统布局统一设置外，主要是设置了独立的 page 布局，为进一步定制更多功能提供了可能性。比如说，时间轴就是其中的一种独立布局样式。 archive 、 category 、 tag 等共享布局的文件，也进行了解耦，更利于后期进一步精细调整、减少交叉干涉的影响程度。 page 样式虽然和 post 样式基本接近，不过代码高亮等由于插件预定义的设置问题，还是存在一些细微的差异。 测试表明，更改 ejs 、 styl 文件，不需要重新生成网站就能显示最新效果。更为重要的是，修改 .md 格式的文章，保存后刷新就生效。 Faradays 主题的样式默认情况下，生成一个 site.css 总文件，后续每新增独立 page 布局，就设置一个独立的 .css。他们都由 hexo-renderer-stylus 将同名的 .styl 文件转换生成。 hexo 文章的书写hexo 博客文章页可以像 reStructuredText 文章一样，灵活地增加特定格式的文本，而无须通过 .EJS 模板文件进行预定义。 按照 Markdown 语法编写文章。 参考 https://hexo.io/zh-cn/docs/tag-plugins 使用 hexo 特有的标签语法扩展文章的书写方式。 在文章中插入引言，可包含作者、来源和标题。 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem. [author[source]] [link] [source_link_title] 在文章中插入代码。 [title] [lang:language] [url] [link text] [additional options]code snippet 特殊地，也可以将 source/downloads/code （在 _config.yml 中定义的 code_dir 路径 ）文件夹内的代码文件插入：&#123;% include_code [title] [lang:language] [from:line] [to:line] path/to/file %&#125;。示例如下： 嵌入 test.js 文件全文：&#123;% include_code lang:javascript test.bat %&#125; test.batview raw:: test.bat （需要保存为 ANSI 编码后双击运行）@echo offecho 当前路径的完整字符串：%0echo 去掉引号：%~0echo 所在分区：%~d0echo 所处路径：%~p0echo 文件名：%~n0echo 扩展名：%~x0echo 文件属性：%~a0echo 修改时间：%~t0echo 文件大小：%~z0echo.pause 只嵌入第 3 行:：&#123;% include_code lang:javascript from:3 to:3 test.bat %&#125; test.batview rawecho 当前路径的完整字符串：%0 嵌入第 5 行至第 8 行：&#123;% include_code lang:javascript from:5 to:8 test.bat %&#125; test.batview rawecho 所在分区：%~d0echo 所处路径：%~p0echo 文件名：%~n0echo 扩展名：%~x0 嵌入第 5 行至文件结束：&#123;% include_code lang:javascript from:5 test.bat %&#125; test.batview rawecho 所在分区：%~d0echo 所处路径：%~p0echo 文件名：%~n0echo 扩展名：%~x0echo 文件属性：%~a0echo 修改时间：%~t0echo 文件大小：%~z0echo.pause 嵌入第 1 行至第 8 行：&#123;% include_code lang:javascript to:8 test.bat %&#125; test.batview raw:: test.bat （需要保存为 ANSI 编码后双击运行）@echo offecho 当前路径的完整字符串：%0echo 去掉引号：%~0echo 所在分区：%~d0echo 所处路径：%~p0echo 文件名：%~n0echo 扩展名：%~x0 在文章中插入 iframe ：&#123;% iframe url [width] [height] %&#125;。 在文章中插入指定大小的图片（需要绝对路径）：&#123;% img [class names] /path/to/image [width] [height] '\"title text\" \"alt text\"' %&#125;。 在文章中插入链接，并自动给外部链接添加 target=”_blank” 属性： &#123;% link text url [external] [title] %&#125;。 text url [external] [title] 引用其他文章的链接： &#123;% post_path filename %&#125; 或 &#123;% post_link filename [title] [escape] %&#125;。 在使用此标签时可以忽略文章文件所在的路径或者文章的永久链接信息、如语言、日期。 例如，在文章中使用 Post not found: how-to-bake-a-cake 时，只需有一个名为 how-to-bake-a-cake.md 的文章文件即可。即使这个文件位于站点文件夹的 source/posts/2015-02-my-family-holiday 目录下、或者文章的永久链接是 2018/en/how-to-bake-a-cake，都没有影响。 默认链接文字是文章的标题，你也可以自定义要显示的文本。 默认对文章的标题和自定义标题里的特殊字符进行转义。可以使用escape选项，禁止对特殊字符进行转义。 引用文章的资源： &#123;% asset_path filename %&#125;、&#123;% asset_img [class names] slug [width] [height] [title text [alt text]] %&#125;、&#123;% asset_link filename [title] [escape] %&#125;。 使用 Raw 标签，以免发生解析异常：content。 文章摘要和截断：在文章中使用 ，那么 之前的文字将会被视为摘要。首页中将只出现这部分文字，同时这部分文字也会出现在正文之中。 对于特殊字符进行转义，举例如下： &#123;: &#123; &#125;: &#125; 使用注意事项 文章的 Front-matter 中的数字应当使用引号包围，才能形成字符；如果需要转换为数字，可以使用相应的 JavaScript 转换函数。 研究总结独立页的功能测试 测试表明，独立页面使用 hexo 内置的渲染有以下特点（.md 文件直接放相应的目录下，不做任何特殊处理，系统原生使用 layout: page 渲染）： 不支持标签、分类。 生成的 .HTML 名称是 .md 文件名，与默认的 _post 目录下的文件按项目配置文件 _config.yml 中定义的 permalink 格式是有明显区别的。 相关页面不会被索引到首页、归档页，也不会进入使用 site.posts 循环读取的时间轴页上。 个人感觉：使用 hexo 的 Front-matter 指定的标题样式比使用 h1 配置要合适一点（因为默认的 h1 渲染出来的文字太大了！！！） 独立页面中的链接的 .html 扩展名不能删除，也不会被裁减。 在页面中定义 permalink 、 path 等均毫无意义，独立页仍然使用 :title（文件名）.html 作为连接名（实际上，个人还是喜欢这种形式的链接，名称固定，一目了然，而且只要不放出来，别人就不一定能够猜出来） Git 命令集成 测试 GitHub 可访问性 ssh -T git@github.com 更新主分支（下载更新） D: &amp;&amp; D:\\faradays-studio.github\\faradays-studio.github.io &amp;&amp; git checkout 更新其他分支（下载更新） git checkout -b blog origin/bloggit checkout -t origin/blog 提交到本地 git commit -a -m u”pdate the website statement” 提交到GitHub git push origin master 基本用法说明 查看分支 git branch -a git branch -v git branch -r 查看最近的 commit 信息 git show HEAD 按 q 退出 git checkout -b &lt;分支名&gt; git checkout -b blog 从 服务器 下载更新到本地 由于 hexo 更新后，本地会版本落后，因此需要更新 git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; git pull origin master 或 git pull origin master:master git pull origin blog:blog 使用 git 管理主题的流程示意#克隆你fork出来的分支$git clone &lt;远程Arepository&gt;#添加远程B repository标签$git remote add &lt;远程B repository标签&gt; git@github.com:XXXX/ceph.git#从远程Brepository的master分支拉取最新objects合并到本地master分支$git pull &lt;远程B厂库标签&gt; master:master#切换到要修改的分支上$git checkout YYYY#在当前分支的基础上创建一个开发分支，并切换到该分支上，你将在该分支上coding$git branch develop; git checkout develop#在工作区codingcoding...... #将修改保存到索引区$git add .#将修改提交到本地分区$git commit -a#将本地分支my_test提交到远程A repository的my_test分支上$git push origin my_test:my_testhexo 博客删除部分 commit 的操作实践经过 2 天半的来回测试，终于删除了上传了隐藏文件 hid*.html 文件的提交。 出现 HEAD detached at 68e8065 等错误的解决方法： # 给 blog 起个 branch 名 blog_temp1git branch blog_temp1 bloggit branch -a# Head 指向实际使用的 branch，注意不是 origin/bloggit checkout blog# 融合到当前 branchgit merge blog_temp1 合并时存在问题，如果以本地为准 git add，以服务器为准则 git rm XXXX，然后 git commit 再重新执行合并# 删除临时 branchgit branch -d blog_temp1 删除特定 commit (# 由于 hexo 自身存在一个版本库，因此需要进行相应的处理) git log git rebase -i XXX # 将需要删除的最早的提交之前的一次提交做基础 将相关 commit 记录中的 pick 改为 drop，保存即实现本地删除。git push origin blog -f # 强制提交本地版本到远程（实现远程删除）git status # 查看状态git log --onelinegit pull origin blog:bloggit log --onelinecd D:\\WebSites\\faradays-studio.hexo\\.deploy_git执行上述过程，如出现 `HEAD detached ` 等报错，注意分支名称实际为 master，执行 hexo 同步至远程 具体的操作过程： # 从 GitHub 下拉取版本库，确保本地文件为最新git pull origin blog:blog# 查看更新日志git log 相关 log 文件使用 VI 的形式打开，因此可以按 shift + G 跳转到底，按 q 退出修改。# 将需要删除的最早提交的前一次提交，设置为版本基础git rebase -i 982c78fc82a2a3804233e9ff7ef315fc21dc0822 在弹出文件中，将会展示在该提交之后的每个提交信息 将相关 commit 记录中的 pick 改为 drop，保存即实现本地删除。 出现 `HEAD detached at 982c78f` 报警 # 查看当前分支情况 git branch -a # 将当前分支改名 git branch blog_temp1 blog # 解决由于删除造成的版本 merge 报警 git rm -r about git rm content.json git rebase --continue git commit git push origin blog -f # 合并分支 #git merge blog_temp1 # 重新对 Head 指向 branch（测试表明该步骤不能执行） # git checkout blog # 删除临时的版本 git branch -d blog_temp1git log --oneline# git pull origin blog:blog 等命令无法对 hexo 的版本库进行更新，因此执行以下操作# 删除 .deploy_git 文件夹，重新建立版本库理论可行。详见 https://github.com/hexojs/hexo-deployer-git 。git rebase -i 982c78fc82a2a3804233e9ff7ef315fc21dc0822# 查看状态git statusgit rm -r aboutgit rm content.jsongit rebase --continuegit loggit log --oneline#至此，各个版本完成更新，可以使用 hexo 重新生成一次，确保删除的文件被生成hexo -d g# 查看本地版本日志git log --oneline# 解决由于前边删除文件导致的版本文件数量不一致的问题git pull -r# 下载网络更新到本地git pull origin blog:blog# 检查更新情况后的版本日志git log --oneline 参考文献 UniqueColor.git chekout分支遇到问题：need merge[EB/OL].https://www.cnblogs.com/UniqueColor/p/6594942.html, 2020/08/26. 奔跑的小龙码.git删除指定commit[EB/OL].https://www.cnblogs.com/lwcode6/p/11809973.html, 2020/08/26. 通过 add /rm 来指定本机处理措施，git commit -s，再 pull，再push Jack_Chao.Git 快速使用 之 冲突 merge 快速解决[EB/OL].https://www.jianshu.com/p/50ef88bda474, 2020/08/26. 星辰之力.git push &amp; git pull 推送/拉取分支[EB/OL].https://www.cnblogs.com/zhujiabin/p/9641305.html, 2020/08/27."},{"title":"hexo-theme-faradays 开发笔记","date":"2020-09-06T16:08:18.175Z","updated":"2020-09-06T16:08:18.175Z","comments":true,"path":"about/hidden-change_log-hexo-faradays.html","permalink":"https://faradays-studio.gitee.io/about/hidden-change_log-hexo-faradays.html","excerpt":"","text":"项目概要 创建于: 2020/07/05 08:23:50 0.0.0 更新于: 2020/08/29 21:18:18 0.1.7 项目名称： Faradays 〔Ocean〕 设计理念：立足现在，放眼未来。 许可协议：请遵守 APGLv3 协议，侵权必究！ Licensed under GNU APGLv3. You may send your request to imhhj@vip.qq.com and wait for your License Confirmation email. See https://www.gnu.org/licenses/agpl-3.0.html or https://choosealicense.com/licenses/agpl-3.0/ for the license details. TO-DO 实现以下功能 卡片式设计，标题和内容摘要支持大范围点击跳转； 文章支持动态目录功能 定制页面内容 打赏图片一次显示，无须切换 增加原创字段 original，并展示在页面中 大封面，下方含有标签跳转链接（需要统一文字大小） 归档页、时间轴增加固定的顶部菜单（便于跳转返回） 支持 gittalk 评论系统 时间轴按同一年分组倒序排列，而不被拆分为多组来排序 增加 QQ 聊天功能 多作者模式，并增加作者个人主页的跳转链接 解决文章生成时文件头含有奇怪字符的问题 增加页面加载时间 gitee 自动部署更新 增加编辑说明（设定专用样式？如何调用？放在标题区？） 完善自动配色体系，实现白天、夜晚模式切换 （ prefers-color-scheme 自动变色、） 时间轴、独立页的分页功能 不蒜子导致网站页面载出时间较长 增加背景音乐功能 增加网站文章链接清单生成功能 主动推送至百度，push 脚本加载时间较长，大约需要2s。 双站点 sitemap 同步生成，需同步更新百度资源搜索平台的设置 标签云页，如能做到标签按数量自动排序更好； 增加图床功能，经过分析，GitHub 慢的主要原因就是首页的图加载时间太慢了 自动初始化Gitalk评论 Gitalk 评论迁移到 Gitee ( https://gitee.com/zhousiwei/giteement ) 验证 themes\\faradays\\.gitignore 中设置过滤文件清单 参考 3-hexo ，实现基于作者进行检索的功能 标题/作者 打字效果 自定义 404 页 考虑集成 chatra 聊天工具 完善 Faradays 主题 梳理文件结构，分开设置 post 、 page 的布局样式 增加按钮切换主题色、网页内容等的方法 研究 page 生成目录的方法（目前只能手动添加） 完善主题文档，做好开源准备 兼容 IE，并弹出浏览器版本兼容提示 兼容 Chrome 高版本，解决文章编号位置错乱问题 更新日志0.2.0，24.85h，2020/09/07 00:07:38 调整首页中文章序号和文章标题的 margin 关系，确保兼容 IE9+ 传统浏览器， themes\\faradays\\source\\css\\_partial\\article.styl 变动如下： .article margin: -(block-margin)*8 0 0.article-header-num // 外边距（与 .article 的 margin =-180 对应，不过该参数20200831已弃用，以兼容 IE） //margin: -(article-padding)*4 0 (block-margin)*5 0 top: (article-padding)*3 同时增加 article-index 样式专门用于首页，避免文章页由于固定标题需要下移，而主页无法实现标题和数字对齐。 修改 themes\\faradays\\layout\\_layout\\head.ejs ，增加 IE 兼容设置（优先使用 Chrome，如果只有IE，那么就高渲染，低于IE9的增加HTML5兼容）： &lt;!-- HHJ@20200831，增加 IE 兼容提示 --&gt;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;&lt;meta name=&quot;renderer&quot; content=&quot;webkit|ie-stand|ie-comp&quot;&gt;&lt;!--[if lt IE 9]&gt; &lt;script src=&quot;//cdn.bootcss.com/respond.js/1.4.2/respond.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;//cdn.bootcdn.net/ajax/libs/selectivizr/1.0.2/selectivizr-min.js&quot;&gt;&lt;/script&gt;&lt;![endif]--&gt; &lt;% note warn %&gt; Selectivizr 是一个JS文件，你只需要引入如JQuery、Mootools、Prototype等N多流行的JS框架中的任意一个，然后再调用Selectivizr，就可以让IE6/7/8支持CSS3选择器。 respond.min:让不支持css3 Media Query的浏览器包括IE6-IE8等其他浏览器支持查询。 http://apps.bdimg.com/libs/html5shiv/3.7/html5shiv.min.js &lt;% endnote %&gt; 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加以下内容： &lt;!--[if lt IE 9]&gt;&lt;script type=&quot;text/JavaScript&quot;&gt; alert(&quot;请使用 IE9 或更高版本的浏览器，或谷歌浏览器、火狐浏览器，以便您浏览本站优质内容!&quot;);&lt;/script&gt;&lt;![endif]--&gt; 实现主题的布局的重新定义，为主题进一步完善独立页面布局等功能做好准备。 由于 ejs 文件中的 &lt;%#- %&gt; 注释不会在最终文件中显示，因此尽可能进行了替换；但是由于尖括号不能嵌套使用，导致出现异常，已纠正。 由于之前 index 页、 archive 页共用 archive.ejs 文件，已重新梳理解耦。 article.ejs 样式为 index 页、post 页、page 页共用，已重新梳理解耦。 新增日光、夜光背景模式： themes\\faradays\\layout\\_partial\\article.ejs 、 D:\\WebSites\\faradays-studio.hexo\\themes\\faradays\\layout\\_index\\index.ejs 增加 id 值（已废弃，已改用 class 值增加获取 DOM 元素）。 themes\\faradays\\layout\\_post\\post\\copyright.ejs 、 themes\\faradays\\layout\\_page\\post\\copyright.ejs 均增加版权声明模块的 id: &lt;div id=&quot;copyright-content&quot; class=&quot;content&quot;&gt; themes\\faradays\\layout\\layout.ejs 页面加载时自动加载脚本： &lt;body onload=&quot;javascript:switchBackground()&quot;&gt; onload event it only supports with few tags like listed below: &lt;body&gt;, &lt;frame&gt;, &lt;iframe&gt;, &lt;img&gt;, &lt;input type=&quot;image&quot;&gt;, &lt;link&gt;, &lt;script&gt;, &lt;style&gt; . themes\\faradays\\source\\css\\_partial\\sidebar.styl 增加以下元素，以便于进行模式点击切换： &lt;div id=&quot;sidebar-mode&quot; title=&quot;Daylight&quot; onClick=&quot;javascript:switchBackground()&quot;&gt; &lt;i class=&quot;fa fa-sun-o&quot;&gt;&lt;/i&gt;&lt;/div&gt; themes\\next\\source\\css\\_colors.styl 关于默认的模式切换涉及的颜色，有很好的考虑，可以有空的时候深入研究。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加操作脚本： &lt;%# HHJ@20200905，背景样式切换 %&gt;&lt;script&gt;function switchBackground(type_1)&#123; console.log(Date.now() + &quot; 切换背景色功能启动！&quot;); var daylight = document.cookie.replace(/(?:(?:^|.*;\\s*)daylight\\s*\\=\\s*([^;]*).*$)|^.*$/, &quot;$1&quot;); // 获取本地 cookies %&gt; //console.log(document.cookie); //console.log(&quot;cookies值： &quot; + daylight); if (type_1 === undefined) &#123; type_1 = 0; &lt;%# 没有赋予参数，则直接读取 cookie 值显示 %&gt; &#125; else &#123; &lt;%# 存在参数，则将 cookie 值取反，实现点击切换功能 %&gt; if(daylight == &#x27;1&#x27;)&#123; daylight = &#x27;0&#x27;; &#125; else &#123; daylight = &#x27;1&#x27;; &#125; &#125; var ele_1 = document.getElementById(&quot;container&quot;); &lt;%# 页面背景（由于兼容问题，暂不使用） %&gt; //console.log(ele_1.innerHTML); var ele_3 = document.getElementsByClassName(&quot;article-entry&quot;); &lt;%# 首页摘要、文章内容 %&gt; var ele_4 = document.getElementsByClassName(&quot;article-inner&quot;); &lt;%# 首页标题、文章标题 %&gt; var ele_5 = document.getElementsByTagName(&quot;blockquote&quot;); &lt;%# 备注 %&gt; var ele_6 = document.getElementsByClassName(&quot;hljs&quot;); &lt;%# 代码 %&gt; var ele_7 = document.getElementsByClassName(&quot;highlight&quot;); &lt;%# 代码外框 %&gt; //console.log(ele_3); var ele_0 = document.getElementById(&quot;sidebar-mode&quot;); &lt;%# 侧边栏操作按钮 %&gt; //console.log(ele_0.innerHTML); &lt;%# 夜间模式 %&gt; function darker()&#123; document.body.classList.add(&#x27;night-1&#x27;); //ele_1.classList.add(&#x27;night-2&#x27;); &lt;%# 在文章页中存在重叠交错情况 %&gt; //console.log(daylight + &quot; = 夜间模式&quot;); if(ele_3.length &gt; 0)&#123; for (i = 0; i &lt; ele_3.length; i++) &#123; ele_3[i].classList.add(&#x27;night-2&#x27;); ele_4[i].classList.add(&#x27;night-2&#x27;); //ele_3[i].style.backgroundColor = &quot;red&quot;; &#125; &#125; if(ele_5.length &gt; 0)&#123; for (i = 0; i &lt; ele_5.length; i++) &#123; ele_5[i].classList.add(&#x27;night-1&#x27;); &#125; &#125; if(ele_6.length &gt; 0)&#123; for (i = 0; i &lt; ele_6.length; i++) &#123; ele_6[i].classList.add(&#x27;night-2&#x27;); ele_7[i].classList.add(&#x27;night-1&#x27;); &#125; &#125; ele_0.innerHTML = &quot;&lt;i class=&#x27;fa fa-moon-o&#x27;&gt;&lt;/i&gt;&quot;; &lt;%# i 标签转义无效 %&gt; //console.log(ele_0.innerHTML); ele_0.setAttribute(&quot;title&quot;,&quot;Nightlight&quot;); document.cookie = &quot;daylight=0; path=/&quot;; console.log(&#x27;已切至夜间模式！&#x27;); &#125; &lt;%# 日间模式 %&gt; function lighter()&#123; document.body.classList.remove(&#x27;night-1&#x27;); //ele_1.classList.remove(&#x27;night-2&#x27;); //console.log(daylight + &quot; = 日间模式&quot;); if(ele_3.length &gt; 0)&#123; for (i = 0; i &lt; ele_3.length; i++) &#123; ele_3[i].classList.remove(&#x27;night-2&#x27;); ele_4[i].classList.remove(&#x27;night-2&#x27;); &#125; &#125; if(ele_5.length &gt; 0)&#123; for (i = 0; i &lt; ele_5.length; i++) &#123; ele_5[i].classList.remove(&#x27;night-1&#x27;); &#125; &#125; if(ele_6.length &gt; 0)&#123; for (i = 0; i &lt; ele_6.length; i++) &#123; ele_6[i].classList.remove(&#x27;night-2&#x27;); ele_7[i].classList.remove(&#x27;night-1&#x27;); &#125; &#125; ele_0.innerHTML = &quot;&lt;i class=&#x27;fa fa-sun-o&#x27;&gt;&lt;/i&gt;&quot;; //console.log(ele_0.innerHTML); ele_0.setAttribute(&quot;title&quot;,&quot;Daylight&quot;); document.cookie = &quot;daylight=1; path=/&quot;; console.log(&#x27;已切至日间模式！&#x27;); &#125; &lt;%# 切换模式 %&gt; if(daylight == null)&#123; lighter(); &#125; else if(daylight == &#x27;0&#x27;)&#123; darker(); &#125;else&#123; lighter(); &#125; //console.log(&quot;cookies 最新值： &quot; + daylight);&#125;&lt;/script&gt; HTML DOM 定义了多种查找元素的方法，除了 getElementById() 之外，还有 getElementsByName() 和 getElementsByTagName()。使用 getElementById 时，如果没有指定 ID 的元素返回 null ，如果存在多个指定ID的元素则返回 undefined 。因此使用 == null 或 != null 或 == undefined 或 != undefined 来处理异常。document.getElementsByName 得到的是标签的数组。它根据name属性（name可以重复），得到所有name属性与参数相同的控件组成的数组，不存在时，返回0长度数组( .length == 0 ，而不是 null )document.getElementsByTagName()得到的也是一个数组，与getElementsByName()用法相似tag相同的元素可能不止一个这个时候就需要用getElementsByTagName(“a”)0来获得对象的引用 themes\\faradays\\source\\css\\style.styl 增加了相关样式的定义： // HHJ@20200905，夜间模式.night-1 background-color: #aaa!important color: #333 img // 对现代浏览器添加滤镜 filter: brightness(30%).night-2 background-color: #ccc!important color: #333 img // 对现代浏览器添加滤镜 filter: brightness(50%) 修改代码高亮的边框样式和背景样式： 对于外边框，修改 themes\\faradays\\source\\css\\_partial\\highlight.styl 中边框设置即可： $code-block // HHJ@20200906，去除代码块的外边框 //border-style: solid border-style: none 修改代码样式 node_modules\\hexo\\node_modules\\hexo-util\\lib\\highlight.js （经测试无效， 修改 highlight.styl 文件却能去除代码边框及背景，后续采用该中方法 ）： result += &#x27;&lt;table border=&quot;0&quot; frame=&quot;void&quot;&gt;&lt;tr&gt;&#x27;; 首页 categories2 增加标题 “栏目” 。 增加 outer-index 样式，用于确保首页、归档页、时间轴页的页脚内容居中显示： themes\\faradays\\layout\\layout.ejs 修改样式如下： &lt;div class=&quot;&lt;% if (is_post() || is_page())&#123; %&gt;outer&lt;% &#125; else &#123; %&gt;outer-index&lt;% &#125; %&gt;&quot;&gt;&lt;%# HHJ@20200906 %&gt;&lt;footer id=&quot;footer&quot;&gt; &lt;% if (is_home() || is_archive() || page.layout == &quot;timeline&quot; )&#123; %&gt; &lt;div class=&quot;outer-index&quot;&gt; &lt;% &#125; else &#123; %&gt; &lt;div class=&quot;outer&quot;&gt; &lt;% &#125; %&gt; &lt;%- partial(&#x27;_layout/footer&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt; &lt;/div&gt;&lt;/footer&gt; themes\\faradays\\layout_layout\\footer.ejs 文件中动态设置 class 值的方法没有生效，因此调整部分内容至 layout.ejs 文档，确保首页的居中格式满足要求。 themes\\faradays\\layout\\_timeline\\timeline.ejs 参考增加一个外层 DOM 实现标题和标签云的内容尽可能居中。 完成 Faradays 主题文档的编写。 归档页增加标签云，使得归档包含的信息更加完整。 themes\\faradays\\source\\css\\_partial\\sidebar.styl 增加 .tags2x 相关样式； // HHJ@20200906，增加标签云.tags2x display: block text-align: center border:1px solid color-border //background: color-border a display: inline-block text-decoration: none text-align:center padding: 10px 7px 10px 7px position: relative themes\\faradays\\layout\\_archive\\archive.ejs 增加 site.categories 的云图： &lt;div class=&quot;tags2x&quot; style=&quot;margin:33px 3px 13px 3px;&quot;&gt; &lt;%# 标签云，HHJ@20200815，增加自定义格式 %&gt; &lt;!-- &lt;%- tagcloud(site.tags, &#123;min_font: 13, max_font: 13&#125;) %&gt; --&gt; &lt;!-- &lt;%- tagcloud(site.tags, &#123;amount: 65, orderby: &#x27;count&#x27;, color: true, start_color: &#x27;#9900FF&#x27;, end_color: &#x27;#FF0000&#x27;, min_font: 13, max_font: 53&#125;) %&gt; --&gt; &lt;%- tagcloud(site.categories, &#123;color: true, start_color: &#x27;#0000FF&#x27;, end_color: &#x27;#FF0000&#x27;, min_font: 13, max_font: 53&#125;) %&gt;&lt;/div&gt; 同上，themes\\faradays\\layout\\_timeline\\timeline.ejs 增加 site.tags 的云图： 测试首页、归档页的分页处置正确， 但时间轴分页不正确，须后续处理。 0.1.8，2.69h，2020/08/30 15:46:38 增加页面分析统计功能。登录 https://tongji.baidu.com/ ，注册相应的账户；将相应的 key 填入 themes\\faradays\\_config.yml 文件中，重新生成站点文件并上传。 修改 themes\\faradays\\layout\\_partial\\head-more.ejs，增加页面加载时间的脚本： &lt;script&gt;// 页面加载时间window.onload = function () &#123; var loadTime = window.performance.timing.domContentLoadedEventEnd-window.performance.timing.navigationStart; console.log(&#x27;Page load time is &#x27;+ loadTime + &#x27; ms&#x27;);&#125;&lt;/script&gt; themes\\faradays\\layout\\_partial\\post\\title.ejs 增加作者数量计数功能，解决作者分隔符添加不当问题。 0.1.7，10.01h，2020/08/29 23:58:58 对 node_modules 路径下的所有 JavaScript 文件，由 noopener 替换为 noopener norefferrer （将 window.opener 置为 null，防止window.opener被滥用功能），确保兼容 Firefox 。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加版权声明： &lt;script&gt;// HHJ@20200829，增加版权提示console.log(&quot;\\nAll right reserved by &lt;%- theme.owner %&gt;.\\n\\n&quot; + &quot;Licensed under GNU GPLv3.\\n&quot; + &quot;Send your request to &lt;%- theme.contact_with.email %&gt; and wait for your LICENSE CONFIRMATION email.\\n&quot; + &quot;See https://www.gnu.org/licenses/gpl-3.0.html for the license details.\\n\\n&quot; + &quot;Click &lt;%- theme.site.backup %&gt; for my recent developments...\\n\\n&quot;);&lt;/script&gt; 更新网站 favicon.ico 文件，确保与新 logo 一致。 相应配置在 themes\\faradays\\_config.yml 中定义。 #favicon: /favicon.icofavicon: /faradays.ico 调整 _config.yml 相关设置，实现一次编译，同时提交 GitHub 、 Gitee 功能。 # Deployment## Docs: https://github.com/hexojs/hexo-deployer-gitdeploy: type: git # 方法1（无论是字段的填写方式，还是 git 版本库，都有多种填写方式） #repository: git@github.com:faradays-studio/faradays-studio.github.io.git #branch: blog # 方法2 #repository: # github: https://github.com/faradays-studio/faradays-studio.github.io.git # gitee: https://gitee.com/faradays-studio/faradays-studio.git #branch: blog # 方法3（以下两种方式都兼容） repository: github: https://github.com/faradays-studio/faradays-studio.github.io.git,blog gitee: url: https://gitee.com/faradays-studio/faradays-studio.git # master/blog 分支为网站分区， theme 为分支为个人定制的主题 branch: blog # 参考 node_modules\\hexo-deployer-git\\README.md 说明文件配置以下参数 message: &quot;Updated by Faradays&#x27; Studio: &#123;&#123; now(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;&quot; #ignore_pattern: hid.*\\.html ignore_pattern: #【该方式测试不成功】public/about: hid.*\\.html hid.*\\.html 不过上述部署方式有个缺点，就是 Gitee 站点需要进入 Page 设置中点击 更新 才能重新部署网站（否则网站还是显示旧内容）；而使用同步 GitHub 方式则无须此操作。首次提交时需要输入用户名及密码，并配置 Gitee 的版本库。再次提交时无此需要。 纠正 themes\\faradays\\layout\\_partial\\head.ejs 中 &lt;%- kw1 = trim(tag.name) %&gt; 用法不当问题，修改后应当为 &lt;% kw1 = trim(tag.name) %&gt;，修复了文章头部含有不恰当字符的问题。 &lt;% code %&gt;：用于执行其中javascript代码。&lt;%= code %&gt;：会对code进行html转义；&lt;%- code %&gt;：不会进行转义， 如利用 &lt;%- include filename %&gt; 加载其他页面模版，还支持自定义标签，其中 &lt;% 可以使用 &#123;&#123;` 、 `%>` 用 `&#125;&#125; 代替。 纠正文章中图片超链接使用不当的用法，如 static/img/Macbook-开机启动项界面-20200824.jpg 修改为 /static/img/Macbook-开机启动项界面-20200824.jpg ，通过增加 / 来指明图像位于 站点的根目录 下，而不是当前网址的对应的目录下。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加自动推送百度功能： &lt;script&gt;// HHJ@20200829，自动推送百度功能（当新页面每次被浏览时，页面URL会自动推送给百度，无需站长汇总URL再进行主动推送操作。）(function()&#123; var bp = document.createElement(&#x27;script&#x27;); bp.src = &#x27;//push.zhanzhang.baidu.com/push.js&#x27;; // push.js 内容如下： // !function()&#123;var e=/([http|https]:\\/\\/[a-zA-Z0-9\\_\\.]+\\.baidu\\.com)/gi,r=window.location.href,o=document.referrer;if(!e.test(r))&#123;var n=&quot;//api.share.baidu.com/s.gif&quot;;o?(n+=&quot;?r=&quot;+encodeURIComponent(document.referrer),r&amp;&amp;(n+=&quot;&amp;l=&quot;+r)):r&amp;&amp;(n+=&quot;?l=&quot;+r);var t=new Image;t.src=n&#125;&#125;(window); var s = document.getElementsByTagName(&quot;script&quot;)[0]; s.parentNode.insertBefore(bp, s);&#125;)();&lt;/script&gt; 推送平台后，发现该功能不可用。查看官网手册，该功能已下线，恢复时间不确定。官方推荐用法为 ： curl -H ‘Content-Type:text/plain’ –data-binary @urls.txt “http://data.zz.baidu.com/urls?site=https://faradays-studio.gitee.io&amp;token=mRXhKIEz8tw2PT5P&quot; 0.1.6，2.68h，2020/08/28 21:53:13 增加站点地图（sitemap）功能，以便于搜索引擎收录博客文章： 安装相关插件： npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --savenpm audit fix --force _config.yml 添加以下内容以便于自定义 sitemap 文件名（该参数配置在themes\\faradays\\_config.yml中无效；也无法修改插件中.js文件增加读取 theme 配置文件的功能，目前也无法一并生成两个 sitemap 文件）： # 自动生成sitemapsitemap: path: &#x27;sitemap-github.xml&#x27;baidusitemap: path: &#x27;sitemap-gitee.xml&#x27;sitemap_baidu_github: path: &#x27;sitemap_baidu_github.xml&#x27; 修改 scaffolds\\post.md ，增加 keywords 文件头（该属性可选，调配原则见 head.ejs 修改情况）： keywords: Faradays&#x27; Studio, 测试 网页关键词的格式示例（逗号分隔，无引号，无空格）：批处理,Windows,字符。 修改 themes\\faradays\\layout\\_partial\\head.ejs 修改默认的关键词（顺序选择：文章关键词、文章标签、主题关键词、项目关键词）： &lt;!-- HHJ@20200828，HTML 默认关键词由 _config.yml 配置改为优先使用文章文件头 keywords 配置 --&gt;&lt;% if (page.keywords)&#123; %&gt; &lt;meta name=&quot;keywords&quot; content=&quot;&lt;%= page.keywords %&gt;,Faradays&#x27; Studio&quot;&gt;&lt;% &#125; else if (page.tags &amp;&amp; page.tags.length)&#123; %&gt; &lt;% var kw1 = &#x27;&#x27; %&gt; &lt;% page.tags.forEach(function (tag, kx) &#123; %&gt; &lt;% if (kx==1)&#123; %&gt; &lt;%- kw1 = trim(tag.name) %&gt; &lt;% &#125; else &#123; %&gt; &lt;% kw1 = kw1 + &#x27;,&#x27; + tag.name %&gt; &lt;% &#125;%&gt; &lt;% &#125;) %&gt; &lt;meta name=&quot;keywords&quot; content=&quot;&lt;%= kw1 %&gt;,Faradays&#x27; Studio&quot;&gt;&lt;% &#125; else if (theme.keywords)&#123; %&gt; &lt;meta name=&quot;keywords&quot; content=&quot;&lt;%- theme.keywords %&gt;&quot; /&gt;&lt;% &#125; else if (config.keywords)&#123; %&gt; &lt;meta name=&quot;keywords&quot; content=&quot;&lt;%= config.keywords %&gt;&quot;&gt;&lt;% &#125; %&gt; 关键词的用法： &gt; - keywords的每个词都要能在内容中找到相应匹配，才有利于排名。&gt; - keywords一般不超过3个，每个关键词不宜过长，而且词语间要用英文“,”隔开。&gt; - 尽量将重要的关键字靠前放，因为靠后的关键字排名较差，除非你站有很高的权重。用法： &lt;meta name=&quot;Keywords&quot; Content=&quot;关键词1,关键词2,关键词3,关键词4&quot;&gt;- 首页keywords： 网站名称,主要栏目名,主要关键词。- 栏目页keywords： 栏目名称,栏目关键字,栏目分类列表名称。- 分类列表页keywords： 栏目中的主要关键字写入即可。- 文章页keywords写法： 提取文章主题中的关键词，也可以选择文章中出现比较多的词来作为关键词。 由于 hexo 建议使用 updated_option 来替代 use_date_for_updated 。为了便于部署，由根目录 _config.yml 调整到 themes\\faradays\\_config.yml，内容变更如下： ## Use post&#x27;s date for updated date unless set in front-matter#use_date_for_updated: falseupdated_option: &#x27;mtime&#x27; # * mtime: file modification date (default) # * date: use_date_for_updated # * empty: no more update 注册百度站长平台（ https://ziyuan.baidu.com/site/index ），并进行适配： 方法1（sitemap验证） https://faradays-studio.github.io/sitemap-github.xml （hexo-generator-sitemap生成，修改后用于 GitHub 站点） 模板 node_modules\\hexo-generator-sitemap\\sitemap.xml 中 &lt;loc&gt;&#123;&#123; post.permalink | uriencode &#125;&#125;&lt;/loc&gt; 修改为 &lt;loc&gt;&#123;&#123; \"https://faradays-studio.github.io/\" + post.path | uriencode &#125;&#125;&lt;/loc&gt; 。 https://faradays-studio.gitee.io/sitemap-baidu-gitee.xml （hexo-generator-baidu-sitemap生成，根据根目录的 _config.xml 默认生成，用于 gitee 站点） 【未修改】模板 node_modules\\hexo-generator-baidu-sitemap\\sitemap.xml 中 var baiduUrl = config.url 修改为 var baiduUrl = theme.site.main 。 测试表明，sitemap 包含了 hid** 文件，不过相应的文件并没有上传 GitHub 和 Gitee 。 经初步了解，猜测 themes\\faradays\\.gitignore 文件中也可以设置过滤文件清单。 方法2（HTML 验证）增加 baidu_verify_H4oRq5obf8.html 到 source 目录，并增加到 _config.yml 中的 skip_render 参数中（注意书写顺序格式）。 测试表明，如果不同步 wiki 信息，码云从 GitHub 中同步版本库只需要很短的数秒钟。 修改 _config.yml 中的 url 参数值，不再使用 GitHub 网站，而是使用 gitee 网站，确保访问质量和收录效果。同时，修改 themes\\faradays\\layout\\_partial\\head.ejs 以确保 GitHub page 主站可使用 HTML 方式验证通过： &lt;!-- HHJ@20200828，增加百度搜索资源平台验证功能 --&gt;&lt;% if (is_home())&#123; %&gt; &lt;% if (theme.baidu_site_verification &amp;&amp; theme.baidu_site_verification.length)&#123; %&gt; &lt;meta name=&quot;baidu-site-verification&quot; content=&quot;&lt;%= theme.baidu_site_verification %&gt;&quot; /&gt; &lt;% &#125; %&gt;&lt;% &#125; %&gt; themes\\faradays\\_config.yml增加 baidu_site_verification: &#39;YmNlECnn33&#39;； 对页眉等地方的非本站链接，如 themes\\faradays\\layout\\_partial\\footer.ejs 文件的 a 标签 href 属性之后增加 rel=&quot;external nofollow&quot; 属性，以减少索引。 参考文献中的 a 标签展示无法设置该功能，提示 unknown property name 。 http://codingdict.com/questions/17984 中小编典典提出：仅在external是唯一 rel值 时才有效；如果要设置可能具有1个或多个rel值的链接的样式，则应使用 [att~=val] 属性选择器，如 a[rel~=&quot;external&quot;]（注意波浪号字符）。 网页描述变量规范：修改 node_modules\\hexo\\lib\\plugins\\helper\\open_graph.js （尝试使用 theme.description 变量无效）—— // HHJ@20200829//let description = options.description || page.description || page.excerpt || content || config.description;let description = page.description || config.keywords || config.description; 确保文件头的作者名称无误：修改 node_modules\\hexo\\lib\\hexo\\default_config.js 如下—— //author: &#x27;John Doe&#x27;,author: &#x27;David Faraday&#x27;, 经测试表明，如果在 _config.yml 中定义 author: David 即可解决。 适当调整文章署名区空白格式：涉及 themes\\faradays\\source\\css\\_partial\\article.styl 和 themes\\faradays\\layout\\_partial\\post\\copyright.ejs 文件。 由于 GitHub Page 访问速度实在太慢，基于 https://faradays-studio.gitee.io 网址对每个文章增加后备链接。 修改 themes\\faradays\\layout\\_partial\\post\\copyright.ejs 如下： &lt;!-- HHJ@20200828，调整原始链接显示方式，并增加备用链接 --&gt;&lt;p&gt;原始链接： &lt;% if (theme.site.main &amp;&amp; theme.site.main.length)&#123; %&gt; &lt;a class=&quot;post-url&quot; href=&quot;&lt;%- theme.site.main %&gt;&lt;%- url_for(post.path) %&gt;&quot; title=&quot;&lt;%= post.title %&gt;&quot;&gt; &lt;%- theme.site.main %&gt;&lt;%- url_for(post.path) %&gt; &lt;/a&gt; &lt;% &#125; else &#123; %&gt; &lt;a class=&quot;post-url&quot; href=&quot;&lt;%- url_for(post.path) %&gt;&quot; title=&quot;&lt;%= post.title %&gt;&quot;&gt; &lt;%= post.permalink %&gt; &lt;/a&gt; &lt;% &#125; %&gt;&lt;/p&gt;&lt;% if (theme.site.backup &amp;&amp; theme.site.backup.length)&#123; %&gt;&lt;p&gt;后备链接： &lt;a class=&quot;post-url&quot; href=&quot;&lt;%- theme.site.backup %&gt;&lt;%- url_for(post.path) %&gt;&quot; title=&quot;&lt;%= post.title %&gt;&quot;&gt; &lt;%- theme.site.backup %&gt;&lt;%- url_for(post.path) %&gt;&lt;/a&gt;&lt;/p&gt;&lt;% &#125; %&gt; 对应地，themes\\faradays\\_config.yml 增加以下设置： site: #main: main: https://faradays-studio.github.io backup: https://faradays-studio.gitee.io 0.1.5，16.13h，2020/08/25 23:35:01 创建关于页面 创建新页面： hexo new page about 。 头部不指定 layout 参数，则使用默认的 page.ejs 布局，但是没有保留标题样式。 需要修改文本存储格式为 UTF-8 ，否则编译后文本乱码。 修改 title ，使得文本中显示标题文本与实际相符。 修改 themes\\faradays\\layout\\layout.ejs ，对原有文章添加固定标题样式的地方，增加独立页面的设置（确保拥有固定标题）。 &lt;% if (is_post() || is_page())&#123; %&gt; 归档页、时间轴均为独立设置的布局样式。但上述设置为公共设置。因为 themes\\faradays\\layout\\_partial\\timeline.ejs、themes\\faradays\\layout\\_partial\\archive.ejs 均添加引用了 _partial/header-post 文件。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加 || is_page() ，确保页面导航 tocbot 显示正常、并增加了评论功能；同时为了确保统一，对 themes\\faradays\\layout\\_partial\\article.ejs 也做相应的增加（但效果未检查确认，增加 post-content 来设置 background: #fff ？）。 themes\\faradays\\layout\\_partial\\after-footer-more.ejs 文件编码修改为 UTF-8，避免 GitHub 中创建的 gitalk 评论标签乱码。 同步完善 scaffolds\\page.md，包括增加头部参数和文件编码由 ANSI 修改为 UTF （Npp:Encoding&gt;Convert to UTF-8）。 完善首页社交图标设置，增加 gitee 图标。 修改 themes\\faradays\\source\\css\\_partial\\post.styl，修改标题文字颜色和行距： .post-title //color: #555 //background: main-color // HHJ@20200823 color: main-color line-height: 1.3em 添加QQ 联系等快捷方式，参考 themes\\3-hexo\\layout\\_partial\\nav-left.ejs 创建 themes\\faradays\\layout\\_partial\\post\\contact.ejs 文件，内容如下： &lt;!-- HHJ@20200823，增加联系方式图标 --&gt;&lt;div class=&quot;page-contact&quot;&gt; &lt;% if (theme.contact_with.qq &amp;&amp; theme.contact_with.qq.length ) &#123; %&gt; &lt;a title=&quot;QQ联系博主&quot; href=&quot;http://wpa.qq.com/msgrd?v=3&amp;uin=&lt;%= theme.contact_with.qq %&gt;&amp;site=qq&amp;menu=yes&quot; target=&quot;_blank&quot;&gt; &lt;i class=&quot;fa fa-qq&quot;&gt;&lt;/i&gt; &lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (theme.contact_with.email &amp;&amp; theme.contact_with.email.length ) &#123; %&gt; &lt;a title=&quot;邮件联系博主&quot; href=&quot;mailto:&lt;%= theme.contact_with.email %&gt;&quot; target=&quot;_blank&quot;&gt; &lt;i class=&quot;fa fa-envelope&quot;&gt;&lt;/i&gt; &lt;/a&gt; &lt;% &#125; %&gt;&lt;/div&gt; 修改 themes\\faradays\\layout\\_partial\\article.ejs ，将 contact.ejs 引入 &lt;!-- HHJ@20200823，增加联系方式图标 --&gt;&lt;%- partial(&#x27;post/contact&#x27;) %&gt; 修改 themes\\faradays\\_config.yml ，增加以下参数： contact_with: qq: 189392385 email: yvany@qq.com 参考 page-reward 格式设置 page-contact 格式： 新建 themes\\faradays\\source\\css\\_partial\\contact.styl 文件； // HHJ@20200823.page-contact margin: 20px 7% text-align: center position: absolute top: -41px z-index: 3 a position: relative width: 37px height: 37px line-height: 37px font-size: 20px color: #fff!important text-align: center border-radius: 50% display: inline-block background: main-color text-decoration: none boxShadow(.3s) &amp;:hover, &amp;:active color: #fff text-decoration: none!important 将上述 contact.styl 文件导入 themes\\faradays\\source\\css\\style.styl : // HHJ@20200823，增加@import &quot;_partial/contact&quot; 调整 themes\\faradays\\layout\\_partial\\article.ejs，增加 style 设置，避免上下两行内容过于拥挤（太大的话，手机模式 display: none 则显得下方空白太大）： &lt;ul class=&quot;article-footer-menu&quot; style=&quot;margin-top:10px;&quot;&gt; 需要注意的是，如果 ejs 文件编程错误，比如说括号匹配等问题，可能会导致编译时出现奇怪的报错。因此新增 ejs 文件时需要先改好脚本文件。 进行 about 独立页中内容的渲染研究： 测试 post 生成的要求：不能含有 tag 等头部参数。 测试独立页的 URL 格式：不由项目的配置文件控制，为 &lt;文件名&gt;.html ，注意，必须含有 html 扩展。 测试项目 _config.yml 文件增加 git 更新说明和过滤以 hid 开头的 .html 文件（hid.*\\.html）功能。 该功能可以保留部分个人信息，避免被上传至网络上！ 配置 hide.html 为索引文件，hidden-change_log-hexo-faradays.html 为主题开发笔记。 经过 2 天的反复试验，终于将可能泄露独立页网址的 commit 予以删除。 隐藏网页的访问示例： http://127.0.0.3:4000/about/hide.html。 修改标题的感应样式（之前为字距变宽，改为背景变色），涉及 #site-title 、#header-menu-nav 样式。 background-color: color-link 经过网络调查，未找到配置多作者的案例，唯一设计多作者的是 3-hexo 主题，然后都只是单纯地读取作者显示，特色功能是按作者检索；而自己初步规划的方法设计到动态变量，实现也有一定的难度。综合研究采取文件头多属性来实现： 逻辑：那么 若 0 &lt; post.original &lt; 50，显示 author1 、author2 、author3 为 编者 （排后）， author_x 为 作者（若存在）；若 post.original ≥ 50，author1 、author2 、author3为作者（排前）。 文章的作者的填写方法（author1 无论如何都存在，author2、author3等注册作者内容随意填写，而贡献作者要以类似 tag 的方式填写）： author2: 2author3: author_x: - [&#x27;Bat Man&#x27;, &#x27;https://faradays-studio.github.io/&#x27;] - [&#x27;Iron Man&#x27;, &#x27;https://faradays-studio.github.io/&#x27;] 修改 themes\\faradays\\_config.yml ，增加以下内容： # HHJ@20200815author1: uid: 1 name: David Faraday url: https://faradays-studio.github.io/author2: uid: 2 name: Superman url: https://faradays-studio.github.io/author3: uid: 98 name: Captain America url: https://faradays-studio.github.io/ themes\\faradays\\layout\\_partial\\post\\title.ejs 设置如下： &lt;!-- HHJ@20200825，多作者模式 --&gt;&lt;li class=&quot;faradays-author&quot;&gt; &lt;i class=&quot;fa fa-user-o&quot;&gt;&lt;/i&gt; &lt;% if (page.original &amp;&amp; page.original.length)&#123; %&gt; &lt;% var o = parseInt(page.original) %&gt; &lt;% if (o &gt; 0 &amp;&amp; o &lt;50 )&#123; %&gt; &lt;% if (post.author_x &amp;&amp; post.author_x.length)&#123; %&gt; &lt;% post.author_x.forEach(function (au, ix) &#123; %&gt; &lt;% if (ix == 1)&#123; %&gt; &lt;a href=&quot;&lt;%= au[1] %&gt;&quot;&gt;&lt;%= au[0] %&gt;&lt;/a&gt; &lt;% &#125; else &#123; %&gt; , &lt;a href=&quot;&lt;%= au[1] %&gt;&quot;&gt;&lt;%= au[0] %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% &#125;) %&gt; &lt;% &#125; %&gt; , &lt;a href=&quot;&lt;%- theme.author1.url %&gt;&quot;&gt;&lt;%- theme.author1.name %&gt;&lt;/a&gt; &lt;% if (post.author2 &amp;&amp; !post.author2.length)&#123; %&gt; , &lt;a href=&quot;&lt;%- theme.author2.url %&gt;&quot;&gt;&lt;%- theme.author2.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (post.author3 &amp;&amp; !post.author3.length)&#123; %&gt; , &lt;a href=&quot;&lt;%- theme.author3.url %&gt;&quot;&gt;&lt;%- theme.author3.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% &#125; else &#123; %&gt; &lt;a href=&quot;&lt;%- theme.author1.url %&gt;&quot;&gt;&lt;%- theme.author1.name %&gt;&lt;/a&gt; &lt;% if (post.author2 &amp;&amp; !post.author2.length)&#123; %&gt; , &lt;a href=&quot;&lt;%- theme.author2.url %&gt;&quot;&gt;&lt;%- theme.author2.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (post.author3 &amp;&amp; !post.author3.length)&#123; %&gt; , &lt;a href=&quot;&lt;%- theme.author3.url %&gt;&quot;&gt;&lt;%- theme.author3.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (post.author_x &amp;&amp; post.author_x.length)&#123; %&gt; &lt;% post.author_x.forEach(function (au, ix) &#123; %&gt; , &lt;a href=&quot;&lt;%= au[1] %&gt;&quot;&gt;&lt;%= au[0] %&gt;&lt;/a&gt; &lt;% &#125;) %&gt; &lt;% &#125; %&gt; &lt;% &#125; %&gt; &lt;% &#125; else &#123; %&gt; &lt;a href=&quot;&lt;%- theme.author1.url %&gt;&quot;&gt;&lt;%- theme.author1.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt;&lt;/li&gt; themes\\faradays\\layout\\_partial\\post\\copyright.ejs，同步进行修改。 &lt;p&gt;作者： &lt;% var au_num = 0 %&gt; &lt;% if (page.original &amp;&amp; page.original.length &amp;&amp; parseInt(page.original)&gt;=35 )&#123; %&gt; &lt;% au_num = au_num + 1 %&gt; &lt;a href=&quot;&lt;%- theme.author1.url %&gt;&quot;&gt;&lt;%- theme.author1.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (post.author_x &amp;&amp; post.author_x.length)&#123; %&gt; &lt;% post.author_x.forEach(function (au, ix) &#123; %&gt; &lt;% au_num = au_num + 1 %&gt; &lt;% if (au_num &gt; 1)&#123; %&gt; , &lt;% &#125; %&gt; &lt;a href=&quot;&lt;%= au[1] %&gt;&quot;&gt;&lt;%= au[0] %&gt;&lt;/a&gt; &lt;% &#125;) %&gt; &lt;% &#125; %&gt; &lt;% if (post.author2 &amp;&amp; !post.author2.length)&#123; %&gt; &lt;% au_num = au_num + 1 %&gt; &lt;% if (au_num &gt; 1)&#123; %&gt; , &lt;% &#125; %&gt; &lt;a href=&quot;&lt;%- theme.author2.url %&gt;&quot;&gt;&lt;%- theme.author2.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (post.author3 &amp;&amp; !post.author3.length)&#123; %&gt; &lt;% au_num = au_num + 1 %&gt; &lt;% if (au_num &gt; 1)&#123; %&gt; , &lt;% &#125; %&gt; &lt;a href=&quot;&lt;%- theme.author3.url %&gt;&quot;&gt;&lt;%- theme.author3.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt;&lt;/p&gt;&lt;% if (page.original &amp;&amp; page.original.length &amp;&amp; parseInt(page.original)&lt;35 )&#123; %&gt; &lt;p&gt;编者： &lt;a href=&quot;&lt;%- theme.author1.url %&gt;&quot;&gt;&lt;%- theme.author1.name %&gt;&lt;/a&gt; &lt;/p&gt;&lt;% &#125; %&gt; 0.1.4，16.2h，2020-08-23 01:18:29 修改 themes\\faradays\\source\\css\\_partial\\header.styl ，调整导航栏图标位置（暂无较好处理方法）： .header-menu-container// HHJ@20200821//max-width: 1100px//margin: 0 automargin: 0 2% 0 2% 增加代码高亮功能： 在 https://github.com/highlightjs/highlight.js/releases 下载相关文件； 在 themes\\faradays\\source\\js 增加 highlight.min.js 在 themes\\faradays\\source\\css 路径增加 github.min.css （themes\\faradays\\source\\css\\style.styl 文件中本来也引入了 highlight.styl 样式文件） 在 themes\\faradays\\layout\\_partial\\head.ejs 增加以下代码，引入 highlight 相关样式和脚本文件（注意路径的表述方法，后续已迁移至 head-more.ejs 文件中）： &lt;!-- HHJ@20200821 --&gt;&lt;!-- HHJ@20200821 --&gt;&lt;!-- &lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.bootcss.com/highlight.js/9.2.0/styles/github.min.css&quot;&gt; --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/github.min.css&quot;&gt;&lt;!-- &lt;%- css(&#x27;css/github.min.css&#x27;) %&gt; --&gt;&lt;!-- &lt;script src=&quot;//cdn.bootcss.com/highlight.js/9.2.0/highlight.min.js&quot;&gt;&lt;/script&gt; --&gt; 修改 themes\\faradays\\layout\\layout.ejs ，参考 after-footer.ejs 的引入方法引入 after-footer-more.ejs 布局文件： &lt;%- partial(&#x27;_partial/after-footer-more&#x27;) %&gt; 在 themes\\faradays\\layout\\ 路径下增加 after-footer-more.ejs 文件，并将文章导航 tocbot（从 after-footer.ejs 迁移过来）、代码高亮 highlight 相关内容设置在此文件中。 经测试，themes\\faradays\\source\\css\\_partial\\highlight.styl 、themes\\faradays\\source\\css\\github.min.css 配合使用效果较好，已修改部分颜色及行距。 修改 themes\\faradays\\layout\\_partial\\post\\copyright.ejs 文件，对原创指数大于 50% 的才显示为作者及许可协议： &amp;&amp; parseInt(page.original)&gt;50 时间轴、归档页增加置顶菜单，便于跳转返回首页。themes\\faradays\\layout\\_partial\\timeline.ejs、themes\\faradays\\layout\\_partial\\archive.ejs 同时增加以下内容： &lt;!-- HHJ@20200821 --&gt;&lt;%- partial(&#x27;header-post&#x27;) %&gt; 并对 themes\\faradays\\layout\\after-footer-more.ejs 文件的 ! is_home() 判断修改为 is_post() ，避免目录导航 class 未找到报警。 增加 gittalk 评论系统的支持： 访问 https://github.com/settings/applications/new 注册账户（位于 GitHub &gt; Settings &gt; Developer settings ）， Client ID: 90b449ff273a263117ecClient Secret: 0a3ccea67a4d3f03cbff012eeac1a8547e367aad 修改 themes\\faradays\\layout\\_partial\\article.ejs ，增加评论布局文件的引用 &lt;% &#125; else if (theme.gitalk.owner) &#123; %&gt;&lt;%- partial(&#39;plugins&#x2F;comments&#x2F;gitalk&#39;) %&gt; npm i --save gitalk，并在 themes\\faradays\\layout\\head-more.ejs 中增加相应的引入文件 import &#x27;gitalk/dist/gitalk.css&#x27;import Gitalk from &#x27;gitalk&#x27; 新建 themes\\faradays\\layout\\_partial\\plugins\\comments\\gitalk.ejs 文件，设置 div 元素。 对 themes\\faradays\\layout\\after-footer-more.ejs 文件，增加脚本内容。 &lt;script&gt;// HHJ@20200822const gitalk = new Gitalk(&#123; clientID: &#x27;&lt;%- theme.gitalk.client_id %&gt;&#x27;, clientSecret: &#x27;&lt;%- theme.gitalk.client_secret %&gt;&#x27;, repo: &#x27;&lt;%- theme.gitalk.repo %&gt;&#x27;, // The repository of store comments, owner: &#x27;&lt;%- theme.gitalk.owner %&gt;&#x27;, admin: [&#x27;&lt;%- theme.gitalk.owner %&gt;&#x27;], id: (location.pathname).substring(0,49), // Ensure uniqueness and length less than 50 distractionFreeMode: false // Facebook-like distraction free mode &#125;) gitalk.render(&#x27;gitalk-container&#x27;)&lt;/script&gt; 经过2天来回测试，终于完成，本地测试无法显示（报错信息为 Error: Network Error），不过部署到 GitHub 上后可以进行评论。当然，每个文章都需要作者进行初始化点击才能评论。 增加文章页中，作者增加感应高亮显示功能： themes\\faradays\\layout\\_partial\\post\\title.ejs 对作者标签增加 class 值 &lt;li class=&quot;faradays-author&quot;&gt; themes\\faradays\\source\\css\\style.styl 增加感应变色样式 .faradays-author /*HHJ@20200822，设置感应后发射光线*/ &amp;:hover //background-color: #4cc9f0 background-color: main-color color: white // 颜色与背景色一致 -webkit-box-shadow: 10px 10px 99px 6px rgba(255,165,0,1) -moz-box-shadow: 10px 10px 99px 6px rgba(255,165,0,1) box-shadow: 10px 10px 99px 6px rgba(255,165,0,1) 优化完善时间轴功能 修改 themes\\faradays\\layout\\_partial\\timeline.ejs，修复时间轴功能排序随机导致同一年的文章被多次拆分的情况（内置的排序方法确实非常的便利）。 &lt;% var posts_fs = site.posts.sort(&#x27;-date&#x27;); %&gt;&lt;% posts_fs.each(function(post, i)&#123; %&gt; 修改 themes\\faradays\\layout\\_partial\\timeline.ejs，增加数字显示的标签 &lt;div class=&quot;timeline2-num&quot;&gt;&lt;%= (site.posts.length -i) %&gt;&lt;/div&gt; 修改 themes\\faradays\\source\\css\\timeline.styl ，增加相应的数字样式： .timeline2-article-date .timeline2-num display table-cell //display inline-block position absolute //color #222 text-align center vertical-align center top 50% width 2rem left -3.5rem 增加限定条件，确保“存档”字眼不出现在首页，themes\\faradays\\layout\\_partial\\archive.ejs &lt;% if (! is_home())&#123; %&gt; &lt;div style=&quot;font-size:37px; text-align:center;padding-top:47px;&quot;&gt;&lt;%- theme.desc.archive %&gt;&lt;/div&gt;&lt;% &#125; %&gt; 修改 themes\\faradays\\layout\\_partial\\archive.ejs 增加 post_num 参数用做数字显示，并增加 div 标签： &lt;% page.posts.each(function(post, post_num)&#123; %&gt; &lt;!-- HHJ@20200822 --&gt; &lt;% if ( is_home() )&#123; %&gt; &lt;div class=&quot;article-header-num&quot;&gt;&lt;%- (page.posts.length - post_num) %&gt; &lt;/div&gt; &lt;% &#125; %&gt; themes\\faradays\\source\\css\\_partial\\article.styl 增加数字样式，通过 margin + top 值实现两个 div 平齐显示 .article // HHJ@20200823 //margin: block-margin margin: -(block-margin)*6 0 block-margin background: #fff border-radius: 0 box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2).article-header-num // HHJ@20200823，数字编号在文章元素的左侧 // 内边距 //padding: (article-padding)*2 // 外边距 margin: article-padding 0 (block-margin)*5 0 position: relative top: (article-padding)*2 left: -1em color: main-color font-size: 3em .article-inner @extend $block overflow: inherit // HHJ@20200823 margin-top: 230px themes\\faradays\\source\\css\\_partial\\mobile.styl 同样修改确保手机样式匹配 .article //margin: 10px 10px margin: -180px 10px 20px 由于涉及 themes\\faradays\\layout\\post.ejs 的兼容性问题，themes\\faradays\\layout\\_partial\\article.ejs 作为公用文件，不再添加 div 标签。 0.1.3，30.09h，2020/08/18 22:23:18 修改 themes\\faradays\\source\\css_partial\\header.styl 的 header-title 的样式，同时对文本进行微小的调整。 调整页脚版本所有人的名称（新增 theme.owner 变量），调整文章的作者名称。 在封面页下方增加标签显示（ themes\\faradays\\layout\\_partial\\header.ejs，themes\\faradays\\source\\css\\_partial\\sidebar.styl ）： 基于 sidebar-menu-box-tags 、 sidebar-menu-box-categories 增加 tags2 、 categories-2 样式。 style内联样式的权值&gt;&gt;ID选择器&gt;&gt;class选择器&gt;&gt;标签选择器 参考 https://hexo.io/zh-cn/docs/helpers#tagcloud 设置标签云格式（默认标签的大小会发生变化，无法通过样式来设置） 增加原创字段 original ，并修改 themes\\faradays\\layout_partial\\post\\title.ejs ，增加以下内容： &lt;!-- HHJ@20200812 --&gt;&lt;li&gt; &lt;% if (page.original &amp;&amp; page.original.length)&#123; %&gt; &lt;i class=&quot;fa fa-copyright&quot;&gt;&lt;/i&gt; &lt;%- page.original %&gt; &lt;% &#125; %&gt;&lt;/li&gt; 同步修改 themes\\faradays\\layout\\_partial\\post\\copyright.ejs 文件，增加版权声明。 参考 https://www.runoob.com/font-awesome/fontawesome-icons-directional.html 修改文章导航的图标， themes\\faradays\\layout\\_partial\\post\\nav.ejs 中 fa-hand-o-left 、fa-hand-o-right 替换为 fa-arrow-circle-left、fa-arrow-alt-circle-right，或 fa-arrow-left、 fa-arrow-right，或 。 修改 themes\\faradays\\_config.yml 中各个栏目的图标名称。 参考 ayer 主题的归档页格式，创建时间轴（时间轴）！ 创建新页面： hexo new page timeline ，并在头部引入 layout : timeline 设定。 设定页面内容：参考 archive.ejs 内容创建 themes\\faradays\\layout\\_partial\\timeline.ejs 文件。 变量 page.posts 修改为 site.posts 。 class 标签的修改: 原始样式 样式1 样式2 archives timeline page-type-title archives-wrap media archive-year-wrap archive-year archives - 设定页面格式：创建 `themes\\faradays\\source\\css\\timeline.styl` 文件，并 `@import &quot;timeline&quot;` 引入 `themes\\faradays\\source\\css\\style.styl` 文件中。经过2天来回反复试验，初步完成时间轴设置。 参考 https://github.com/willin/hexo-wordcount ，增加字数统计功能 npm install hexo-wordcount --save 安装相关插件； 修改 themes\\faradays\\layout_partial\\post\\title.ejs 文件： &lt;!-- HHJ@20200815，增加文章字数统计 --&gt;&lt;ul&gt; &lt;li&gt;&lt;i class=&quot;fa fa-file-word-o&quot;&gt;&lt;/i&gt; &lt;span class=&quot;post-count&quot;&gt;&lt;%= wordcount(post.content) %&gt; words&lt;/span&gt; &lt;/li&gt; &lt;li&gt;&lt;i class=&quot;fa fa-youtube-play&quot;&gt;&lt;/i&gt; &lt;span class=&quot;post-count&quot;&gt;&lt;%= min2read(post.content) %&gt; min&lt;/span&gt; &lt;/li&gt;&lt;/ul&gt; 修改 themes\\faradays\\layout\\_partial\\plugins\\sites\\visit.ejs 文件： &lt;!-- HHJ@20200815，增加站点字数统计 --&gt;&amp;emsp;&lt;%- theme.access_counter.site_words %&gt;&lt;span class=&quot;post-count&quot;&gt;&lt;%= totalcount(site) %&gt;&lt;/span&gt; 修改 themes\\faradays\\_config.yml，增加 access_counter.site_words 参数（写在 ejs 中会出现中文乱码现象）。 增加作者的可选选项 post.author ，如果不设置作者，则为默认作者。同步修改 themes\\faradays\\layout\\_partial\\post\\copyright.ejs 文末作者说明。 调整 URL 格式为 &lt;category&gt;/YYYYMMDDHHMM，暂不考虑保留中文标题形式，因为太长且不直观。 纠正一个文章中调用 2 次不蒜子统计导致后一个不显示的问题（直接删除，因为系统使用 id 标签的方式必须唯一） 修改 themes\\faradays\\layout\\_partial\\archive.ejs ，在文件顶部增加归档页的标题内容： &lt;!-- HHJ@20200817 --&gt;&lt;div style=&quot;font-size:37px; text-align:center;padding-top:0.7%;&quot;&gt;&lt;%- theme.desc.archive %&gt;&lt;/div&gt; 0.1.2，7.70h，2020/08/07 00:07:27 修改 themes\\faradays\\layout_partial\\article.ejs，删除 &lt;div class=&quot;article-img&quot;&gt; ... &lt;/div&gt; 去除首页文章的封面图，并调整文字内容增加跳转链接（并去除下划线效果）； &lt;!-- HHJ@20200805 --&gt;&lt;div class=&quot;article-feed&quot;&gt; &lt;p&gt; &lt;a href=&quot;&lt;%- url_for(post.path) %&gt;&quot; &lt;% if (theme.open_new_link) &#123;%&gt; target=&quot;_blank&quot; &lt;% &#125; %&gt; style=&quot;text-decoration: none;&quot; &gt; &lt;%- post.excerpt ? post.excerpt : truncate(strip_html(post.content), &#123; length: theme.excerpt_length &#125;) %&gt; &lt;/a&gt; &lt;/p&gt;&lt;/div&gt; 修改 themes\\faradays\\source\\css_partial\\article.styl ，去除左侧为封面预留的空间，如下： .article-feed /* HHJ@20200719 */ /* margin-left: 320px */ /* 上、右、下、左 */ margin: 3px 6px 3px 6px 修改 themes\\faradays\\_config.yml 中 excerpt_length 值，由 190 修改为 288 。 为完善文章导航标题高亮效果、解决标题导航时被遮挡问题，修改如下： &lt;script&gt; tocbot.init(&#123; scrollSmooth: true, // 点击目录时，页面下移一定距离（避免固定顶部的菜单遮盖），单位为 px scrollSmoothOffset: -44, // 避免高亮显示不当 headingsOffset: 47, &#125;);&lt;/script&gt; 由于去除了文章的封面，因此文章的导航应该提前出现： showToc: function (scrollTop) &#123; //if (scrollTop / clientHeight &gt;= 0.4) &#123; //if (scrollTop / clientHeight &gt;= 0.1) &#123; if (scrollTop &gt;= 90) &#123; toc.removeClass(&quot;post-toc-top&quot;); toc.addClass(&quot;post-toc-not-top&quot;); &#125; else &#123; toc.removeClass(&quot;post-toc-not-top&quot;); toc.addClass(&quot;post-toc-top&quot;); &#125;&#125;, 测试表明上述修改已经及时生成相应的 class，但是相应的内容仍不显示。 为使得右侧的置顶图标尽早出现（超过标题栏）， themes\\faradays\\source\\js\\main.js 设置如下： showBackTop: function (scrollTop) &#123; //backTop.css(&#x27;display&#x27;, (scrollTop &gt; clientHeight) ? &quot;block&quot; : &quot;none&quot;); backTop.css(&#x27;display&#x27;, (scrollTop &gt; 90) ? &quot;block&quot; : &quot;none&quot;);&#125;, 为了确保 tocbot 尽早展现目录，修改 themes\\faradays\\source\\css\\tocbot.styl 如下： .tocbot // HHJ@20200806 //top 350px top 35px 优化打赏样式 修改 themes\\faradays\\source\\css_partial\\reward.styl ，调整显示宽度： .reward-lay // HHJ@20200806 //width: 360px width: 660px .reward-code // HHJ@20200806 //width: 200px 修改 themes\\faradays\\layout_partial\\post\\reward.ejs ，设置图片并排显示： &lt;div class=&quot;reward-content&quot;&gt; &lt;div class=&quot;reward-code&quot;&gt; &lt;!-- HHJ@20200806 ，取消图片预览，且两个图片同时显示，减少操作--&gt; &lt;table style=&quot;float:center; margin:auto;&quot;&gt;&lt;tr&gt; &lt;td&gt;&lt;img src=&quot;&lt;%- url_for(&#x27;images/微信-收款码.jpg&#x27;) %&gt;&quot; alt=&quot;微信&quot; border=0&gt;&lt;/td&gt; &lt;td&gt;&lt;img src=&quot;&lt;%- url_for(&#x27;images/支付宝-收款码.jpg&#x27;) %&gt;&quot; alt=&quot;支付宝&quot; border=0&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class=&quot;reward-select&quot;&gt; &lt;/div&gt;&lt;/div&gt; 将作者标识调整到标题下方： 修改 themes\\faradays\\layout\\_partial\\post\\copyright.ejs ，删除以下内容： &lt;footer&gt; &lt;a href=&quot;&lt;%- config.url %&gt;&quot;&gt; &lt;img src=&quot;&lt;%- url_for(theme.logo) %&gt;&quot; alt=&quot;&lt;%- config.author %&gt;&quot;&gt; &lt;%- config.author %&gt; &lt;/a&gt;&lt;/footer&gt; 修改 themes\\faradays\\_config.yml ，增加: user-logo: images/f1.png 修改 themes\\faradays\\layout_partial\\post\\title.ejs ，增加以下内容： &lt;!-- HHJ@20200806 --&gt;&lt;li&gt; &lt;!-- &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; --&gt; &lt;a href=&quot;&lt;%- config.url %&gt;&quot;&gt; &lt;img src=&quot;&lt;%- url_for(theme.user-logo) %&gt;&quot; alt=&quot;&lt;%- config.author %&gt;&quot; height=&quot;10&quot; width=&quot;10&quot;&gt; &lt;%- config.author %&gt; &lt;/a&gt;&lt;/li&gt; 调整打赏至分享所在的行： themes\\faradays\\source\\css_partial\\reward.styl : .page-reward margin: 20px 33% text-align: center // HHJ@20200806 position: absolute top: -41px z-index: 3 a // HHJ@20200806 //width: 50px //height: 50px width: 37px height: 37px themes\\faradays\\source\\css_partial\\share.styl : .post-share-fab display: block //width: share-fab-size //height: share-fab-size width: 37px height: 37px line-height: 37px themes\\faradays\\layout_partial\\article.ejs ，将打赏的内容放在分享的内容所在的 footer 中： &lt;footer class=&quot;article-footer&quot;&gt; &lt;!-- HHJ@20200806，调整位置 --&gt; &lt;% if (! index)&#123; %&gt; &lt;%- partial(&#x27;post/reward&#x27;) %&gt; &lt;% &#125; %&gt;&lt;/footer&gt; 0.1.1，1.5h，2020/07/19 21:00:28 实现主页和文章页横幅格式自定义。检查发现 miho 主题中的封面图使用 themes\\miho\\layout_partial\\header.ejs 来定义，但是只有 themes\\miho\\layout\\layout.ejs 引用了。 &lt;%- partial(&#x27;_partial/header&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt; 删除上述代码后，所有的页面都将没有封面图等内容。 根据 oschina 网友 Rain_mei 的文章，is_home（首页）、 is_post（文章）、 is_page（独立页） 等函数可以实现分不同页面设置不同布局。如下： &lt;!-- HHJ@20200719 --&gt;&lt;% if (is_home())&#123; %&gt; &lt;%- partial(&#x27;_partial/header&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt;&lt;% &#125; %&gt;&lt;% if (is_post())&#123; %&gt; &lt;%- partial(&#x27;_partial/header-post&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt;&lt;% &#125; %&gt; 修改 themes\\miho\\layout\\_partial\\header-post.ejs 外层 class为 header-post ，同步修改 themes\\miho\\source\\css\\_partial\\header.styl 增加 header-post 的样式。 修改 themes\\miho\\source\\css\\_partial\\article.styl ，纠正首页中文章的标签三角形符号颜色未能自定义问题。 .article-header .header-cate&amp;:after /* HHJ@20200719，标签三角形 */ /* border-left: 10px solid #099 */ border-left: 10px solid main-bg-1 实现主题名称自定义，为后续制作个人主题做好准备。 mihoConfig 替换为 WebConfigmiho 替换 faradays 0.1.0，&gt;10h，2020/07/19 16:06:36根据对照选型，暂定使用 miho 主题，并根据 ayer 主题进行修改： - 完成封面更换； - 完成页面动态导航菜单的更换； - 调整页面主题色； - 适当调整页面布局及部分元素的颜色； - 更换 logo。 定制 D:\\WebSites\\faradays-studio.hexo\\themes\\ayer\\source 相关内容 \\dist\\main.css 解决标题过长显示不全问题 .cover-inner &#123;position:absolute;top:50%;left:50%;transform:translate(-50%,-100%)&#125;修改为（后者更好）：.cover-inner &#123;position:absolute;top:30%;left:25%;&#125;.cover-inner &#123;position:absolute; left:0; right:0; top: 37%; bottom:0; margin:auto;&#125; 放大首页的下拉箭头符号，便于点击 .cover-learn-more a&gt;i &#123;font-size:13rem;color:#fff;-webkit-animation:down 1s linear infinite;animation:down 1s linear infinite&#125; 更换logo #logo: /images/ayer-side.svglogo: /images/logo.png 基于 Miho 定制主题 修改 themes\\miho\\source\\css\\\\_variables.styl ，设定主题色调： // Main// 主色调//main-color = #0cc // 天青色//main-color = #e23 //红色main-color = orange 修改 themes\\miho\\layout\\_partial\\header.ejs ，去除顶部浮动效果： &lt;!-- &lt;div id=&quot;header-menu&quot; class=&quot;header-menu-pos animated&quot;&gt; --&gt;&lt;!-- HHJ@20200711 删除动态效果，实现顶部固定效果 --&gt;&lt;div id=&quot;header-menu&quot; class=&quot;header-menu-pos&quot;&gt; 对应地，修改 themes\\miho\\source\\css\\_partial\\header.styl ，设置背景色： .header-menu-pos /* background: none */ /* HHJ@20200711，设置背景色 */ background: main-color 或： background: grey 修改 themes\\miho\\source\\css\\\\_variables.styl ，变更背景图的高度（固定高度）： banner-height = 420px 对应地，修改 themes\\miho\\source\\css\\_partial\\header.styl ，实现自动高度： #header/* HHJ@20200711 *//* height: banner-height *//* height: auto */height: 100% 对应地，修改 themes\\miho\\source\\css\\_partial\\header.styl ，实现垂直居中： /* HHJ@20200711 *//* padding-top: 50px */position: relativetop: 50%transform: translateY(-50%)或（测试表明，下述方法更好，因为每个页面的内容高度不同，因此导致其位置不固定）padding-top: calc(32vh - 1em) 修改 themes\\miho\\source\\css\\_partial\\header.styl ，修改标题颜色： #header-title /* HHJ@20200711 */ /* color: #fff */ color: orange#header-description /* HHJ@20200711 */ /* color: #666 */ color: cyan 对应地，修改 themes\\miho\\source\\css\\_partial\\sidebar.styl，避免弹窗被全页背景图遮挡 .sidebar-menu-box /* HHJ@20200712 */ /* overflow: hidden */ z-index: 997 overflow: auto 修改 themes\\miho\\source\\css\\_partial\\sidebar.styl，右侧 sidebar 的浮动位置 /* HHJ@20200711 *//* right: calc(50% - 525px) */right: 17pxright: 2% 修改 themes\\miho\\source\\css\\_partial\\article.styl ，变更左侧目录导航的位置（配合后续修改宽度）： .post-toc-pos /* HHJ@20200711 */ /* left: calc(50% - 660px) */ //left: 18px left: 1% .post-toc-wrap position: fixed border-radius: 3px /* HHJ@20200711 */ /* width: 200px */ /* max-height: 400px */ /* color: #313131 */ max-width: 15% max-height: 500px color: #111 修改 themes\\miho\\source\\css\\_variables.styl，变更文章的最小宽度： // Layoutblock-margin = 30pxarticle-padding = 15pxmobile-nav-width = 280px// main-column = 9main-column = 12sidebar-column = 3columns = main-column + _sidebar-column 修改 themes\\miho\\source\\css\\style.styl，对文章内容进行整体右侧偏移： .outer clearfix() max-width: (column-width + gutter-width) * columns + gutter-width /* HHJ@20200711，上 右 下 左 按顺时针排序，从右侧浮动、控制左侧空间用于目录 */ /* margin: 0 auto */ margin: 0 7% 0 15% padding: 0 gutter-width 修改 themes\\miho\\layout\\_partial\\post\\reward.ejs ，打赏样式由图片改为文字： &lt;div class=&quot;reward-select&quot;&gt; &lt;% if(wechat) &#123;%&gt; &lt;label class=&quot;reward-select-item checked&quot; data-id=&quot;wechat&quot; data-wechat=&quot;&lt;%- url_for(wechat) %&gt;&quot;&gt;微信 &lt;!-- &lt;img class=&quot;reward-select-item-wechat&quot; src=&quot;&lt;%- url_for(&#x27;images/wechat.png&#x27;) %&gt;&quot; alt=&quot;微信&quot;&gt; --&gt; &lt;/label&gt; &lt;% &#125; %&gt; &lt;% if(alipay) &#123;%&gt; &lt;label class=&quot;reward-select-item&quot; data-id=&quot;alipay&quot; data-alipay=&quot;&lt;%- url_for(alipay) %&gt;&quot;&gt;支付宝 &lt;!-- HHJ@20200711 ，取消图片预览，采用文字展示--&gt; &lt;!-- &lt;img class=&quot;reward-select-item-alipay&quot; src=&quot;&lt;%- url_for(&#x27;images/alipay.png&#x27;) %&gt;&quot; alt=&quot;支付宝&quot;&gt; --&gt; &lt;/label&gt; &lt;% &#125; %&gt;&lt;/div&gt; 修改页脚格式 themes\\miho\\layout\\_partial\\footer.ejs 修改 themes\\miho\\source\\css\\_partial\\sidebar.styl，设置搜索框背景色 .search-wrap /* HHJ@20200711 */ /* background: #fff */ /* opacity: 0 */ /* background: #888 */ /* opacity: 0.5 */ background: rgba(0,0,0,0.8) 修改 themes\\miho\\layout\\_partial\\footer.ejs，设置版权声明 修改 themes\\miho\\layout\\_partial\\plugins\\sites\\visit.ejs ，设置访客文字格式 修改 themes\\miho\\source\\css\\_partial\\header.styl ，固定 logo 显示大小，避免导入的图片大小不一 #logo @extend $logo-common img /* HHJ@20200711 */ width: 133px height: 133px 对应修改 themes\\miho\\source\\css\\_partial\\reward.styl ，增加 img 标签格式来设定打赏二维码大小 .reward-content margin: 20px 0 .reward-code width: 200px margin: 0 auto img max-height: 200px vertical-align: middle border: 1 display: inline-block 修改 themes\\miho\\layout\\_partial\\after-footer.ejs ，增加导航目录（miho主题为 post-toc-wrap，ayer 主题为 tocbot ）；以下做法能够添加 div ，但是 css 效果没有设置好 &lt;!-- HHJ@20200719 --&gt;&lt;!-- 设置文章导航 --&gt;&lt;!-- &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/tocbot/4.11.1/tocbot.min.js&quot;&gt;&lt;/script&gt; --&gt;&lt;%- js(&#x27;/js/tocbot&#x27;) %&gt;&lt;div class=&quot;tocbot&quot; style=&quot;position:absolute;left:10px;top:350px;max-width:230px;max-height:300px;border-radius:3px;line-height:23px;background:rgba(88, 88, 88, 0)&quot;&gt;&lt;/div&gt;&lt;script&gt; // Tocbo http://tscanlin.github.io/tocbot/ tocbot.init(&#123; tocSelector: &#x27;.tocbot&#x27;, contentSelector: &#x27;.article-inner&#x27;, headingSelector: &#x27;h1, h2, h3, h4, h5, h6&#x27;, hasInnerContainers: true, scrollSmooth: true, scrollContainer: &#x27;main&#x27;, positionFixedSelector: &#x27;.tocbot&#x27;, positionFixedClass: &#x27;is-position-fixed&#x27;, fixedSidebarOffset: &#x27;auto&#x27; &#125;);&lt;/script&gt; 将 ayer 主题中的 tocbot.styl 导入 themes\\miho\\source\\css 文件夹并修改其颜色设置，同步修改 themes\\miho\\source\\css\\style.styl 文件导入 tocbot 的样式文件： @import &quot;tocbot&quot; 通过修改 themes\\miho\\layout\\_partial\\post\\toc.ejs 文件，从而与 after-footer.ejs 相关 div 的设定匹配，同时修改 tocbot.styl 样式。"}],"posts":[{"title":"2020年随笔","slug":"2020年随笔","date":"2020-09-02T13:11:05.000Z","updated":"2020-09-02T13:11:05.000Z","comments":true,"path":"202009022111/","link":"","permalink":"https://faradays-studio.gitee.io/202009022111/","excerpt":"","text":"2020/09/02，明月 凌晨将寝，看见一轮明月从百叶窗的缝隙中漏了出来。江天一色无纤尘，皎皎空中孤月轮，我想起来了我的老父亲，突然好一阵心酸。 这世界就这一轮明月，父亲看到的明月，和我看到的是不是一样的呢？我无从得知，但是我知道他清澈的心底，应该也和这明月一样，明朗、简洁、孤独的挂在那里！我现在正在重构的 hexo 主题，是否也能和它一样明朗呢？","categories":[{"name":"随笔","slug":"随笔","permalink":"https://faradays-studio.gitee.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"2020","slug":"2020","permalink":"https://faradays-studio.gitee.io/tags/2020/"},{"name":"随笔","slug":"随笔","permalink":"https://faradays-studio.gitee.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"苹果 Macbook Pro 笔记本从 U 盘启动以及重置开机密码的方法","slug":"苹果MacbookPro笔记本U盘启动与重置开机密码的方法","date":"2020-08-27T13:41:35.000Z","updated":"2020-09-02T13:21:47.065Z","comments":true,"path":"202008272141/","link":"","permalink":"https://faradays-studio.gitee.io/202008272141/","excerpt":"","text":"前几天，有位老领导委托我对其苹果 Macbook Pro 2018 笔记本进行优化处理。由于网上的资料比较零散、挂一漏万，因此我也来总结一下操作经验。 配置 U盘启动或者切换系统的方法 Macbook 没有 BISO 等设置，所谓的进入 U盘 PE 或者切换双系统的方法是：按住 Option 键，然后按电源键开机，那么就会出现一个类似于 Windows 启动项的界面，从而用于实现改变启动方式的效果。 苹果电脑安装 Windows 系统，一般都是通过 Boot Camp 等软件来实现。对于双系统的主机，也可以在 Windows 系统中输入 “恢复” 找到相应的菜单进入切换启动盘的功能，不过具体功能我没有完整测试。 有意思的是，进入 MacOS 的启动方式选择界面后，如果接入 U盘 PE，那么也能很快识别出来；跟我之前在 BISO 里边配置 U盘启动需要提前接入还是有明显差别的。 Macbook 重置密码的方法结合网络资料测试了一下，操作流程如下： 按住 Option 键，然后按电源键开机； 按方向键选择 Macintosh （苹果） 系统，按 Command + r 后自动进入系统恢复界面； 在经历进度条界面一会后，选择界面的操作语言后，出现以下界面，执行菜单命令 使用工具→终端 ，弹出终端界面： 在终端中执行 resetpassword ，在弹窗中选择需要重置的用户名，并填入新密码，然后存储到系统即可完成修改。 完成修改后重新使用第 1 步的方法进入苹果系统，在登入后可能会提示钥匙串密码是否修改等内容，我选择了修改成一致后，重复登录检查账户使用正常。 需要注意的是，上述方法仅应使用在合法授权的电脑上，请勿滥用！践行社会主义核心价值观，人人有责！ 版本说明参考文献 学知网.苹果笔记本进入BIOS设置教程[EB/OL].https://www.jmqz1000.com/dnzs/23488.html, 2020/08/24. 变更说明 1.0.0，2020/08/27 22:29:16，初始版本。 1.0.1，2020/08/28 18:11:26，重新组织语言，去除一些自以为是的废话。","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Apple","slug":"Apple","permalink":"https://faradays-studio.gitee.io/tags/Apple/"},{"name":"Macbook","slug":"Macbook","permalink":"https://faradays-studio.gitee.io/tags/Macbook/"},{"name":"MacOS","slug":"MacOS","permalink":"https://faradays-studio.gitee.io/tags/MacOS/"},{"name":"密码","slug":"密码","permalink":"https://faradays-studio.gitee.io/tags/%E5%AF%86%E7%A0%81/"},{"name":"操作系统","slug":"操作系统","permalink":"https://faradays-studio.gitee.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"PE","slug":"PE","permalink":"https://faradays-studio.gitee.io/tags/PE/"},{"name":"U盘","slug":"U盘","permalink":"https://faradays-studio.gitee.io/tags/U%E7%9B%98/"}]},{"title":"Windows 批处理的字符运算","slug":"Windows批处理的字符运算经验","date":"2020-08-20T01:27:42.000Z","updated":"2020-08-20T01:27:42.000Z","comments":true,"path":"202008200927/","link":"","permalink":"https://faradays-studio.gitee.io/202008200927/","excerpt":"","text":"字符运算历来是编程中的重要内容，如何拼接字符，如何截取字符，如何判断字符是否存在，如何判断两个字符串是否相同，成为了编程任务中的重要环节。因此，我结合网络的资料和个人的实践经验来总结一下。 Windows 批处理中字符的基本常识 批处理中变量的赋值符号两侧不能包含空格，如 set str_date=&#39;20200820&#39;，这与很多编程规范是相悖的。 批处理中的字符可以不添加双引号，但是如果包含空格的话，必须使用引号，，如 set str_name=&quot;20200820 Windows 批处理的字符运算经验总结&quot;。 自定义变量使用 % 来包围来进行引用，即 %变量% ；而 Windows 内置变量（含文件路径变量扩展）则使用 % 符号来引导，即 %内置变量 。 截取字符串一般性的字符截取 基本语法： %**变量名**:~**起点位置**,**截取数量|终点位置**% 起点位置 ：如果为正数，那么就是从左往右截取，而如果为负数，那么就是说从右向左截取；不过无论为正还是为负，截取结果都是不包含处于 起点位置 的那个字符的。 截取数量|终点位置 ：如果为正数，那么就是单纯的 截取数量 ；如果为负数，那么应当表述为 终点位置 ，而且，与 起点位置 对应，截取结果也是不包含该负数所对应的字符的，即上述的 -5 对应的是终点位置为右侧第 6 个字符截止。 举例说明，如下： echo onset ifo=abcdefghijklmnopqrstuvwxyz0123456789echo %ifo%echo.echo 截取前4个字符：%ifo:~0,4%echo 截取年度：%date:~0,4%echo.echo 截取最后2个字符：%ifo:~-2%echo 截取星期：%date:~-2%echo.echo 截取第一个到倒数第6个字符：%ifo:~0,-5%echo 截取日期（含分隔符）：%date:~0,-3%echo.echo 从第5个字符开始，截取2个字符：%ifo:~4,2%echo 截取月份：%date:~5,2%echo 截取天数：%date:~8,2%echo.echo 从倒数第14个字符开始，截取5个字符：%ifo:~-14,5%echo 截取秒数：%time:~3,2%echo.echo 当前时间是：%time% 即 %time:~0,2%点%time:~3,2%分%time:~6,2%秒%time:~9,2%厘秒pause 当然，我最常用的就是对日期、时间等内置变量的操作。 文件路径字符的截取主要依靠 Windows 内置的扩展变量用法来进行。 执行 for /? 可以查看路径扩展的 举例说明，如下（注意，需要另存为 test.bat 文件形式执行）： @echo offecho 当前路径的完整字符串：%0echo 当前路径的完整字符串（如被双引号包围，去除双引号）：%~0echo 当前路径的所在分区：%~d0echo 当前路径的目录：%~p0echo 文件名：%~n0echo 扩展名：%~x0echo 文件属性：%~a0echo 修改时间：%~t0echo 文件大小：%~z0pause 路径处理，往往都配合 for 函数进行操作。 未完待续… 版本说明变更日志 2020/08/20 10:49:23，创建文章。 参考索引 CharyGao.DOS命令（cmd）批处理：替换字符串、截取字符串、扩充字符串、获取字符串长度[EB/OL].https://www.cnblogs.com/Chary/p/No0000A4.html, 2020/08/20.","categories":[{"name":"编程","slug":"编程","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://faradays-studio.gitee.io/tags/Windows/"},{"name":"批处理","slug":"批处理","permalink":"https://faradays-studio.gitee.io/tags/%E6%89%B9%E5%A4%84%E7%90%86/"},{"name":"字符运算","slug":"字符运算","permalink":"https://faradays-studio.gitee.io/tags/%E5%AD%97%E7%AC%A6%E8%BF%90%E7%AE%97/"}]},{"title":"Hello World（世界，你好）","slug":"世界，你好","date":"2020-08-08T16:00:00.000Z","updated":"2020-08-23T16:02:19.426Z","comments":true,"path":"202008090000/","link":"","permalink":"https://faradays-studio.gitee.io/202008090000/","excerpt":"","text":"追求卓越！","categories":[{"name":"Faradays' Studio","slug":"Faradays-Studio","permalink":"https://faradays-studio.gitee.io/categories/Faradays-Studio/"}],"tags":[]},{"title":"网站框架更新概要","slug":"chang-log","date":"2020-06-07T08:00:50.000Z","updated":"2020-09-06T16:07:47.937Z","comments":true,"path":"202006071600/","link":"","permalink":"https://faradays-studio.gitee.io/202006071600/","excerpt":"","text":"TO-DO 配置评论系统，实现文章留言；； 解决链接跳转错误问题（累经数月间歇性反复测试，初步认为为编译时不支持 ? 符号的使用）； Markdown 文件添加脚本引用，并添加计数功能。 系统更新日志 2020/04/19 16:02:08，创建《更新日志》； 2020/04/19 21:47:44，整合原有静态网站，并入站点中跳转。 2020/04/22 0:54:40，修改 URL 设置，修改《如何使用 svg.js 创建 svg 文档》文章内容为中文。 2020/04/22 21:50:16，参考网友方法，纠正网页点击时变成了下载的 Bug，主要原因是 permalink 末尾没有添加 /符号，最终修改为 permalink: :lang/:title/ 。 2020/04/25 22:56:19，修改 post 模板增加封面默认页。 2020/07/19 21:02:13，投入了大量的时间研究主题的定制，初步决定个性化修改后的主题名为 Faradays 。 2020/08/07 00:01:17，修改 Faradays 主题，调整文章页打赏、分享、目录导航、作者等内容布局样式。 2020/08/18 22:23:18，博客升级至 v0.1.3，主题增加时间轴、全站字数统计等功能，完成原创字段、图标等一系列更新。 2020/08/23 01:18:51，增加 gitalk评论、代码高亮、文章序号等功能，并调整原创显示样式、URL格式（去除语言字段）等。 2020/08/25 23:03:26，升级至 v0.1.5，开展独立页功能测试，增加多作者署名、文章页QQ联系博主、增加about页等功能，并调整了首页元素的 hover 样式、版权声明等内容。 2020/08/27 22:39:43，经过 5.66h 的尝试，删除部分不恰当的 commit，重新生成网址文件；对本地的 hexo 版本库和独立的 Git 文件库均进行了处理，确保版本一致、可用。 2020/08/28 22:59:29，升级至 v0.1.6，增加 sitemap、备用链接功能，调整署名、关键词设置，完成百度站长平台抓取 Gitee 主站的适配。 2020/08/29 20:13:01，升级到 v0.1.7，主要是 SEO 适配方面的改进。包括调整 sitemap 生成结果，同时部署到 Gitee 、 GitHub 两个站点；更新站点 logo ，调整文件头的作者、关键词、描述等方面的设置，调整页脚引用的 ref 参数等。 2020/08/29 23:56:38，纠正某文章图片链接填写方式不正确的问题；增加百度自动推送的脚本。 2020/08/30 11:20:03，增加页面加载计时、去除百度自动推送脚本，解决作者分隔符添加不当等问题。 2020/09/07 00:07:38，升级到 v0.2.0，实现主题的 layout 文件解耦升级、优化 IE 9+ 的兼容效果、增加夜间模式等重大功能升级，优化代码显示样式、首页/归档页/时间轴页内容居中、标签云、完善主题文档等功能。 参考文献 猴子请来的救兵.Hexo主题开发[EB/OL].https://www.cnblogs.com/yyhh/p/11058985.html, 2020/07/19. 文章介绍的主题开发的内容，对于定制 Faradays 主题起了最初的启发意义。 梅卫平.Hexo博客实现首页和子页面不同layout布局[EB/OL].https://my.oschina.net/u/3372900/blog/911534, 2020/07/19. 参考该文章，分离首页和文章页的样式。 MinHow.MiHo-主题安装和配置详情[EB/OL].https://blog.minhow.com/articles/blog/installation-configuration/, 2020/07/19. 网站主题基于 MiHo 修改，揉入了 Ayer、3-hexo 等主题的特色。在此，特别提出感谢！ 沈宇.Ayer中文说明[EB/OL].https://shen-yu.gitee.io/2019/ayer/, 2020/07/19. 网站主题参考了部分 Ayer 的设计思路。 MOxFIVE.Yelee —— 简而不减 Hexo 双栏博客主题[EB/OL].http://moxfive.xyz/yelee/, 2020/08/22. Tom-shushu.一款超好用的第三方评论插件--GITALK[EB/OL].https://www.cnblogs.com/Tom-shushu/p/10970526.html, 2020/08/22. 参考该文章完成 gitalk 配置。 Tommy Chen, HEXO官方文档.hexo 变量[EB/OL].https://hexo.io/zh-cn/docs/variables.html, 2020/08/22. 非常有意义的官方文章。 Tommy Chen, HEXO官方文档.hexo 辅助函数（Helpers）[EB/OL].https://hexo.io/zh-cn/docs/helpers, 2020/08/22. 非常有意义的官方文章。 菜鸟教程.Font Awesome 参考手册[EB/OL].https://www.runoob.com/font-awesome/fontawesome-reference.html, 2020/08/23. 参考调整部分图标。 杨玉杰.Hexo 主题 3-hexo[EB/OL].https://yelog.org/2017/03/07/3-hexo/, 2020/08/23. 作者也多年来进行了主题的研究，有空可以参照思考。 动力节点.CSS八种让人眼前一亮的HOVER效果[EB/OL].https://zhuanlan.zhihu.com/p/188620420, 2020/08/23. 参考完成了霓虹效果。 chalkit.修改hexo sitemap 生成插件中的链接模板[EB/OL].https://www.jianshu.com/p/7f7f81e3ab24, 2020/08/28. 参考配置形成两个站点分别使用的 sitemap 文件。 ha_weii.hexo文件参数及其相关说明[EB/OL].https://www.jianshu.com/p/d1dedae4d970, 2020/08/28. 该文章提到的主题配置文件 _config.yml 的参数含义，可以后期研究一下，也与阅读官方部分功能说明时形成印证效果。 kobe1700.hexo-theme-snippet[EB/OL].https://gitee.com/kobe1700/hexo-theme-snippet, 2020/08/29. 设置文章过期等做法可以参考 Houmin.Hexo NexT 添加多级相册功能[EB/OL].https://houmin.cc/posts/d487dd02/, 2020/08/29. 文章提出了设置多级相册的方法，很有意思。 胖逆的嘟嘟.hexo干货系列：（六）hexo提交搜索引擎（百度+谷歌）[EB/OL].https://www.cnblogs.com/tengj/p/5357879.html, 2020/08/29. 参照设置自动推送方法。 百度资源搜索平台.平台工具使用帮助-链接提交[EB/OL].https://ziyuan.baidu.com/college/courseinfo?id=267&amp;page=2, 2020/08/29. 文章提出，百度自动推送功能已暂停使用。 叶少翔.js统计页面加载时间[EB/OL].https://blog.csdn.net/jiangzunshao/article/details/53040785, 2020/08/30. 参照设置了了页面加载的时间计算脚本。 周思伟.hexo-theme-yilia-plus[EB/OL].https://github.com/JoeyBling/hexo-theme-yilia-plus, 2020/08/30. 这个主题关于组件的集成思路可以参考。 恶魔萝莉控.给博客添加夜间模式[EB/OL].https://nocilol.me/archives/code/add-night-mode-to-blog/, 2020/09/05. 参考这个设置了主题夜间模式的脚本。 crosschannel.cc.面向小白的Hexo添加暗色模式教程[EB/OL].https://crosschannel.cc/daily/hexo%E6%B7%BB%E5%8A%A0%E6%9A%97%E8%89%B2%E6%A8%A1%E5%BC%8F.html, 2020/09/05. 该文章提出了使用媒体查询的方式来切换夜间模式，可以参考，下一步研究。 小康.Hexo博客之butterfly主题优雅魔改系列（持续更新）[EB/OL].https://www.antmoe.com/posts/a811d614/index.html, 2020/09/05. 作者的魔改主题，有空可以研究。 阳光派Plus.hexo之Volantis添加暗黑模式[EB/OL].https://www.zyoushuo.cn/post/e8f5.html, 2020/09/05. 作者的切换模式的动画，很有特色。 菜鸟教程.HTML DOM getElementsByClassName() 方法[EB/OL].https://www.runoob.com/jsref/met-document-getelementsbyclassname.html, 2020/09/06. 通过该文章，学会对获取的元素进行长度处理，避免没有元素却执行 remove 的操作。 葵花点穴手.div onload事件[EB/OL].https://blog.csdn.net/skylzc/article/details/79436336, 2020/09/06. The onload event can only be used on the document(body) itself, frames, images, and scripts. In other words, it can be attached to only body and/or each external resource. The div is not an external resource and it’s loaded as part of the body, so the onload event doesn’t apply there.onload event it only supports with few tags like listed below: &lt;body&gt;, &lt;frame&gt;, &lt;iframe&gt;, &lt;img&gt;, &lt;input type=&quot;image&quot;&gt;, &lt;link&gt;, &lt;script&gt;, &lt;style&gt; .参考该文章，解决了灰暗模式的加载问题。","categories":[{"name":"开发笔记","slug":"开发笔记","permalink":"https://faradays-studio.gitee.io/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"日志","slug":"日志","permalink":"https://faradays-studio.gitee.io/tags/%E6%97%A5%E5%BF%97/"}]},{"title":"如何使用 svg.js 创建 svg 文档","slug":"如何使用svg.js创建svg文档","date":"2019-02-09T01:51:30.000Z","updated":"2019-02-10T13:51:52.000Z","comments":true,"path":"201902090951/","link":"","permalink":"https://faradays-studio.gitee.io/201902090951/","excerpt":"","text":"前段时间，我尝试了使用 svg.js 来创建 svg dom 文档时，并没有成功。经过反复多次的尝试，并网络检索了一些信息，初步确认为官方文档未及时更新，导致了编码错误。 使用 svg.js 遇到的问题举个例子，dom 文档 .html 的结构如下： &lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Creating SVG with SVG.js&lt;/title&gt;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;&lt;script src=&quot;https://cdn.bootcss.com/svg.js/3.0.11/svg.min.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt;&lt;script&gt; // write down your javascript here..&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 官方文档（见 https://svgjs.com/docs/3.0/getting-started/ ）对于 JavaScript 脚本环节的部分 &lt;script&gt;...&lt;/script&gt; 是这样写的： var draw = SVG(&#x27;drawing&#x27;).size(300, 300)var rect = draw.rect(100, 100).attr(&#123; fill: &#x27;#f06&#x27; &#125;) 上述脚本在 jsfiddle.net 网站中测试是无异常的，详见 https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz 。然而，无论我是在 IE 7.0 至 11.0，还是在 Chrome 58 内核的浏览器中，我的本地测试从未成功。因此，整整 2 天里，我都未能从试验的阴影中恢复过来，反反复复进行了无数次试验，均无果而终。 使用 svg.js 书写脚本和 DOM 的方法在无数次的一边尝试、一边网络搜索的过程中，我发现了以下可行的方法： 1. 方法 1 DOM 文档： &lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt; 脚本 1： var draw = SVG().addTo(&#39;#drawing&#39;).size(1024,200); 或采取以下脚本： 脚本 2： var draw = SVG().addTo(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 2. 方法 2 DOM 文档： &lt;div class=&quot;drawing&quot;&gt;&lt;/div&gt; 脚本 1： var draw = SVG().addTo(&#39;.drawing&#39;).size(1024,200); 或采取以下脚本： 脚本 2： var draw = SVG().addTo(&#39;.drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 3. 方法 3 DOM 文档： &lt;svg id=&quot;drawing&quot;&gt;&lt;/svg&gt; 脚本 1： var draw = SVG(&#39;#drawing&#39;).size(1024, 200); 或采取以下脚本： 脚本 2： var draw = SVG(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 收工完事！","categories":[{"name":"编程","slug":"编程","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://faradays-studio.gitee.io/tags/JavaScript/"},{"name":"SVG","slug":"SVG","permalink":"https://faradays-studio.gitee.io/tags/SVG/"}]},{"title":"How to creat svg document with svg.js","slug":"How-to-creat-svg-document-with-svg-js","date":"2019-02-08T01:00:30.000Z","updated":"2019-02-10T13:51:52.000Z","comments":true,"path":"201902080900/","link":"","permalink":"https://faradays-studio.gitee.io/201902080900/","excerpt":"","text":"A few days ago, I got stuck in the mud of creating a svg dom with svg.js. After many test and searching, I found out that someting is different from the official manual. The problem of using svg.jsFor example, we write some dom in .html like this: &lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Creating SVG with SVG.js&lt;/title&gt;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;&lt;script src=&quot;https://cdn.bootcss.com/svg.js/3.0.11/svg.min.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt;&lt;script&gt; // write down your javascript here..&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; The official manual (refer to https://svgjs.com/docs/3.0/getting-started/) said that &lt;script&gt;...&lt;/script&gt; part like this: var draw = SVG(&#x27;drawing&#x27;).size(300, 300)var rect = draw.rect(100, 100).attr(&#123; fill: &#x27;#f06&#x27; &#125;) The script above pass through on jsfiddle.net test (refer to https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz ). However, it doesn’t work on my case, no matter running on my MSIE 7.0 to 11.0 or Chrome 58. I felt so depressed that even could not got sleep for two whole days. The way to write svg.js script and DOMAfter many tests and searching, I found out that these code running: 1. Way 1: DOM: &lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt; Script 1: var draw = SVG().addTo(&#39;#drawing&#39;).size(1024,200); or Script 2: var draw = SVG().addTo(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 2. Way 2: DOM: &lt;div class=&quot;drawing&quot;&gt;&lt;/div&gt; Script 1: var draw = SVG().addTo(&#39;.drawing&#39;).size(1024,200); or Script 2: var draw = SVG().addTo(&#39;.drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 3. Way 3: DOM: &lt;svg id=&quot;drawing&quot;&gt;&lt;/svg&gt; Script 1: var draw = SVG(&#39;#drawing&#39;).size(1024, 200); or Script 2: var draw = SVG(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); Done!","categories":[{"name":"English","slug":"English","permalink":"https://faradays-studio.gitee.io/categories/English/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://faradays-studio.gitee.io/tags/JavaScript/"},{"name":"SVG","slug":"SVG","permalink":"https://faradays-studio.gitee.io/tags/SVG/"}]}],"categories":[{"name":"随笔","slug":"随笔","permalink":"https://faradays-studio.gitee.io/categories/%E9%9A%8F%E7%AC%94/"},{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"},{"name":"编程","slug":"编程","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"Faradays' Studio","slug":"Faradays-Studio","permalink":"https://faradays-studio.gitee.io/categories/Faradays-Studio/"},{"name":"开发笔记","slug":"开发笔记","permalink":"https://faradays-studio.gitee.io/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"},{"name":"English","slug":"English","permalink":"https://faradays-studio.gitee.io/categories/English/"}],"tags":[{"name":"2020","slug":"2020","permalink":"https://faradays-studio.gitee.io/tags/2020/"},{"name":"随笔","slug":"随笔","permalink":"https://faradays-studio.gitee.io/tags/%E9%9A%8F%E7%AC%94/"},{"name":"Apple","slug":"Apple","permalink":"https://faradays-studio.gitee.io/tags/Apple/"},{"name":"Macbook","slug":"Macbook","permalink":"https://faradays-studio.gitee.io/tags/Macbook/"},{"name":"MacOS","slug":"MacOS","permalink":"https://faradays-studio.gitee.io/tags/MacOS/"},{"name":"密码","slug":"密码","permalink":"https://faradays-studio.gitee.io/tags/%E5%AF%86%E7%A0%81/"},{"name":"操作系统","slug":"操作系统","permalink":"https://faradays-studio.gitee.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"PE","slug":"PE","permalink":"https://faradays-studio.gitee.io/tags/PE/"},{"name":"U盘","slug":"U盘","permalink":"https://faradays-studio.gitee.io/tags/U%E7%9B%98/"},{"name":"Windows","slug":"Windows","permalink":"https://faradays-studio.gitee.io/tags/Windows/"},{"name":"批处理","slug":"批处理","permalink":"https://faradays-studio.gitee.io/tags/%E6%89%B9%E5%A4%84%E7%90%86/"},{"name":"字符运算","slug":"字符运算","permalink":"https://faradays-studio.gitee.io/tags/%E5%AD%97%E7%AC%A6%E8%BF%90%E7%AE%97/"},{"name":"日志","slug":"日志","permalink":"https://faradays-studio.gitee.io/tags/%E6%97%A5%E5%BF%97/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://faradays-studio.gitee.io/tags/JavaScript/"},{"name":"SVG","slug":"SVG","permalink":"https://faradays-studio.gitee.io/tags/SVG/"}]}
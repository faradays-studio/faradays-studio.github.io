{"meta":{"title":"Blog of Faradays' Studio","subtitle":"照见五蕴皆空，度一切苦厄。","description":"自信人生二百里，会当击水三千里！","author":"David","url":"https://faradays-studio.gitee.io","root":"/"},"pages":[{"title":"hexo-theme-faradays 主题用法","date":"2021-02-03T14:34:54.578Z","updated":"2021-02-03T14:34:54.578Z","comments":true,"path":"about/hexo-theme-faradays_usage.html","permalink":"https://faradays-studio.gitee.io/about/hexo-theme-faradays_usage.html","excerpt":"","text":"使用 hexo-theme-faradays 主题修改 _config.yml 文件主题选项如下： #theme: landscape theme: faradays 个性化 hexo-theme-faradays 主题"},{"title":"IEC 60870-5-104 程序开发笔记","date":"2020-11-17T12:02:04.968Z","updated":"2020-11-17T12:02:04.968Z","comments":true,"path":"about/hidden-change_log【hhj-iec104-x86】.html","permalink":"https://faradays-studio.gitee.io/about/hidden-change_log%E3%80%90hhj-iec104-x86%E3%80%91.html","excerpt":"","text":"更新日志项目概要 创建于: 2020/06/20 13:02:11 0.0.0 更新于: 2020/03/02 11:25:58 项目名称： hhj-iec104-x86 〔彩虹桥〕 设计理念：用于实现电力系统数据采集与处理。 许可协议：请遵守 APGLv3 协议，侵权必究！ Licensed under GNU AGPLv3. You may send your request to imhhj@vip.qq.com and wait for your License Confirmation email. See https://www.gnu.org/licenses/agpl-3.0.html or https://choosealicense.com/licenses/agpl-3.0/ for the license details. 更新概要编译与试运行方法 通过 cmder 启动 MSYS2-32（104）（Ctrl + Shift + 1），执行以下代码编译程序： # cd /f/iec104/lib60870-2.2.1/lib60870-C/examples cd /f/iec104/hhj-iec104_x86-1.x.x cd cs104_server &amp;&amp; make &amp;&amp; mv hhj-iec104_server-x86.exe .. &amp;&amp; cd .. cd cs104_client &amp;&amp; make &amp;&amp; mv hhj-iec104_client-x86.exe .. &amp;&amp; cd .. msys2 环境 暂不支持 cmder 别名 的使用。 创建新的 cmder 标签（Ctrl + Shift + 0）并分别切换至程序所在目录，依次运行 server 和 client： F: &amp;&amp; cd F:\\iec104\\hhj-iec104_x86-1.x.x hhj-iec104_server-x86.exe F: &amp;&amp; cd F:\\iec104\\hhj-iec104_x86-1.x.x hhj-iec104_client-x86.exe 可以使用 iecServer 、iecClient 自定义命令快速执行。 调整增加 .c/.h 文件后的编译方法： 在 makefile 中添加相应的文件 PROJECT_SOURCES = simple_client.c lib-hhj/read_def_file.c lib-hhj/read_ini_file.c 增加相应的 .h 头文件，并定义相应的公共变量和公共函数： #ifndef __HHJ__ //如果还没定义过宏 __HHJ__，就说明还没具有“需要被编译”的“身份” #define __HHJ__ //定义唯一宏 __HHJ__ ，预处理结束后会被统一编译 #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;string.h&gt; #include &lt;stdbool.h&gt; /* 声明变量（仅共享部分，定义了该变量的文件需要引入本文件，下同） */ extern char *__VERSION; /* 声明函数（仅共享部分） */ // 函数的声明有无extern都行，变量的声明必须加上extern，否则编译器无法识别 // char *splitString(char *str, char s[]); // void split(char *src, const char *separator, char **dest, int *num); bool readConfig(char file_name[]); #endif //__HHJ__ 增加相应的 .c 文件，并在该文件中定义相应的变量和函数，和普通 .c 文件一样处理即可，无须额外的 #include “hhj.h”： ... 在相应的调用文件中引入头文件，如： // 方法1：需要将 .c 文件写入 makefile #include &quot;lib-hhj/hhj.h&quot; // 方法2：直接导入 .c 文件（无须修改 makefile ） // #include &quot;lib-hhj\\read_def_file.c&quot; TO-DO 配置 SQLite 数据库： 具备点表导入功能； 具备数据历史记录功能（采用事务功能）； 具备数据实时检索显示功能； 测试 10w 条记录同时 update、select 的耗时和内存占用率； 研究内存数据库，提高程序读写效率和可靠性； 配置点表按文件导入功能； 解决读入字符串截断后，不能按照 tab 进行分隔的问题；（目前多个 tab 等同于一个分隔） 文件数据读入，并进行分隔（分割后需要删除空格、删除换行符号） 配置报文历史显示功能，配置具备热修改； 增加多文件编程的功能 掌握 C 语言编程的基本功夫 增加 ini 配置功能： 动态更新数据表（点表） 动态显示报文 全局变量（程序/点表版本号、点表更新时间） 增加计时器：记录慢查询、慢更新等过程 Bug readConfig(“config/cv.def”); // 读取配置（放在 if 外侧会报错，中断运行） 经过测试，初步认为是字符串分隔的问题，需要进一步检查研究 0.0.2 由于数十次发现程序异常退出，一直以为函数处理读取语句末尾不对，结果使用 printf 逐步测试，却发现是字符截取函数 split 的问题。 采用 bstrlib 进行数据截取，在函数中直接获取和使用没有问题，但是没有办法返回字符串数组，须进一步研究！！！ Using Bstring and CBString as an alternative to the C library ------------------------------------------------------------- First let us give a table of C library functions and the alternative bstring functions and CBString methods that should be used instead of them. C-library Bstring alternative CBString alternative --------- ------------------- -------------------- gets bgets ::gets strcpy bassign = operator strncpy bassignmidstr ::midstr strcat bconcat += operator strncat bconcat + btrunc += operator + ::trunc strtok bsplit, bsplits ::split sprintf b(assign)format ::format snprintf b(assign)format + btrunc ::format + ::trunc vsprintf bvformata bvformata vsnprintf bvformata + btrunc bvformata + btrunc vfprintf bvformata + fputs use bvformata + fputs strcmp biseq, bstrcmp comparison operators. strncmp bstrncmp, memcmp bstrncmp, memcmp strlen -&gt;slen, blength ::length strdup bstrcpy constructor strset bpattern ::fill strstr binstr ::find strpbrk binchr ::findchr stricmp bstricmp cast &amp; use bstricmp strlwr btolower cast &amp; use btolower strupr btoupper cast &amp; use btoupper strrev bReverse (aux module) cast &amp; use bReverse strchr bstrchr cast &amp; use bstrchr strspnp use strspn use strspn ungetc bsunread bsunread 0.0.1，3h+，2020/06/26 22:30:58 实现 msys2 环境搭建和文件编译生成方法的探索，具备 cmder 快速执行的功能； 修改程序名称，并调整文件路径，初步建立项目文件结构； 由于模板程序使用 static方法（内部函数），暂不支持 include 方式引入 .h头文件，只能使用 .c 源文件。 从 app.ini 中读入 print_log 值，并根据这个值设置报文是否打印。 参考文献 菜鸟教程.C 标准库 - &lt;string.h&gt;[EB/OL].https://www.runoob.com/cprogramming/c-standard-library-string-h.html, 2020-06-22. SQLite.In-Memory Databases[EB/OL].https://sqlite.org/inmemorydb.html, 2020-06-22. 小麒麟666.sqlite内存数据库和文件数据库的同步[EB/OL].https://blog.csdn.net/lijinqi1987/article/details/51672711, 2020-06-22. Free Software Foundation.GNU Package Blurbs[EB/OL].https://www.gnu.org/manual/blurbs.html, 2020/10/25. GNU 官网介绍了一系列自由软件，可供参考，诸如 GMP、GSL、Gnulib 等。 王陸.C语言中的字符串分割函数[EB/OL].https://www.cnblogs.com/wkfvawl/p/9042695.html, 2020/10/25. 天上有太阳.C语言：解决strtok两个连续分隔符当作一个提取的问题[EB/OL].https://blog.csdn.net/weixin_38184741/article/details/89385961, 20201101. bytxl.strtok两个连续分隔符当作一个提取的问题,字符分割线程安全性[EB/OL].https://blog.csdn.net/bytxl/article/details/7863081, 20201101. CSDN博客.分解字符串中存在连续分隔符的处理问题[EB/OL].https://bbs.csdn.net/topics/390306840, 20201101. Long_Freedom.C++ strtok()无法截取连续两个分隔符之间的空字符串, 解决方法[EB/OL].https://blog.csdn.net/freedom_long/article/details/79701141, 20201101. sourceforge.String Library Comparisons[EB/OL].http://bstring.sourceforge.net/features.html, 2020/10/25. 该文章提出 https://github.com/websnarf/bstrlib 是最好的字符处理工具。相关使用说明见 https://github.com/websnarf/bstrlib/blob/master/bstrlib.txt 。 青儿哥哥.C语言中函数返回字符串的四种方法[EB/OL].https://www.cnblogs.com/qingergege/p/6496683.html, 2020/10/25. 由于长期不用 C 语言了，通过这个文章能够更好地理解为何 C 语言不能像其他高级语言那样使用赋值表达式来显示语句的逻辑，而是直接在处理的过程中以函数参数的形式输出指针变量！！！个人理解：将指针函数的返回值赋值给特定变量时，其不会调用其数值；而使用 printf 或者其他运算才会，因此多次连续调用可能导致几次赋值都只会得到最后一次的运算结果。 宋劲杉.字符串操作函数[EB/OL].http://akaedu.github.io/book/ch25s01.html, 2020/10/25. CCAN官网.List of all CCAN modules[EB/OL].http://ccodearchive.net/list.html, 2020/10/25. 网友推荐使用该库作为 C语言的函数库。 Leaviathan.关于C语言开大数组溢出的问题[EB/OL].https://blog.csdn.net/qq_21882325/article/details/65445810, 2020/10/25. 百度知道.C语言调用数组返回数组怎么做？[EB/OL].https://zhidao.baidu.com/question/422528172.html, 2020/11/01. 可以返回数字数组 glib 简介GLib is a general-purpose utility library, which provides many useful data types, macros, type conversions, string utilities, file utilities, a mainloop abstraction, and so on. It works on many UNIX-like platforms, as well as Windows and OS X. GLib is released under the GNU Lesser General Public License (GNU LGPL). GLib提供了多种高级的数据结构，如内存块、双向和单向链表、哈希表、动态字符串以及字符串工具（例如词法分析器，字符串切分等）、动态数组、平衡二叉树、n-叉树、键值存储、关系和元组，还有带有缓存的内存管理。 Glib还实现了线程相关的函数、多线程编程以及相关的工具，例如原始变量访问、互斥锁、异步队列、安全内存池、消息传递和日志、钩子函数和计时器，同时消息传递还包含了字节序转换和IO channel。 glib库是Linux平台下最常用的C语言函数库，它具有很好的可移植性和实用性。glib是Gtk + 库和 Gnome 的基础。glib 可以在多个平台下使用，比如 Linux、Unix、Windows 等。glib 为许多标准的、常用的C语言结构提供了相应的替代物。如果在程序中要使用到glib库中的函数，则应该包含glib.h头文件（在gtk.h和gnome.h头文件中已经包含了glib.h了） gobject是glib的精粹，glib是用C实现的，但在很大程序是基于面向对象思想设计的，gobject是所有类的基类。signal在其中也是一大特色，signal与操作系统中的signal并不一样，它是类似消息一样的东西，让消息在各个对象间传递，但尽量降低对象间的耦合。仔细读一下它的代码，唯一想说的话就是“绝！”。 动态数组、链表、哈希表等通用容器，在不同的公司，在不同的时期，在不同的情况下，我们每个人对每一种容器，可能都实现过N次以上。甚至在同一个项目里，出现几份链表的实现，也并非罕见。一直在抱怨，标准C中为什么没有类似于STL的标准容器，让全世界的程序员在数以万次的重复实现它们。不过，还算走运，有了glib，恶梦在此终结了。glib提供了动态数组、单/双向链表、哈希表、多叉树、平衡二叉树、字符串等常用容器，完全是面向对象设计的，实现得非常精致。不用白不用，别客气了。 你开发过跨硬件平台的软件吗？是不是常常为硬件平台的差异而苦恼呢？字节顺序是常见的问题之一，大端格式，小端格式，还是PDP格式的？这样差异造成的BUG会浪费不少时间，同时让代码晦涩难读。glib提供了一套完整的宏，利用这些宏编写程序，问题大大简化了。 client 更新详情0.0.1 修复 printf 用法不当问题：%s 对应于 char 类型，而 %d 对应于 int 类型。 int line=0; printf(&quot;\\t第 %d 行数据正在读取中...\\n&quot;, line); 解决 cs104_client\\lib-hhj\\read_def_file.c\\readConfig 函数不能正确进行字符串切割的问题，发现从网络拷贝的代码在定义指针时出错了（ char **line_group; ），应当为 char *line_group[20];。 该问题排查耗费了大量的时间，来来回回，10 多年前的 C语言感觉是白学了！ 调整新增的源代码文件，避免根目录文件过多，导致可阅读性降低。 server 更新详情0.0.1"},{"title":"网站设计的笔记","date":"2021-02-06T09:14:04.602Z","updated":"2021-02-06T09:14:04.602Z","comments":true,"path":"about/hide.html","permalink":"https://faradays-studio.gitee.io/about/hide.html","excerpt":"","text":"本文件内容不对外开放！！！ hexo-theme-faradays 开发笔记"},{"title":"About me","date":"2020-08-23T01:11:17.000Z","updated":"2021-02-13T06:46:48.083Z","comments":true,"path":"about/index.html","permalink":"https://faradays-studio.gitee.io/about/index.html","excerpt":"","text":"关于博主Faradays’ Studio 是博主的虚拟工作室。 斯是陋室，惟吾德馨：博主曾经长期地来回犹豫过，转载或者抄袭一些文章到这里来，以提高访问数——毕竟好多人都这么做，洋洋洒洒的呈上五六千篇作品，哪怕是专职写作10年，也不太可能会到达那样的高峰！然而，突然回顾起自己的初心——输出知识、经验、心情和作品，展示自己的价值和风采，我就彻底坦然了——我绝不能那样去做，因为抄来的都不是我的，哪怕我改成自己名字的样子！我想做的、要做的，就是将自己亲身经历、亲手操作、亲自创造的东西呈现出来，我想成为一个真诚待人、努力工作、重视创新、热爱生活的人，而不是一个精致的利己主义者。 诚愿自己在平凡的地方，创造不平凡的业绩，遇见更好的未来。 站点设置由于网络和地域原因，开通了两个互为主备的 page 站点，欢迎访问、交流： 国际站点： https://faradays-studio.github.io/ 国内站点： https://faradays-studio.gitee.io/ 栏目设置 星星心事：面向遥远星空发出的人生感叹、感悟和宣泄。 坐井观天：影评、书评、社评。 电脑爱好者：电脑维护的一些技巧、方法总结。 我和hexo有个约会：hexo-theme-faradays 主题开发的记录。 编程笔记：业务编程的一些工作实践或知识总结。 工作中的魔法：工作中的使用编程方法解决问题的实例总结。 English：英文写作尝试。 hexohexo-theme-faradays 主题 hexo-theme-faradays 主题说明 hexo-theme-faradays 升级日志 hexo-theme-faradays 配置说明 hexo-theme-faradays 主题 wiki 首页 当前为空，毕竟主要内容都在前3个文章中了。 hexo 站点管理 站长平台 百度搜索资源平台 搜狗站长平台 360站长平台 神马站长平台 必应收录 站点访问统计 百度统计"},{"title":"文章导航","date":"2021-03-05T16:55:56.000Z","updated":"2021-03-05T16:55:58.366Z","comments":true,"path":"about/list.html","permalink":"https://faradays-studio.gitee.io/about/list.html","excerpt":"","text":"文章导航"},{"title":"TimeLine","date":"2020-08-12T15:19:40.000Z","updated":"2020-08-23T02:33:24.538Z","comments":true,"path":"timeline/index.html","permalink":"https://faradays-studio.gitee.io/timeline/index.html","excerpt":"","text":"时间轴"},{"title":"hexo-theme-faradays 主题概述","date":"2021-03-05T16:41:36.578Z","updated":"2021-03-05T16:41:36.578Z","comments":true,"path":"about/hexo-theme-faradays_summary.html","permalink":"https://faradays-studio.gitee.io/about/hexo-theme-faradays_summary.html","excerpt":"hexo-theme-faradays 主题诞生于一个偶然的机会，当时博主正在考虑建立一个博客，因此点开了很久之前关注的 hexo 官网，并初始化了这个博客；可是博主搜了很多网站，并没有找到合适的主题，看了好久，基于颜值选了 hexo-theme-miho 来进行魔改，慢慢地，就有了这个主题。我喜欢它，希望你也能够从中得到启发。 项目概要 创建于: 2020/07/05 08:23:50 0.0.0 项目名称： Faradays 〔明月〕 设计理念：立足现在，放眼未来。 许可协议：请遵守 GPLv3 协议，侵权必究！ Licensed under GNU GPLv3. You may send your request to imhhj@vip.qq.com and wait for your License Confirmation email. See https://www.gnu.org/licenses/gpl-3.0.html or https://choosealicense.com/licenses/gpl-3.0/ for the license details. hexo 基础知识hexo 的内置程序安装 hexo 程序后，默认应该包含以下程序： 程序 用途 备注 hexo 主程序 hexo-deployer-git 实现 git 部署方式 hexo-generator-archive 存档页面生成器 hexo-generator-category 分类页面生成器 hexo-generator-index index 生成器 hexo-generator-tag 标签页面生成器 hexo-renderer-ejs 支持 EJS 渲染 hexo-renderer-marked Markdown 引擎 hexo-renderer-stylus 支持 stylus 渲染 hexo-server 本地服务器 默认地址 localhost:4000 新安装的依赖包，保存在 node_module 文件夹下。 hexo 的内置变量hexo 内置了一些内部变量，为进一步定制开发提供了重要的基础；最重要的是 site 变量如下： site = &#123; posts: [object object], // 包含文章对象的数组 pages: [object object], // 包含页面对象的数组 categories: [object object], // 包含分类对象的数组 tags: [object object] // 包含标签对象的数组 &#125; 我们可以通过 JavaScript 调用 site 变量获取站点的文章总数，标签总数和分类总数。例如： console.log(site.pages) 可以在 .ejs 中获取相关变量： &lt;% code %&gt;：用于执行其中javascript代码。 &lt;%= code %&gt;：会对code进行html转义； &lt;%- code %&gt;：不会进行转义， 也可以在 shell 中查看相关变量的值： # 查看当前文章、独立页等情况 hexo list [ page | post | route |tag | category ] 如果需要查看 hexo 内置了哪些内部变量、内部函数，可以访问以下链接： Tommy Chen, HEXO官方文档.hexo 变量[EB/OL].https://hexo.io/zh-cn/docs/variables.html, 2020/08/22. Tommy Chen, HEXO官方文档.hexo 辅助函数（Helpers）[EB/OL].https://hexo.io/zh-cn/docs/helpers, 2020/08/22. 模板定制的理论基础Hexo provides the Swig template engine by default, but you can easily install additional plugins to support alternative engines such as EJS, Haml, Jade, or Pug. Hexo chooses the template engine based on the file extension of the template (just like the posts). For example: layout.ejs # uses EJS layout.swig # uses Swig By default, the layout template is used by all other templates. You can specify additional layouts in the front-matter or set it to false to disable it. It’s even possible to build a complex nested structure by including more layout templates in your top layout. Every layout file should contain a body variable to display the contents of the template in question. Partials are useful for sharing components between your templates. Typical examples include headers, footers or sidebars. You may want to put your partials in separate files to make maintaining your website significantly more convenient. 在模板中，举例说来，&lt;%- partial(&#39;partial/header&#39;, &#123;title: &#39;Hello World&#39;&#125;) %&gt; 一句在直接导入 partial/header.ejs 的同时，同时也将该文件中定义的 title 变量赋值为 Hello World 。Partials 模板就等同于模板中定义了一个子函数一样，使得模板能够灵活地使用编程技术动态组态。 模板 用途 回退 layout_id index 首页 0分页导航：1 archive 归档 index 2 category 分类归档 archive 3 tag 标签归档 archive 4 post 文章 index 5 page 独立页 index 20时间轴：21画册：22 layout.ejs 是整个页面的入口，所有的页面都共用 layout.ejs 布局。通过 layout 之后，则根据页面的类型，将相应的内容自动添加到 HMTL 的body 当中。 因此，各个布局的 ejs 文件并没有引入 layout.ejs 当中，因此也就无法引用其定义的变量，只能通过独立页增加一个变量来进行识别。 page.layout 布局名称 用途 备注 timeline 时间轴 index 分页导航 fancybox 相册 样式定制的理论基础Hexo ignores hidden files and files or folders prefixed with _ (underscore). 在 themes\\faradays\\source\\css\\_partial 中，由于文件夹以下划线起始，hexo在编译的时候就会略过他们不生成具体的css 。也就是说最后只会生成 css 目录中不以下划线开头的名字对应的CSS文件，如 style.css 、 timeline.css 、 tocbot.css ，而不会生成诸如 _layout/footer.css 这样的文件了。 根据 https://hexo.io/zh-cn/api/renderer 的说明，themes\\faradays\\source\\css 中 style.styl 是样式总入口文件，其是受到 node_modules\\hexo-renderer-stylus\\index.js 文件的调用生成 css 文件的，将 .styl 生成为同名的 .css 文件、而 _ 开头的文件则不会生成，其一般都是引用到 style.styl 文件中而生成 style.css 文件。 _variables.styl：变量定义 _extend.styl：补充扩展 style.styl：总样式 _util/*.styl：不生成样式文件的局部样式定义，已在 style.styl 中 @import。 _partial/*.styl：不生成样式文件的局部样式定义，已在 style.styl 中 @import；不过额外创建子文件，也需要人工补充 @import 到 style.styl 文件。 tocbot.styl：目录样式 timeline.styl：时间轴样式 github.min.css：css样式，原样输出 fonts：FontAwesome 字体，在 _variables.styl 中定义了字体路径变量 font-icon-path，并在 style.styl 使用。 添加 styl 文件的方法： 在 themes\\faradays\\source\\css 中增加相应的文件 xxx1.styl即可生成 xxx1.css 的独立样式文件； 如果增加 _xxx2.styl，并在同目录的style.styl 中 @import xxx2，那么就会整合到 style.css 中。 定义变量，如$main_color = convert(hexo-config(&quot;stylus.main_color&quot;))；使用变量，如rgba($main_color,0.3) 或 $main_color。 hexo-theme-faradays 主题以下简称“Faradays 主题”，主题的内容主要是包含布局、样式等内容，具体见后续逐一解剖—— Faradays 主题的模板Faradays 主题目前使用 hexo-renderer-ejs 管理布局文件，相关文件结构如下： layout │-- archive.ejs // 存档，在 **_archive/** 目录下进一步定义 │-- category.ejs │-- index.ejs // 首页，在 **_index/** 目录下进一步定义 │-- layout.ejs // 公共样式（页头、页眉、页脚、侧边栏等），在 **_layout/** 目录下进一步定义 │-- post.ejs // 文章页，在 **_post/** 目录下进一步定义 │-- tag.ejs │-- page.ejs // 独立页（仅设置统一样式），在 **_page/** 目录下进一步定义 │-- timeline // 独立页（时间轴） │-- &lt;some_page&gt; // 独立页（其他，个性化样式），在 **_&lt;some_page&gt;/** 目录下进一步定义 根据 hexo layout 的特征，对 Faradays 主题的文件结构可以概括为， themes\\faradays\\layout 根目录下的每一个 .ejs 文件，都对应于一个以 _为前缀的同名文件夹来配套定义其具体布局。 Faradays 主题除了 index、archive、post 等传统布局统一设置外，主要是设置了独立的 page 布局，为进一步定制更多功能提供了可能性。比如说，时间轴就是其中的一种独立布局样式。 archive 、 category 、 tag 等共享布局的文件，也进行了解耦，更利于后期进一步精细调整、减少交叉干涉的影响程度。 page 样式虽然和 post 样式基本接近，不过代码高亮等由于插件预定义的设置问题，还是存在一些细微的差异。 测试表明，更改 ejs 、 styl 文件，不需要重新生成网站就能显示最新效果。更为重要的是，修改 .md 格式的文章，保存后刷新就生效。 Faradays 主题的样式默认情况下，生成一个 site.css 总文件，后续每新增独立 page 布局，就设置一个独立的 .css。他们都由 hexo-renderer-stylus 将同名的 .styl 文件转换生成。 代码高亮支持的语言&lt;% if (is_post() || is_page())&#123; %&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/github.min.css&quot;&gt; &lt;% &#125; %&gt; language 可参考 https://github.com/highlightjs/highlight.js/blob/master/SUPPORTED_LANGUAGES.md 了解。笔者比较熟悉的有 autohotkey、bash、sh、zsh、basic、csharp、cs、c、h、cpp、hpp、c++、h++、cmake、css、cisco、d、dos、bat、cmd、delphi、pas、pascal、diff、patch、django、jinja、dockerfile、docker、dts(Device Tree)、dust、excel、xls、xlsx、fortran、go、golang、groovy、xml、html、xhtml、rss、atom、xsl、svg、http、https、haskell、ini、json、java、jsp、javascript、js、kotlin、tex(LaTeX)、less、lisp、lua、makefile、mk、make、markdown、md、mathematica、mma、matlab、nginx、nginxconf、objectivec、objc、php、php7、perl、txt、pgsql、powershell、ps、ps1、properties、python、py、profile、python-repl、pycon、r、rpm、ruby、rb、rust、rs、SAS、sas、sql、shell、console、stylus、styl、swift、tcl、tk、twig、typescript、ts、vbnet、vb、vba、vbscript、vbs、vim、yml、yaml。 建议使用 bash 而不是使用 shell 。 新版 JavaScript 库在 https://github.com/highlightjs/highlight.js/releases 中下载。不过在个人测试中未能通过。 hexo 文章的书写hexo 博客文章页可以像 reStructuredText 文章一样，灵活地增加特定格式的文本，而无须通过 .EJS 模板文件进行预定义。 按照 Markdown 语法编写文章。 参考 https://hexo.io/zh-cn/docs/tag-plugins 使用 hexo 特有的标签语法扩展文章的书写方式。 在文章中插入引言，可包含作者、来源和标题。 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem. [author[source]] [link] [source_link_title] 在文章中插入代码。 code snippet 特殊地，也可以将 source/downloads/code （在 _config.yml 中定义的 code_dir 路径 ）文件夹内的代码文件插入：&#123;% include_code [title] [lang:language] [from:line] [to:line] path/to/file %&#125;。示例如下： 嵌入 test.js 文件全文：&#123;% include_code lang:javascript test.bat %&#125; :: test.bat （需要保存为 ANSI 编码后双击运行） @echo off echo 当前路径的完整字符串：%0 echo 去掉引号：%~0 echo 所在分区：%~d0 echo 所处路径：%~p0 echo 文件名：%~n0 echo 扩展名：%~x0 echo 文件属性：%~a0 echo 修改时间：%~t0 echo 文件大小：%~z0 echo. pause 只嵌入第 3 行:：&#123;% include_code lang:javascript from:3 to:3 test.bat %&#125; echo 当前路径的完整字符串：%0 嵌入第 5 行至第 8 行：&#123;% include_code lang:javascript from:5 to:8 test.bat %&#125; echo 所在分区：%~d0 echo 所处路径：%~p0 echo 文件名：%~n0 echo 扩展名：%~x0 嵌入第 5 行至文件结束：&#123;% include_code lang:javascript from:5 test.bat %&#125; echo 所在分区：%~d0 echo 所处路径：%~p0 echo 文件名：%~n0 echo 扩展名：%~x0 echo 文件属性：%~a0 echo 修改时间：%~t0 echo 文件大小：%~z0 echo. pause 嵌入第 1 行至第 8 行：&#123;% include_code lang:javascript to:8 test.bat %&#125; :: test.bat （需要保存为 ANSI 编码后双击运行） @echo off echo 当前路径的完整字符串：%0 echo 去掉引号：%~0 echo 所在分区：%~d0 echo 所处路径：%~p0 echo 文件名：%~n0 echo 扩展名：%~x0 在文章中插入 iframe ：&#123;% iframe url [width] [height] %&#125;。 在文章中插入指定大小的图片（需要绝对路径）：&#123;% img [class names] /path/to/image [width] [height] '\"title text\" \"alt text\"' %&#125;。 在文章中插入链接，并自动给外部链接添加 target=”_blank” 属性： &#123;% link text url [external] [title] %&#125;。 text url [external] [title] 引用其他文章的链接： &#123;% post_path filename %&#125; 或 &#123;% post_link filename [title] [escape] %&#125;。 Post not found: zh-CN_20200607_chang-log 在使用此标签时可以忽略文章文件所在的路径或者文章的永久链接信息、如语言、日期。 例如，在文章中使用 Post not found: hexo-theme-faradays_summary 时，只需有一个名为 hexo-theme-faradays_summary.md 的文章文件即可。即使这个文件位于站点文件夹的 source/posts/hexo-theme-faradays_summary 目录下、或者文章的永久链接是 2018/zh-CN/hexo-theme-faradays_summary，都没有影响。 默认链接文字是文章的标题，你也可以自定义要显示的文本。 默认对文章的标题和自定义标题里的特殊字符进行转义。可以使用escape选项，禁止对特殊字符进行转义。 引用文章的资源： &#123;% asset_path filename %&#125;、&#123;% asset_img [class names] slug [width] [height] [title text [alt text]] %&#125;、&#123;% asset_link filename [title] [escape] %&#125;。 使用 Raw 标签，以免发生解析异常：content。 文章摘要和截断：在文章中使用","text":"hexo-theme-faradays 主题诞生于一个偶然的机会，当时博主正在考虑建立一个博客，因此点开了很久之前关注的 hexo 官网，并初始化了这个博客；可是博主搜了很多网站，并没有找到合适的主题，看了好久，基于颜值选了 hexo-theme-miho 来进行魔改，慢慢地，就有了这个主题。我喜欢它，希望你也能够从中得到启发。 项目概要 创建于: 2020/07/05 08:23:50 0.0.0 项目名称： Faradays 〔明月〕 设计理念：立足现在，放眼未来。 许可协议：请遵守 GPLv3 协议，侵权必究！ Licensed under GNU GPLv3. You may send your request to imhhj@vip.qq.com and wait for your License Confirmation email. See https://www.gnu.org/licenses/gpl-3.0.html or https://choosealicense.com/licenses/gpl-3.0/ for the license details. hexo 基础知识hexo 的内置程序安装 hexo 程序后，默认应该包含以下程序： 程序 用途 备注 hexo 主程序 hexo-deployer-git 实现 git 部署方式 hexo-generator-archive 存档页面生成器 hexo-generator-category 分类页面生成器 hexo-generator-index index 生成器 hexo-generator-tag 标签页面生成器 hexo-renderer-ejs 支持 EJS 渲染 hexo-renderer-marked Markdown 引擎 hexo-renderer-stylus 支持 stylus 渲染 hexo-server 本地服务器 默认地址 localhost:4000 新安装的依赖包，保存在 node_module 文件夹下。 hexo 的内置变量hexo 内置了一些内部变量，为进一步定制开发提供了重要的基础；最重要的是 site 变量如下： site = &#123; posts: [object object], // 包含文章对象的数组 pages: [object object], // 包含页面对象的数组 categories: [object object], // 包含分类对象的数组 tags: [object object] // 包含标签对象的数组 &#125; 我们可以通过 JavaScript 调用 site 变量获取站点的文章总数，标签总数和分类总数。例如： console.log(site.pages) 可以在 .ejs 中获取相关变量： &lt;% code %&gt;：用于执行其中javascript代码。 &lt;%= code %&gt;：会对code进行html转义； &lt;%- code %&gt;：不会进行转义， 也可以在 shell 中查看相关变量的值： # 查看当前文章、独立页等情况 hexo list [ page | post | route |tag | category ] 如果需要查看 hexo 内置了哪些内部变量、内部函数，可以访问以下链接： Tommy Chen, HEXO官方文档.hexo 变量[EB/OL].https://hexo.io/zh-cn/docs/variables.html, 2020/08/22. Tommy Chen, HEXO官方文档.hexo 辅助函数（Helpers）[EB/OL].https://hexo.io/zh-cn/docs/helpers, 2020/08/22. 模板定制的理论基础Hexo provides the Swig template engine by default, but you can easily install additional plugins to support alternative engines such as EJS, Haml, Jade, or Pug. Hexo chooses the template engine based on the file extension of the template (just like the posts). For example: layout.ejs # uses EJS layout.swig # uses Swig By default, the layout template is used by all other templates. You can specify additional layouts in the front-matter or set it to false to disable it. It’s even possible to build a complex nested structure by including more layout templates in your top layout. Every layout file should contain a body variable to display the contents of the template in question. Partials are useful for sharing components between your templates. Typical examples include headers, footers or sidebars. You may want to put your partials in separate files to make maintaining your website significantly more convenient. 在模板中，举例说来，&lt;%- partial(&#39;partial/header&#39;, &#123;title: &#39;Hello World&#39;&#125;) %&gt; 一句在直接导入 partial/header.ejs 的同时，同时也将该文件中定义的 title 变量赋值为 Hello World 。Partials 模板就等同于模板中定义了一个子函数一样，使得模板能够灵活地使用编程技术动态组态。 模板 用途 回退 layout_id index 首页 0分页导航：1 archive 归档 index 2 category 分类归档 archive 3 tag 标签归档 archive 4 post 文章 index 5 page 独立页 index 20时间轴：21画册：22 layout.ejs 是整个页面的入口，所有的页面都共用 layout.ejs 布局。通过 layout 之后，则根据页面的类型，将相应的内容自动添加到 HMTL 的body 当中。 因此，各个布局的 ejs 文件并没有引入 layout.ejs 当中，因此也就无法引用其定义的变量，只能通过独立页增加一个变量来进行识别。 page.layout 布局名称 用途 备注 timeline 时间轴 index 分页导航 fancybox 相册 样式定制的理论基础Hexo ignores hidden files and files or folders prefixed with _ (underscore). 在 themes\\faradays\\source\\css\\_partial 中，由于文件夹以下划线起始，hexo在编译的时候就会略过他们不生成具体的css 。也就是说最后只会生成 css 目录中不以下划线开头的名字对应的CSS文件，如 style.css 、 timeline.css 、 tocbot.css ，而不会生成诸如 _layout/footer.css 这样的文件了。 根据 https://hexo.io/zh-cn/api/renderer 的说明，themes\\faradays\\source\\css 中 style.styl 是样式总入口文件，其是受到 node_modules\\hexo-renderer-stylus\\index.js 文件的调用生成 css 文件的，将 .styl 生成为同名的 .css 文件、而 _ 开头的文件则不会生成，其一般都是引用到 style.styl 文件中而生成 style.css 文件。 _variables.styl：变量定义 _extend.styl：补充扩展 style.styl：总样式 _util/*.styl：不生成样式文件的局部样式定义，已在 style.styl 中 @import。 _partial/*.styl：不生成样式文件的局部样式定义，已在 style.styl 中 @import；不过额外创建子文件，也需要人工补充 @import 到 style.styl 文件。 tocbot.styl：目录样式 timeline.styl：时间轴样式 github.min.css：css样式，原样输出 fonts：FontAwesome 字体，在 _variables.styl 中定义了字体路径变量 font-icon-path，并在 style.styl 使用。 添加 styl 文件的方法： 在 themes\\faradays\\source\\css 中增加相应的文件 xxx1.styl即可生成 xxx1.css 的独立样式文件； 如果增加 _xxx2.styl，并在同目录的style.styl 中 @import xxx2，那么就会整合到 style.css 中。 定义变量，如$main_color = convert(hexo-config(&quot;stylus.main_color&quot;))；使用变量，如rgba($main_color,0.3) 或 $main_color。 hexo-theme-faradays 主题以下简称“Faradays 主题”，主题的内容主要是包含布局、样式等内容，具体见后续逐一解剖—— Faradays 主题的模板Faradays 主题目前使用 hexo-renderer-ejs 管理布局文件，相关文件结构如下： layout │-- archive.ejs // 存档，在 **_archive/** 目录下进一步定义 │-- category.ejs │-- index.ejs // 首页，在 **_index/** 目录下进一步定义 │-- layout.ejs // 公共样式（页头、页眉、页脚、侧边栏等），在 **_layout/** 目录下进一步定义 │-- post.ejs // 文章页，在 **_post/** 目录下进一步定义 │-- tag.ejs │-- page.ejs // 独立页（仅设置统一样式），在 **_page/** 目录下进一步定义 │-- timeline // 独立页（时间轴） │-- &lt;some_page&gt; // 独立页（其他，个性化样式），在 **_&lt;some_page&gt;/** 目录下进一步定义 根据 hexo layout 的特征，对 Faradays 主题的文件结构可以概括为， themes\\faradays\\layout 根目录下的每一个 .ejs 文件，都对应于一个以 _为前缀的同名文件夹来配套定义其具体布局。 Faradays 主题除了 index、archive、post 等传统布局统一设置外，主要是设置了独立的 page 布局，为进一步定制更多功能提供了可能性。比如说，时间轴就是其中的一种独立布局样式。 archive 、 category 、 tag 等共享布局的文件，也进行了解耦，更利于后期进一步精细调整、减少交叉干涉的影响程度。 page 样式虽然和 post 样式基本接近，不过代码高亮等由于插件预定义的设置问题，还是存在一些细微的差异。 测试表明，更改 ejs 、 styl 文件，不需要重新生成网站就能显示最新效果。更为重要的是，修改 .md 格式的文章，保存后刷新就生效。 Faradays 主题的样式默认情况下，生成一个 site.css 总文件，后续每新增独立 page 布局，就设置一个独立的 .css。他们都由 hexo-renderer-stylus 将同名的 .styl 文件转换生成。 代码高亮支持的语言&lt;% if (is_post() || is_page())&#123; %&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/github.min.css&quot;&gt; &lt;% &#125; %&gt; language 可参考 https://github.com/highlightjs/highlight.js/blob/master/SUPPORTED_LANGUAGES.md 了解。笔者比较熟悉的有 autohotkey、bash、sh、zsh、basic、csharp、cs、c、h、cpp、hpp、c++、h++、cmake、css、cisco、d、dos、bat、cmd、delphi、pas、pascal、diff、patch、django、jinja、dockerfile、docker、dts(Device Tree)、dust、excel、xls、xlsx、fortran、go、golang、groovy、xml、html、xhtml、rss、atom、xsl、svg、http、https、haskell、ini、json、java、jsp、javascript、js、kotlin、tex(LaTeX)、less、lisp、lua、makefile、mk、make、markdown、md、mathematica、mma、matlab、nginx、nginxconf、objectivec、objc、php、php7、perl、txt、pgsql、powershell、ps、ps1、properties、python、py、profile、python-repl、pycon、r、rpm、ruby、rb、rust、rs、SAS、sas、sql、shell、console、stylus、styl、swift、tcl、tk、twig、typescript、ts、vbnet、vb、vba、vbscript、vbs、vim、yml、yaml。 建议使用 bash 而不是使用 shell 。 新版 JavaScript 库在 https://github.com/highlightjs/highlight.js/releases 中下载。不过在个人测试中未能通过。 hexo 文章的书写hexo 博客文章页可以像 reStructuredText 文章一样，灵活地增加特定格式的文本，而无须通过 .EJS 模板文件进行预定义。 按照 Markdown 语法编写文章。 参考 https://hexo.io/zh-cn/docs/tag-plugins 使用 hexo 特有的标签语法扩展文章的书写方式。 在文章中插入引言，可包含作者、来源和标题。 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem. [author[source]] [link] [source_link_title] 在文章中插入代码。 code snippet 特殊地，也可以将 source/downloads/code （在 _config.yml 中定义的 code_dir 路径 ）文件夹内的代码文件插入：&#123;% include_code [title] [lang:language] [from:line] [to:line] path/to/file %&#125;。示例如下： 嵌入 test.js 文件全文：&#123;% include_code lang:javascript test.bat %&#125; :: test.bat （需要保存为 ANSI 编码后双击运行） @echo off echo 当前路径的完整字符串：%0 echo 去掉引号：%~0 echo 所在分区：%~d0 echo 所处路径：%~p0 echo 文件名：%~n0 echo 扩展名：%~x0 echo 文件属性：%~a0 echo 修改时间：%~t0 echo 文件大小：%~z0 echo. pause 只嵌入第 3 行:：&#123;% include_code lang:javascript from:3 to:3 test.bat %&#125; echo 当前路径的完整字符串：%0 嵌入第 5 行至第 8 行：&#123;% include_code lang:javascript from:5 to:8 test.bat %&#125; echo 所在分区：%~d0 echo 所处路径：%~p0 echo 文件名：%~n0 echo 扩展名：%~x0 嵌入第 5 行至文件结束：&#123;% include_code lang:javascript from:5 test.bat %&#125; echo 所在分区：%~d0 echo 所处路径：%~p0 echo 文件名：%~n0 echo 扩展名：%~x0 echo 文件属性：%~a0 echo 修改时间：%~t0 echo 文件大小：%~z0 echo. pause 嵌入第 1 行至第 8 行：&#123;% include_code lang:javascript to:8 test.bat %&#125; :: test.bat （需要保存为 ANSI 编码后双击运行） @echo off echo 当前路径的完整字符串：%0 echo 去掉引号：%~0 echo 所在分区：%~d0 echo 所处路径：%~p0 echo 文件名：%~n0 echo 扩展名：%~x0 在文章中插入 iframe ：&#123;% iframe url [width] [height] %&#125;。 在文章中插入指定大小的图片（需要绝对路径）：&#123;% img [class names] /path/to/image [width] [height] '\"title text\" \"alt text\"' %&#125;。 在文章中插入链接，并自动给外部链接添加 target=”_blank” 属性： &#123;% link text url [external] [title] %&#125;。 text url [external] [title] 引用其他文章的链接： &#123;% post_path filename %&#125; 或 &#123;% post_link filename [title] [escape] %&#125;。 Post not found: zh-CN_20200607_chang-log 在使用此标签时可以忽略文章文件所在的路径或者文章的永久链接信息、如语言、日期。 例如，在文章中使用 Post not found: hexo-theme-faradays_summary 时，只需有一个名为 hexo-theme-faradays_summary.md 的文章文件即可。即使这个文件位于站点文件夹的 source/posts/hexo-theme-faradays_summary 目录下、或者文章的永久链接是 2018/zh-CN/hexo-theme-faradays_summary，都没有影响。 默认链接文字是文章的标题，你也可以自定义要显示的文本。 默认对文章的标题和自定义标题里的特殊字符进行转义。可以使用escape选项，禁止对特殊字符进行转义。 引用文章的资源： &#123;% asset_path filename %&#125;、&#123;% asset_img [class names] slug [width] [height] [title text [alt text]] %&#125;、&#123;% asset_link filename [title] [escape] %&#125;。 使用 Raw 标签，以免发生解析异常：content。 文章摘要和截断：在文章中使用 ，那么 之前的文字将会被视为摘要。首页中将只出现这部分文字，同时这部分文字也会出现在正文之中。 Faradays 主题内置了一些 Front-matter 字段，概况如下： 字段 含义 备注 author2 第 2 作者 author3 第 3 作者 author_x 其他作者 original 文章原创指数 如 100% keywords 文章关键词 jQuery,JavaScript site_banner 站点横幅 post_banner 文章横幅 author2: Ivy Faraday author3: unknown author_x: - [&#39;Bat Man&#39;, &#39;https://faradays-studio.github.io/&#39;] - [&#39;Iron Man&#39;, &#39;https://faradays-studio.github.io/&#39;] 对于特殊字符进行转义，举例如下： &amp;#123;: &#123; &amp;#125;: &#125; 使用注意事项 文章的 Front-matter 中的数字应当使用引号包围，才能形成字符；如果需要转换为数字，可以使用相应的 JavaScript 转换函数。 研究总结独立页的功能测试 测试表明，独立页面使用 hexo 内置的渲染有以下特点（.md 文件直接放相应的目录下，不做任何特殊处理，系统原生使用 layout: page 渲染）： 不支持标签、分类。 生成的 .HTML 名称是 .md 文件名，与默认的 _post 目录下的文件按项目配置文件 _config.yml 中定义的 permalink 格式是有明显区别的。 相关页面不会被索引到首页、归档页，也不会进入使用 site.posts 循环读取的时间轴页上。 个人感觉：使用 hexo 的 Front-matter 指定的标题样式比使用 h1 配置要合适一点（因为默认的 h1 渲染出来的文字太大了！！！） 独立页面中的链接的 .html 扩展名不能删除，也不会被裁减。 在页面中定义 permalink 、 path 等均毫无意义，独立页仍然使用 :title（文件名）.html 作为连接名（实际上，个人还是喜欢这种形式的链接，名称固定，一目了然，而且只要不放出来，别人就不一定能够猜出来） 分页hexo 的分页依赖于以下插件： - hexo-generator-index - hexo-generator-archive - hexo-generator-tag 默认已在 _config.yml 文件配置了首页的分页 index_generator: per_page: 5 同样可以增加相应的分页 archive_generator: per_page: 20 yearly: true monthly: true tag_generator: per_page: 10"},{"title":"hexo-theme-faradays 开发记录","date":"2022-03-07T13:24:24.366Z","updated":"2022-03-07T13:24:24.366Z","comments":true,"path":"about/hidden-change_log【hexo-theme-faradays】.html","permalink":"https://faradays-studio.gitee.io/about/hidden-change_log%E3%80%90hexo-theme-faradays%E3%80%91.html","excerpt":"","text":"项目概要 创建于: 2020/07/05 08:23:50 0.0.0 更新于: 2020/09/07 00:07:38 0.2.0 项目名称： Faradays 〔Ocean〕 设计理念：立足现在，放眼未来。 许可协议：请遵守 AGPLv3 协议，侵权必究！ Licensed under GNU AGPLv3. You may send your request to imhhj@vip.qq.com and wait for your License Confirmation email. See https://www.gnu.org/licenses/agpl-3.0.html or https://choosealicense.com/licenses/agpl-3.0/ for the license details. TO-DO 实现以下功能 完善 Faradays 主题 添加标签数量及分类数量统计功能。 完善主题文档，做好开源准备 完善独立页的语法高亮功能（代码生成和CSS样式设置） 完善独立页配置分页功能（并增加文章编号功能，排序方式也是插件决定的） 手机模式： 打赏图片过大等问题处理 打赏图标无法设置位置 tag 文字缩小，打赏文字缩小 首页文字减少 时间轴样式定制 博文目录呈现 菜单上下滚动导航 存档/时间轴中的标签云字体缩小 标签弹窗的高度如何设定，或者如何滑动？ 完善自动配色体系： 通过 JavaScript 实现白天、夜晚模式切换 通过CSS 调用 prefers-color-scheme 自动变色 时间轴、独立页的分页功能 Gitalk 评论迁移到 Gitee 仓库存储 完善根据站点地址动态加载 JavaScript 脚本的功能，并统一合并已有的统计、分析、评论等相关脚本，避免分散。 完善页面导航功能，可人工折叠？ 完善博主展示 增加相册功能 自动初始化 Gitalk 评论，gitalk 本地化 评论样式个性化 自动添加类似标签的文档关联阅读 调整分类中的标签云显示值，以及显示大小改为 rem 形式 增加编辑说明（设定专用样式？如何调用？放在标题区？） 不蒜子导致网站页面载出时间较长 增加背景音乐功能 增加图床功能，经过分析，GitHub 慢的主要原因就是首页的图加载时间太慢了 验证 themes\\faradays\\.gitignore 中设置过滤文件清单 参考 3-hexo ，实现基于作者进行检索的功能 考虑集成 chatra 聊天工具 添加雪花特效/代码雨，在冬天特定时间会下雪 hexo-git-backup 插件备份你的 Hexo 博客？ 解决代码高亮不能生成标题的问题 解决首页原有的目录无法有效展示的问题（即 layout 自定义问题） DONE：功能升级 卡片式设计，标题和内容摘要支持大范围点击跳转； 文章支持动态目录功能 定制页面内容 打赏图片一次显示，无须切换 增加原创字段 original，并展示在页面中 大封面，下方含有标签跳转链接（需要统一文字大小） 归档页、时间轴增加固定的顶部菜单（便于跳转返回） 支持 gittalk 评论系统 时间轴按同一年分组倒序排列，而不被拆分为多组来排序 增加 QQ 聊天功能 多作者模式，并增加作者个人主页的跳转链接 解决文章生成时文件头含有奇怪字符的问题 增加页面加载时间 gitee 自动部署更新 标签云页，如能做到标签按数量自动排序更好 主动推送至百度，push 脚本加载时间较长，大约需要2s（但由于百度不支持，已取消） 双站点 sitemap 同步生成 自定义 404 页 标题/作者 打字效果 完善 Faradays 主题 梳理文件结构，分开设置 post 、 page 的布局样式 增加按钮切换主题色、网页内容等的方法 修复首页文章序号没有跨页连续编号的问题 增加 barnner 生成，包括每个文章的和站点的 增加多级列表的引导符号样式定义 page 生成目录 增加网站文章链接清单生成功能 自定义修改 hexo-generator-baidu-sitemap 插件：增加 priority 参数和 tag、 categories 标签。 调整配置为多站点配置，便于不同站点自动使用 tocbot 时间轴高亮显示与页面滚动不匹配 首页添加最后更新的文档 兼容 IE，并弹出浏览器版本兼容提示 兼容 Chrome 高版本，解决文章编号位置错乱问题 更新日志0.2.14 修改 themes\\faradays\\layout\\_layout\\head.ejs，解决 isSite1 定义位置靠后导致的部分 JavaScript 取值异常问题。 升级 typed 到 2.0.12版本，同步修改 themes\\faradays\\layout\\_layout\\plugins\\typed.ejs 中的文件名称，并在 hemes\\faradays\\source\\js 目录下增加 typed.min.js.map 文件。 0.2.13，&gt;2h，2021/10/07 22:46:06 themes\\faradays\\layout\\_layout\\header-index.ejs 首页最近3篇文章的标题处，增加时间轴页跳跳转链接。 themes\\faradays\\layout\\layout.ejs 中 switchBackground() 纠正为 switchBackground(1) ，解决了网站初次切换夜间模式失效问题。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，纠正代码中日期转换为数字比较的bug（今天的日期没有补0，导致计算出错），新的计算方式采用时间戳来比较计算。 由于 github 升级，原有的 hexo 使用 https 模式更新失效，暂时没有找到 token 的应用方法，改用 gitee 相同的 git 模式。_config.yml 修改如下： deploy: type: git repository: gitee: url: https://gitee.com/faradays-studio/faradays-studio.git # master/blog 分支为网站分区， theme 为分支为个人定制的主题 branch: blog github: url: git@github.com:faradays-studio/faradays-studio.github.io.git branch: blog # 以下方式取消，并且对 github 网站的 ssh 公钥采用 id_rsa 内容。不再重命名。 #github: https://github.com/faradays-studio/faradays-studio.github.io.git,blog 0.2.12，2.12，2021/03/23 21:01:00 首页增加最后的3篇文章显示； 修改手机版样式 首页背景图样式：实现全屏覆盖；文字也靠下摆放。 开启各页中的侧边栏图标： 搜索样式：确保文字以及边框不过大； 文章页打赏、分享图标：适当缩小符号； 文章页打赏弹窗：调整关闭按钮位置； 修改标签、分类文字大小：themes\\faradays\\source\\js\\main.js 中 15px 修改为 0.7rem 。 标签弹窗、分类弹窗中的行高调整： themes\\faradays\\source\\css\\_partial\\sidebar.styl 中修改 a 标签及其前后的元素属性。 0.2.11，&gt; 6h，2021/03/06 02:17:18 调整手机模式中的存档页、时间轴页样式 themes\\faradays\\source\\css\\_partial\\mobile.styl。 纠正手机模式样式中由于缩进配置不当，导致的文章页版权PC样式被覆盖的问题。 重新梳理页面布局 首页的文章导航取消，调整到独立页（但目前暂时不具备分页功能、编号功能）； 调整 themes\\faradays\\layout\\layout.ejs 相应代码（该文件为页面布局的总领文件）； 顶部固定工具栏应用到所有页面； typed.js 改用本地文件，不再使用 CDN 加载； 0.2.10，3.3h，2021/02/17 13:18:58 增加主题版本显示 theme\\faradays\\_config.yml 增加相应信息： code themes\\faradays\\layout\\_layout\\footer.ejs 调整网站样式 调整PC模式的样式：QQ联系、打赏图标的大小，由 37px 调整为 33px； 调整手机模式样式：首页标题、标签高度以及宽度调整，首页关闭文章tags，文字及图标调小；文章页标题、段落、代码、表格文字调小，打赏图标以及二维码、分享图标大小调整，菜单中文字样式调整、tags关闭； 调整首页 logo 以及文章页的作者名称的感应发光效果。 如果需要避免被PC模式样式覆盖，那么就需要将手机模式的样式的上下层注明，否则可能无法不生效。 如果将多个样式合并到一个上级中一起编写，那么样式就可能会失效；因此推荐手机样式按几个大类一起配置 px是绝对单位，一旦设置了就无法因为适应页面大小而改变。em和rem是相对长度单位，意思是长度不是定死了的，更适用于响应式布局。em相对于父元素，rem相对于根元素（推荐使用rem）。 根据 hexo 官网信息，调整首页、存档页的分页符号显示效果。（时间轴页取消分页，毕竟原本分页页没有效果；通过之前提供的 toc 导航功能可以快速切换） 0.2.9，8.2h，2021/02/15 00:03:47 增加 giteement 评论系统（不成功）： 增加 themes\\faradays\\layout\\_layout\\plugins\\comments\\giteement.ejs 文件： &lt;% if (!index &amp;&amp; post.comments &amp;&amp; theme.giteement &amp;&amp; theme.giteement.enable)&#123; %&gt; &lt;div id=&quot;giteement-ctn&quot;&gt;&lt;/div&gt; &lt;% if (theme.giteement &amp;&amp; theme.giteement.remote)&#123; %&gt; &lt;!-- &lt;link rel=&quot;stylesheet&quot; href=&quot;https://giteement.oss-cn-beijing.aliyuncs.com/wd-discuss.css&quot;&gt; --&gt; &lt;!-- &lt;script src=&quot;https://giteement.oss-cn-beijing.aliyuncs.com/discuss_hexo.js&quot;&gt;&lt;/script&gt; --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://giteement.oss-cn-beijing.aliyuncs.com/default.css&quot;&gt; &lt;script src=&quot;https://giteement.oss-cn-beijing.aliyuncs.com/giteement.browser.js&quot;&gt;&lt;/script&gt; &lt;% &#125; else &#123; %&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%=config.root%&gt;assets/default.css&quot;&gt; &lt;script src=&quot;&lt;%=config.root%&gt;assets/giteement.browser.js&quot;&gt;&lt;/script&gt; &lt;% &#125; %&gt; &lt;script&gt; var giteement = new Giteement(&#123; id: &#39;&lt;%=page.date.format(&#39;YYYYMMDDHHmmss&#39;)%&gt;&#39;, owner: &#39;&lt;%=theme.giteement.giteeID%&gt;&#39;, repo: &#39;&lt;%=theme.giteement.repo%&gt;&#39;, backcall_uri: &#39;&lt;%=theme.giteement.redirect_uri%&gt;&#39;, oauth_uri: &#39;&lt;%=theme.giteement.oauth_uri%&gt;&#39;, oauth: &#123; client_id: &#39;&lt;%=theme.giteement.gitment_oauth.client_id%&gt;&#39;, client_secret: &#39;&lt;%=theme.giteement.gitment_oauth.client_secret%&gt;&#39; &#125;, &#125;) giteement.render(&#39;giteement-ctn&#39;) &lt;/script&gt; &lt;% &#125; %&gt; themes\\faradays\\layout\\_post\\article.ejs、themes\\faradays\\layout\\_page\\article.ejs 修改： &lt;% &#125; else if (theme.giteement.enable) &#123; %&gt; &lt;%- partial(&#39;../_layout/plugins/comments/giteement&#39;) %&gt; themes\\faradays\\layout\\_layout\\head-more.ejs 添加引用 &lt;% if (theme.giteement.enable)&#123; %&gt; &lt;script src=&quot;https://giteement.oss-cn-beijing.aliyuncs.com/oauthcallback.browser.js&quot;&gt;&lt;/script&gt; &lt;% &#125; %&gt; 包括 gitalk 、 giteement 在内，相应 JavaScript 库实际在 ../_layout/plugins/comments/ 相应的文件中也进行了引用，因此无需在此处引用也可以。 themes\\faradays\\layout\\_layout\\after-footer-more.ejs 进行评论脚本调用： &lt;% if (theme.giteement.enable)&#123; %&gt; &lt;script&gt; &lt;%# HHJ@20210212，调用 giteement 函数 %&gt; Oauthcallback(); &lt;/script&gt; &lt;% &#125; %&gt; 2021/02/13，已将此处的 gitalk 、 giteement 调用转移到 ../_layout/plugins/comments/ 中对应的 .ejs 文件中。 将 gitalk 、 giteement 相关的样式、脚本下载放入 themes\\faradays\\source 对应的文件夹，备用。 改为 stylus 格式，以便于统一定制（使用主题色）： npm install -g stylus d: &amp;&amp; cd &quot;D:\\WebSites\\faradays-studio.hexo\\themes\\faradays\\source\\css&quot; # CSS 转化为 Stylus stylus --css giteement-default.css giteement-default.styl stylus --css gitalk.css gitalk.styl stylus --css github.min.css github.min.styl #Stylus 转化整个目录为 CSS（用于验证是否生成正常，新建test文件夹并放入 styl 文件） #stylus --compress test/ # 测试表明，`#CFD8DC` 直接替换为 `rgba(main-color,0.8)` 不可行 修改 #CFD8DC 为指定的动态颜色（#E23795 或 #FFA500）： $main_color = convert(hexo-config(&quot;stylus.main_color&quot;)) rgba($main_color,0.3) 试验1：直接使用 rgba(main-color,0.8) 报错无法渲染，不过 rgba(255,255,255,0.3) 编译正常，证明只是变量无法识别为颜色 试验2：直接使用 main-color 不可用，需要在文件头指明该变量的定义 $main_color = convert(hexo-config(&quot;stylus.main_color&quot;)) 试验3：增加 opacity: 0.3 会影响整体的可视效果、而不是单纯的边框颜色，不建议 项目 文件加载 文件生成 综合时间 独立渲染giteement(styl) (2.98+3+2.78)/3=2.92 (4.4+4.07+4.27)/3=4.25 7.17 不渲染giteement (2.83+2.85+2.91)/3=2.86 (3.61+3.84+3.72)/3=3.72 6.59 拆分渲染giteement(styl+style) (3.03+2.94+3.01)/3=2.99 (4.29+3.78+4.15)/3=4.07 7.07 拆分giteement(styl+css) (2.96+2.93+2.86)/3=2.92 (4.32+4.1+3.88)/3=4.1 7.02 增加引用 themes\\faradays\\source\\css\\style.styl，以便整合到 style.styl 中生成（只有_开头的 styl 文件需要以下操作）： @import &quot;giteement-default&quot; 增加 gitalk 相应的 svg、css、js 本地资源，配套更改 _config.yaml 配置，同时相应的脚本调用合并到一个 ejs 文件中。 https://cdn.jsdelivr.net/npm/gitalk@1/src/assets/icon/github.svg 替换为 /svg/github.svg 。 在 github 中增加一个专门用于 gitee 站点的应用授权，并添加到 themes\\faradays\\_config.yaml` 中： gitalk: enable: true # 是否启用评论系统 remote: false # 使用本地资源 owner: &#39;faradays-studio&#39; # GitHub ID repo: &#39;faradays-studio.github.io&#39; #存储评论的 repo 名称，而不是路径 client_id: &#39;90b449ff273a263117ec&#39; #client ID client_secret: &#39;0a3ccea67a4d3f03cbff012eeac1a8547e367aad&#39; #client secret # https://github.com/settings/applications/new client_id2: &#39;c2b078c0b4799f519b96&#39; # gitee 站用client ID client_secret2: &#39;fab5fe7470b3d790db0e90e4ac58d5b5aa3bda11&#39; # gitee 站用client secret 调整 themes\\faradays\\layout\\_layout\\plugins\\comments\\gitalk.ejs 支持两个 github 授权分别许可： if (isSite1 == 2)&#123; // github 站 &lt;%# HHJ@20200822 %&gt; const gitalk = new Gitalk(&#123; clientID: &#39;&lt;%- theme.gitalk.client_id %&gt;&#39;, clientSecret: &#39;&lt;%- theme.gitalk.client_secret %&gt;&#39;, repo: &#39;&lt;%- theme.gitalk.repo %&gt;&#39;, &lt;%# The repository of store comments %&gt; owner: &#39;&lt;%- theme.gitalk.owner %&gt;&#39;, admin: [&#39;&lt;%- theme.gitalk.owner %&gt;&#39;], id: location.pathname, &lt;%# 要求唯一，且字数不超过 50；或 (location.pathname).substring(0,49) %&gt; labels: [&#39;gitalk&#39;, &#39;post-comment&#39;, &#39;博客评论&#39;], perPage: 3, distractionFreeMode: false &lt;%# Facebook-like distraction free mode %&gt; &#125;); gitalk.render(&#39;gitalk-faradays&#39;); &#125; else &#123; // gitee 站 &lt;%# HHJ@20210214，两个站点共享一个 github 仓库的评论 %&gt; const gitalk = new Gitalk(&#123; clientID: &#39;&lt;%- theme.gitalk.client_id2 %&gt;&#39;, clientSecret: &#39;&lt;%- theme.gitalk.client_secret2 %&gt;&#39;, repo: &#39;&lt;%- theme.gitalk.repo %&gt;&#39;, &lt;%# 评论保存在 github 站点 %&gt; owner: &#39;&lt;%- theme.gitalk.owner %&gt;&#39;, admin: [&#39;&lt;%- theme.gitalk.owner %&gt;&#39;], id: location.pathname, &lt;%# 要求唯一，且字数不超过 50；或 (location.pathname).substring(0,49) %&gt; labels: [&#39;gitalk&#39;, &#39;post-comment&#39;, &#39;博客评论&#39;], perPage: 3, distractionFreeMode: false &lt;%# Facebook-like distraction free mode %&gt; &#125;); gitalk.render(&#39;gitalk-faradays&#39;); &#125; 调整目录页，增加年份作为导航标题，以便于日后文章非常多时使用： themes\\faradays\\layout\\_timeline\\timeline.ejs 增加 tocbot 相关 div 及 h 标签的 id 用于显示目录 themes\\faradays\\layout\\_layout\\after-footer-more.ejs 修改 tocbot 针对 post/page、timeline 分别初始化各自的 tocbot 变量。 themes\\faradays\\layout\\_timeline\\timeline.ejs 增加 h1 标签，确保高亮样式显示正常。 增加 themes\\faradays\\source\\css\\timeline-more.css 解决默认的目录样式每个层级缩进 1字符导致的空白过大问题。 下载 hexo-theme-melody v1.9.0 用于学习 D: &amp;&amp; cd D:\\WebSites\\faradays-studio.hexo git clone https://github.com/Molunerfinn/hexo-theme-melody themes\\melody npm install pug -g 修改 themes\\faradays\\layout\\_layout\\head-more.ejs 中关于 github.min.css 样式引用条件，确保独立页也具有高亮样式（默认情况下，hexo 生成时已配置好相关的样式，只需要调用 css 格式即可）。 &lt;% if (is_post() || is_page())&#123; %&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/github.min.css&quot;&gt; &lt;% &#125; %&gt; 关闭高亮配置中的，自动检测语言功能，文件加载时间减少大约 1s。 尝试使用官方的 highlight.js/src 程序包，结果无法使用。 &lt;%- css(&#39;/highlight/styles/github.css&#39;) %&gt; &lt;%- js(&#39;/highlight/highlight&#39;) %&gt; hexo 自带的 highlight.js 可单独使用；不过配合 hexo 自身的生成效果更好一些。 测试表明，关闭主配置中的 highlight 设置，直接使用 highlight.js 自身的高亮更为准确（开启后，一旦存在注释，则后续会高亮错误；而且不知是何原因，之前可以使用的居中标题，现在不能使用了！！！！！！！） 更换 logo 及首页黄色标题。 升级 hexo 、hexo-deployer-git、hexo-renderer-inferno 至最新版。 0.2.8，&gt;2h，2021/02/12 22:11:37 增加 bing 统计到网页代码中（功能已验证）： 在 themes\\faradays\\_config.yml 文件中 site1: bing: analytics: &#39;5c9sqtgmtm&#39; 同步修改 cnzz、bing 为空的书写方式。 在 themes\\faradays\\layout\\_layout\\head.ejs 增加新文件的导入： &lt;%- partial(&#39;plugins/analytics/bing-analytics&#39;) %&gt; 创建 themes\\faradays\\layout\\_layout\\plugins\\analytics\\bing-analytics.ejs 文件，写入统计脚本如下： &lt;% if (theme.site1.bing.analytics || theme.site2.bing.analytics)&#123; %&gt; &lt;script type=&quot;text/javascript&quot;&gt; if ( isSite1 == 1 &amp;&amp; &lt;%- theme.site1.bing.analytics.length &gt; 0 %&gt; )&#123; (function(c,l,a,r,i,t,y)&#123; c[a]=c[a]||function()&#123;(c[a].q=c[a].q||[]).push(arguments)&#125;; t=l.createElement(r);t.async=1;t.src=&quot;https://www.clarity.ms/tag/&quot;+i; y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y); &#125;)(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;&lt;%- theme.site1.bing.analytics %&gt;&quot;); &#125; else if (isSite1 == 2 &amp;&amp; &lt;%- theme.site2.bing.analytics.length &gt; 0 %&gt; )&#123; (function(c,l,a,r,i,t,y)&#123; c[a]=c[a]||function()&#123;(c[a].q=c[a].q||[]).push(arguments)&#125;; t=l.createElement(r);t.async=1;t.src=&quot;https://www.clarity.ms/tag/&quot;+i; y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y); &#125;)(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;&lt;%- theme.site2.bing.analytics %&gt;&quot;); &#125; &lt;/script&gt; &lt;% &#125; %&gt; 上述修改最终生成以下内容： &lt;script async=&quot;&quot; src=&quot;https://www.clarity.ms/eus2/s/0.6.4/clarity.js&quot;&gt;&lt;/script&gt; &lt;script async=&quot;&quot; src=&quot;https://www.clarity.ms/tag/5c9sqtgmtm&quot;&gt;&lt;/script&gt; 纠正 isSite1 算法中不严谨的部分，纠正配套的各个网站统计用的 JavaScript 脚本中 ejs 变量引用不当问题（变量必须使用&lt;%- hexo配置参数 %&gt;包围，字符串变量需要使用 .length &gt; 0 进行 if 判断）。 0.2.7，8.95h，2021/02/08 23:52:22 在根目录中增加 robots.txt 文件，除了静态资源和 \\about\\hid*.html 外，其他文件均允许访问和索引。 source\\robots.txt 增加内容如下： # Faradays&#39; Studio User-agent: * Disallow: Disallow: /css/ Disallow: /images/ Disallow: /js/ Disallow: /static/ Disallow: /about/hid*.html Sitemap: https://faradays-studio.gitee.io/sitemap1.xml Sitemap: https://faradays-studio.github.io/sitemap2.xml 增加 JavaScript 全局变量 themes\\faradays\\layout\\_partial\\head-more.ejs 增加以下变量定义： &lt;%# HHJ@20210208-20210212，添加全局变量，用于判别主站地址 %&gt; var hmt_site = window.location.host; var isSite1 = 0; if ( hmt_site.indexOf( &quot;&lt;%=theme.site1.url%&gt;&quot;.substr(8) ) != -1) &#123; isSite1 = 1; &#125; else if ( hmt_site.indexOf( &quot;&lt;%=theme.site2.url%&gt;&quot;.substr(8) ) != -1) &#123; isSite1 = 2; &#125; &lt;/script&gt; 网友提出， ejs 不可以使用 JavaScript 变量，因为 ejs 比 JavaScript 运行更早；但是 JavaScript 可以使用 ejs 变量。indexOf 不支持 “https://” 字符的使用，因此需要使用 substr 函数。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs 百度推送判别条件如下： if ((isSite1 == 1 &amp;&amp; theme.site1.baidu.push) || (isSite1 == 2 &amp;&amp; theme.site2.baidu.push) )&#123; ... &#125; 修改百度分析 themes\\faradays\\layout\\_layout\\plugins\\analytics\\baidu-analytics.ejs 、Google 分析 themes\\faradays\\layout\\_layout\\plugins\\analytics\\google-analytics.ejs 、CNZZ 分析 themes\\faradays\\layout\\_layout\\plugins\\analytics\\cnzz-analytics.ejs 脚本。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs 完善站点 barnner 为空时的处理： if ( dv1 != null ) &#123; ... &#125; 调整首页中图标和动态文字的先后顺序，避免文字清除时图标会上跳。 修改主题色的定义，简化设置的位置 themes\\faradays\\_config.yml增加以下参数，并对应地修改 themes\\faradays\\layout\\_archive\\archive.ejs 、 themes\\faradays\\layout\\_timeline\\timeline.ejs 的配置引用： stylus: # 主题色（用于网站主题以及独立 timeline、tagcloud 页） main_color: &#39;#0cc&#39; themes\\faradays\\source\\css\\_variables.styl 修改主题色如下： //main-color = #0cc //main-color = #e23 //main-color = orange main-color = convert(hexo-config(&quot;stylus.main_color&quot;)) themes\\faradays\\source\\css\\_extend.styl 中定义文章 tag 标签的颜色（居然支持 rgba(main-color,0.8) 的表达方式，不过不能修改 opacity 值，那样的后果是文字颜色也跟着变为半透明了）： $tags-style .color1 background: main-color opacity: 1 &amp;:before /* 主题色 */ border-right-color: main-color .color2 background: rgba(main-color,0.8) opacity: 1 &amp;:before /* 浅红 */ border-right-color: #EE6252 .color3 background: rgba(main-color,0.7) opacity: 1 &amp;:before /* 绿色*/ border-right-color: #4cae4c .color4 background: rgba(main-color,0.6) opacity: 1 &amp;:before /* 洋红色 */ border-right-color:#E23794 .color5 background: rgba(main-color,0.5) opacity: 1 &amp;:before /* 琉璃黄 */ border-right-color:#f0ad4e 注意，上述提到的标签动态颜色是靠 class=&quot;color&lt;%= tag.name.length % 5 + 1 %&gt;&quot; 动态设置 class 名称实现的，判断的是字符的长度！ 0.2.6，4.86h，2021/02/03 21:00:58 增加bing站长收录 修改 themes\\faradays\\layout\\_partial\\head.ejs 以确保 gitee 主站可使用 HTML 方式验证通过： &lt;%# HHJ@20210202，首页增加bing站长平台验证功能 %&gt; &lt;% if (theme.site1.bing.verification &amp;&amp; theme.site1.bing.verification.length)&#123; %&gt; &lt;meta name=&quot;msvalidate.01&quot; content=&quot;&lt;%= theme.site1.bing.verification %&gt;&quot; /&gt; &lt;% &#125; %&gt; themes\\faradays\\_config.yml增加 theme.site1.bing.verification: &#39;F13025CFC6DB843A034767044D5EB3AA&#39; （注册邮箱为 zyvany@outlook.com ）； 2021/02/02，已登录完成 gitee 站点的验证。（虽然 source/BingSiteAuth.xml 文件已经放置了，但是由于之前改名了，无法验证成功，证明不能修改名字） 添加 https://faradays-studio.gitee.io/sitemap1.xml 文件到 bing 网站中。 由于目前的 sitemap 不够完善，以下完整手动提交： https://faradays-studio.gitee.io/archives/ https://faradays-studio.gitee.io/timeline/ https://faradays-studio.gitee.io/about/ &gt; - 1/31，Bing 已索引 `https://faradays-studio.gitee.io/` 站点的4个URL（包括最后一个文章 202101301128 以及手动提交的 about、timeline、archives），并于 2/2 开始抓取网页内容。 &gt; - 更新系统 sitemap 后，2/4 新增索引 26 个，共32个；2/5 索引网页变为一共 30 个。 &gt; - 2021/02/08 23:38测试国际版已检索到1条 tag 记录；2021/02/09 23:08:05检索到14条记录，主要以 tag 和 category 为主，国内版没有记录。 &gt; - 2021/02/12 上午，再次测试国内版已收录网站，发现 2 个 URL；国际版仍然为 14 个 URL。至此，基本确认收录工作已基本完成。 &gt; - 2021/03/21，查看 `https://faradays-studio.gitee.io/` 的收录情况：国际版 55 个、国内版 14 个；同时查看 `https://faradays-studio.github.io/` 也已经自动收录：国内 13 个、国际版 30 个！ 调整文章内中主站（site1）、从站（site2）的描述以及 url 地址关联变量名称（为后续进行多主站管理做好准备）。 sitemap: site1 使用网页验证，site2 使用文件来验证。 参考 hexo-generator-sitemap 对 hexo-generator-baidu-sitemap 进行修改，确保同时生成 2 个sitemap的同时，增加了 tag 、 categorie 标签并且设置更新时间为当前时间。 node_modules\\hexo-generator-baidu-sitemap\\sitemap2.ejs 修改如下： &lt;% var day0 = new Date(); %&gt; &lt;% var dayx = &quot;&quot;.concat(day0.getFullYear(),&quot;/&quot;, day0.getMonth() + 1,&quot;/&quot;, day0.getDate()) %&gt; &lt;% tags.forEach(function(tag)&#123; -%&gt; &lt;url&gt; &lt;loc&gt;&lt;%- encodeURI(url + tag.path) %&gt;&lt;/loc&gt; &lt;lastmod&gt;&lt;%= dayx %&gt;&lt;/lastmod&gt; &lt;changefreq&gt;weekly&lt;/changefreq&gt; &lt;priority&gt;0.8&lt;/priority&gt; &lt;/url&gt; &lt;% &#125;) -%&gt; &lt;% categories.forEach(function(cat)&#123; -%&gt; &lt;url&gt; &lt;loc&gt;&lt;%- encodeURI(url + cat.path) %&gt;&lt;/loc&gt; &lt;lastmod&gt;&lt;%= dayx %&gt;&lt;/lastmod&gt; &lt;changefreq&gt;weekly&lt;/changefreq&gt; &lt;priority&gt;0.7&lt;/priority&gt; &lt;/url&gt; &lt;% &#125;) -%&gt; node_modules\\hexo-generator-baidu-sitemap\\lib\\generator2.js 修改如下： var xml = sitemapTmpl(&#123; theme: theme, posts: posts, tags: locals.tags.toArray(), categories: locals.categories.toArray() &#125;); 坚持使用后者是因为：后者不会泄露我的 page 相关的 URL ，不过独立页又得独立生成了！ hexo-generator-sitemap 运算步骤： index.js ← rel.js index.js ← /lib/generator.js ← /lib/template.js ← sitemap.xml 尝试修改 hexo-generator-sitemap ，可以生成文件，但是却不是指定的格式！！！ 0.2.5，5.45h+，2021/01/07 22:50:31 调整百度统计脚本，将根据网站路径，自动加载对应的网站统计 ID 。 重新调整横幅的时间判断方法，解决 ejs 无法自动判断时间来显示横幅的问题（改用 JavaScript 脚本实现）。 修改themes\\faradays\\source\\css\\_partial\\article.styl, 调整页面表格，由居中调整为左对齐、并缩进： .article-entry table td border: 1px solid #ddd vertical-align: middle // HHJ@20201221 padding: 3px 10px 3px 10px //text-align: center text-align: left // 首行缩进 1 字符 //text-indent: 1em 增加搜狗站长收录 修改 themes\\faradays\\layout\\_partial\\head.ejs 以确保 gitee 主站可使用 HTML 方式验证通过： ``` HTML &lt;%# HHJ@20201229，首页增加搜狗站长平台验证功能 %&gt; &lt;% if (theme.site1.sogou.verification &amp;&amp; theme.site1.sogou.verification.length)&#123; %&gt; &lt;meta name=&quot;sogou_site_verification&quot; content=&quot;&lt;%= theme.site1.sogou.verification %&gt;&quot; /&gt; &lt;% &#125; %&gt; ``` themes\\faradays\\_config.yml增加 baidu_site_verification: &#39;YmNlECnn33&#39;； 2020/12/29，已登录完成 gitee 站点的验证。 node_modules\\hexo-generator-sitemap\\sitemap.xml 修改 daily 为 weekly，标签的 priority 由 0.6 修改为 0.8。 自定义修改 node_modules\\hexo-generator-baidu-sitemap 插件功能，将规定的参数调整至主题，同时自动生成 2 个站点的 sitemap 文件。 在根路径下增加了 sitemap1.ejs 、sitemap2.ejs 写入模板文件； 对根路径下的入口函数文件 index.js 进行修改扩充如下： var config1 = hexo.theme.config.site1 = merge(&#123; sitemap: &#39;&#39; &#125;, hexo.theme.config.site1); // 读取 hexo.theme.config.site1.sitemap 配置值 if (!pathFn.extname(config1.sitemap))&#123; config1.sitemap += &#39;.xml&#39;; &#125; hexo.extend.generator.register(&#39;sitemap1&#39;, require(&#39;./lib/generator1&#39;)); var config2 = hexo.theme.config.site2 = merge(&#123; sitemap: &#39;sitemap2.xml&#39; &#125;, hexo.theme.config.site2); // 读取 hexo.theme.config.site2.sitemap 配置值 if (!pathFn.extname(config2.sitemap))&#123; config2.sitemap += &#39;.xml&#39;; &#125; hexo.extend.generator.register(&#39;sitemap2&#39;, require(&#39;./lib/generator2&#39;)); 在 \\lib 目录下增加 generator1.js 、generator2.js 文件。 themes\\faradays\\_config.yml 增加相应的参数，同时对百度收录站点中 gitee 站点的 sitemap 地址进行更换。 通过打印输出的方法，找到了读取主题配置的方法 0.2.4，10.69h，2020/10/12 22:08:51 为确保小分辨率的手机显示内容不越界，修改 themes\\faradays\\source\\css\\style.styl，对表格、链接进行强制换行： // HHJ@20201009，表格、链接强制换行 table, a word-wrap: break-word word-break: break-word 适当调整手机模式下首页图的高度（150px→370px）。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加 collapseDepth: 3, 设定，实现文章目录默认展示层级 由 2 级变为 3 级目录。 修改 themes\\faradays\\source\\css\\_partial\\reward.styl ，调整PC模式的外边距，确保手机模式显示打赏样式完整： .reward-lay // HHJ@20200806 //width: 360px //width: 523px //margin: 10px 30px 10px 30px margin-top: 30px margin-bottom: 30px 由于手机模式（mobile.styl）下的打赏图标样式失效，经多方尝试，使用媒体查询方法解决，修改 themes\\faradays\\source\\css\\_partial\\reward.styl 如下： .page-reward // HHJ@20201010，引入媒体查询模式确保位置摆放正常 @media mq-normal margin: 20px 33% @media mq-tablet margin: 20px 33% @media mq-mobile margin: 20px 13% 调整手机模式的菜单 mobile-header-menu-nav 以及分享图标 .post-share 的 z-index 为某个正数，确保其能够前台展示。 设置手机模式的博文目录： themes\\faradays\\source\\css\\_partial\\mobile.styl 增加基础元素样式 // HHJ@20201010，手机模式菜单元素的基础样式 .cmd-logo margin: 5px display: block cursor: pointer width: 27px height: 27px text-align: center line-height: 27px border-radius: 50% background: main-color color: #fff i font-size: 1.3rem line-height: 1.3em themes\\faradays\\layout\\_layout\\mobile-nav.ejs 增加以下 DOM 元素： &lt;div class=&quot;mobile-header-operation-container&quot;&gt; &lt;div class=&quot;title&quot;&gt;Operation&lt;/div&gt; &lt;span style=&quot;display:inline-block;&quot; id=&quot;sidebar-mode&quot; title=&quot;Daylight&quot; onClick=&quot;javascript:switchBackground(1)&quot;&gt; &lt;i class=&quot;fa fa-lightbulb-o&quot;&gt;&lt;/i&gt;&lt;/span&gt; &lt;%# HHJ@20201010，手机模式的博文目录 fa fa-navicon %&gt; &lt;span class=&quot;cmd-logo&quot; style=&quot;display:inline-block;&quot; title=&quot;Show/Hide TOC&quot; onClick=&quot;javascript:showTocOrNot()&quot;&gt; &lt;i class=&quot;fa fa-bookmark&quot;&gt;&lt;/i&gt;&lt;/span&gt; &lt;/div&gt; 设置手机模式下的目录样式： // HHJ@20200907，博文目录（tocbot） //.post-toc-pos #post-toc display: none float: left // HHJ@20201010，博文目录样式 .tocbot max-width: 100% margin-top: 17px background: #ccc 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加点击切换目录显示功能： &lt;script&gt; &lt;%# HHJ@20201010，点击显示/隐藏博文目录 %&gt; function showTocOrNot()&#123; var dv = document.getElementById(&quot;post-toc&quot;); console.log(dv.style.display); //100px if (dv.style.display === &#39;none&#39;)&#123; dv.style.display=&quot;block&quot;; &#125; else&#123; dv.style.display=&quot;none&quot;; &#125; &#125; &lt;/script&gt; 对 pre, code、blockquote 等样式进行边距微调等。 由于意外发现 .styl 文件注释符号使用 /* 注释 */ 仍然会显示，因此统一替换为 // 来表示注释。 增加打字效果 themes\\faradays\\layout\\_partial\\header.ejs 定义首页需要打字的位置： &lt;div id=&quot;header-description&quot;&gt; &lt;% if (theme.header_description)&#123; %&gt; &lt;% if (theme.typed.enable) &#123; %&gt; &lt;h3 id=&quot;typed&quot;&gt;&lt;/h3&gt; &lt;% &#125;else&#123; %&gt; &lt;h3&gt;&lt;%= theme.header_description %&gt;&lt;/h3&gt; &lt;% &#125; %&gt; &lt;% &#125; %&gt; &lt;/div&gt; themes\\faradays\\layout\\_index\\index.ejs 对需要打字的首页引入 JavaScript 函数： &lt;%# 文章标题引入打字效果 %&gt; &lt;% if (theme.typed.enable)&#123; %&gt; &lt;%- partial(&#39;../_layout/plugins/typed&#39;, &#123;typed_id: &#39;typed&#39;, typed_text: theme.header_description, typed_loop: true&#125;) %&gt; &lt;% &#125; %&gt; themes\\faradays\\layout\\_post\\post\\title.ejs 定义文章页需要打字的位置： &lt;%# 文章标题 %&gt; &lt;% if (theme.typed.enable) &#123; %&gt; &lt;h1 class=&quot;post-title&quot; id=&quot;typed2&quot; itemprop=&quot;name&quot;&gt;&lt;/h1&gt; &lt;% &#125;else&#123; %&gt; &lt;h1 class=&quot;post-title&quot; itemprop=&quot;name&quot;&gt;&lt;%= post.title %&gt;&lt;/h1&gt; &lt;% &#125; %&gt; themes\\faradays\\layout\\_post\\article.ejs 对需要打字的文章引入 JavaScript 函数： &lt;%# 文章标题引入打字效果 %&gt; &lt;% if (theme.typed.enable)&#123; %&gt; &lt;%- partial(&#39;../_layout/plugins/typed&#39;, &#123;typed_id: &#39;typed2&#39;,typed_text: post.title, typed_loop: false&#125;) %&gt; &lt;% &#125; %&gt; themes\\faradays\\layout\\_layout\\plugins\\typed.ejs 定义 typed 库及变量： &lt;script src=&quot;https://cdn.jsdelivr.net/npm/typed.js@2.0.11/lib/typed.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; var typed2 = new Typed(&quot;#&lt;%= typed_id %&gt;&quot;, &#123; strings: [&#39;&lt;%= typed_text %&gt;&#39;], startDelay: &lt;%= theme.typed.startDelay %&gt;, typeSpeed: &lt;%= theme.typed.typeSpeed %&gt;, loop: &lt;%= typed_loop %&gt;, backSpeed: &lt;%= theme.typed.backSpeed %&gt;, showCursor: &lt;%= theme.typed.showCursor %&gt; &#125;); &lt;/script&gt; 0.2.3，8.51h，2020/10/08 22:22:35 囧，还是修改 outer-index 样式，增大左右外边距，确保 FHD 屏幕显示居中。 调整 .reward-lay 样式，确保手机模式下打赏二维码 调整 .article-footer 样式，确保手机模式下留有尾部空白。 纠正 GitHub 中 sitemap 的 tag 、 categories 及站点的地址，与 GitHub 不对应的问题。 尝试对 hexo-generator-sitemap 引入变量，不成功；暂时放弃！！！ Hexo 使用 Nunjucks 来渲染帖子（在旧版本中使用Swig，两者有相似的语法），使用以下符号包装的内容将被解析，因而导致渲染冲突问题：&#123;&#123; &#125;&#125;、&#123;% %&#125;。 修复 article-header-num 值没有跨页进行连续编号的问题： themes\\faradays\\layout\\_index\\index.ejs： &lt;%- site.posts.length - page.prev * config.index_generator.per_page - post_num %&gt; themes\\faradays\\source\\css\\_partial\\article.styl 中 article-header-num 样式的 left 值由 -1em 调整为 -1.5em ； themes\\faradays\\source\\css\\_partial\\mobile.styl 中 增加 article-header-num 样式： // HHJ@20201008，首页文章编号 .article-header-num position: relative top: (article-padding)*3 left: -1.5em color: main-color opacity: 0.37 font-size: 1em 调整 themes\\faradays\\layout\\_layout\\head.ejs，避免标题内容 &lt;title&gt;&lt;/title&gt; 不在一行上。 themes\\faradays\\layout\\_timeline\\timeline.ejs 调整文章标题内容，避免不必要的换行使得标题前后各增加了一个空行； themes\\faradays\\source\\css\\timeline.styl 中对应圆圈符号的 margin-top 值由 -0.5em 调整为 -1em 。 .timeline2-article-date &amp;::before margin-top -1rem .timeline2-num margin-top -0.5rem 根据百度搜索资源平台，恢复百度自动推送功能。但调整为主题设置功能开关的方式： 您好，即日起搜索资源平台恢复“普通收录-自动推送”功能，以便更快发现与收录站点新增资源，降低站点维护成本。特别提醒，自动推送仅对已关联主体的站点开放。 themes\\faradays\\layout\\_layout\\after-footer-more.ejs 设置以下脚本 // https://ziyuan.baidu.com/college/courseinfo?id=267&amp;page=2#h2_article_title18 if ( &lt;%- theme.baidu_push %&gt; )&#123; (function()&#123; var bp = document.createElement(&#39;script&#39;); var curProtocol = window.location.protocol.split(&#39;:&#39;)[0]; if (curProtocol === &#39;https&#39;)&#123; bp.src = &#39;https://zz.bdstatic.com/linksubmit/push.js&#39;; &#125; else&#123; bp.src = &#39;http://push.zhanzhang.baidu.com/push.js&#39;; &#125; var s = document.getElementsByTagName(&quot;script&quot;)[0]; s.parentNode.insertBefore(bp, s); &#125;)(); console.log(&quot;已开启百度 “普通收录》自动推送” 功能\\n&quot;); &#125; themes\\faradays\\_config.yml 配套增加以下参数： baidu_push: false 增加文章的横幅功能（站点横幅具备到期自动撤销功能，目前只具备是否生成 DOM 判断）： themes\\faradays\\layout\\_post\\article.ejs 以及 themes\\faradays\\layout\\_page\\article.ejs 增加代码： &lt;%# HHJ@20201008，网站横幅 %&gt; &lt;% var day_start = theme.date_start %&gt; &lt;% var day_end = theme.date_end %&gt; &lt;% var day0 = date(new Date(), &#39;YYYYMMDD&#39;) %&gt; &lt;% if (post.post_banner ) &#123; %&gt;&lt;p class=&quot;banner&quot;&gt;&lt;%- post.post_banner %&gt;&lt;/p&gt; &lt;% &#125; else if (theme.site_banner ) &#123; %&gt; &lt;% if (day_end &gt;= day0 &amp;&amp; day_start &lt;= day0) &#123; %&gt;&lt;p class=&quot;banner&quot;&gt;&lt;%- theme.site_banner %&gt;&lt;/p&gt;&lt;% &#125; %&gt; &lt;% &#125; %&gt; &lt;%# HHJ@20201014，文章横幅【修改后】 %&gt; &lt;p class=&quot;banner&quot; id=&quot;banner_x&quot;&gt;&lt;% if (post.post_banner ) &#123; %&gt;&lt;%- post.post_banner %&gt;&lt;/p&gt; &lt;% &#125; %&gt; 注意： 该方法实现了 ejs 文件中直接进行变量定义和运算的功能，可以进一步结合 hexo 内置的 Helpers 函数功能，研究、探索实现更强大的动态内容功能！！！ 上述方法已被取消，2020/11/16 使用以下方法实现 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加以下脚本（存在的不足： 如果没有定义文章横幅和站点横幅，或站点横幅已经过期，会显示 banner 红条一瞬 ）： &lt;%# HHJ@20201116，站点横幅 %&gt; var day0 = today_1.toLocaleDateString().replace(/-/g,&quot;&quot;).replace(/\\//g,&quot;&quot;); var day_start = &lt;%- theme.date_start %&gt;; //console.log(day_start); var day_end = &lt;%- theme.date_end %&gt;; //console.log(day_end); var banner1 = &quot;&lt;%- page.post_banner %&gt;&quot;; //console.log(banner1); var banner2 = &quot;&lt;%- theme.site_banner %&gt;&quot;; //console.log(banner2); // test!=&quot;&quot; &amp;&amp; test!=null &amp;&amp; test!=undefined var dv1 = document.getElementById(&quot;banner_x&quot;); if ( banner1 == &quot;&quot; ) &#123; if ( banner2 != &quot;&quot; &amp;&amp; day_start &lt;= day0 &amp;&amp; day_end &gt;= day0 ) &#123; //console.log(dv1.innerHTML); dv1.innerHTML = banner2; //console.log(dv1.innerHTML); &#125; else &#123; dv1.style.display = &quot;none&quot;; //console.log(&quot;hide!\\n&quot;); &#125; &#125; 2021/10/01，修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，纠正代码中日期转换为数字比较的bug（今天的日期没有补0，导致计算出错）： //var day0 = today_1.toLocaleDateString().replace(/-/g,&quot;&quot;).replace(/\\//g,&quot;&quot;); // 输出 2021101，而不是20211001 //var day0 = today_1.toISOString().replace(/-/g,&quot;&quot;).replace(/\\//g,&quot;&quot;); // IE8+，格式为: YYYY-MM-DDTHH:mm:ss.sssZ var day0 = (new Date()).getTime(); console.log(day0); var day_start = (new Date()).setFullYear(&lt;%- theme.date_start %&gt;); console.log(day_start); var day_end = (new Date()).setFullYear(&lt;%- theme.date_end %&gt;); console.log(day_end); themes\\faradays\\source\\css\\_partial\\header.styl 增加对应的样式： // HHJ@20201008，横幅 .banner font-size: 2rem line-height: 1.3em text-align: center padding: 7px margin-bottom: 10px color: yellow background: red z-index: -2 themes\\faradays\\source\\css\\_partial\\mobile.styl 增加对应的样式： // HHJ@20201008，横幅 .banner font-size: 1rem line-height: 1.7em text-align: center padding: 3px margin-bottom: 7px color: yellow background: red z-index: -2 themes\\faradays\\_config.yml 中增加以下参数： # 网站公告 site_banner: 伟大的中华人民共和国万岁！伟大的中国共产党万岁！伟大的中国人民万岁！ date_start: 20201001 date_end: 20201031 修改 themes\\faradays\\source\\css\\style.styl ，增加多级无序列表的前导符号默认样式： // 设置默认的多级列表样式 ul li list-style-type: square ul li list-style-type: disc ul li list-style-type: circle 增加独立页目录功能： themes\\faradays\\layout\\_page\\article.ejs ： &lt;%# HHJ@20201008，增加独立页目录功能 %&gt; &lt;% if (post.style == 1)&#123; %&gt; &lt;h1 class=&quot;post-title&quot; itemprop=&quot;name&quot;&gt;独立页目录&lt;/h1&gt; &lt;table style=&quot;width:100%; border:1px solid grey;border-collapse:collapse;background-color:#eee;&quot;&gt; &lt;% var posts_fs = site.pages.sort(&#39;-date&#39;); %&gt; &lt;% posts_fs.each(function(post, i)&#123; %&gt; &lt;tr style=&quot;line-height:1.7em;&quot;&gt; &lt;th&gt;&lt;%= (i + 1) %&gt;&lt;/th&gt; &lt;th&gt;&lt;a style=&quot;text-decoration:none;&quot; href=&quot;&lt;%- url_for(post.path) %&gt;&quot; target=&quot;_blank&quot; itemprop=&quot;url&quot;&gt;&lt;%= post.title %&gt;&lt;/a&gt;&lt;/th&gt; &lt;th&gt;&lt;%- post.source %&gt;&lt;/th&gt; &lt;th&gt;&lt;%- post.permalink %&gt;&lt;/th&gt; &lt;/tr&gt; &lt;% &#125;) %&gt; &lt;/table&gt; &lt;h1 class=&quot;post-title&quot; style=&quot;padding-top:10px;&quot;&gt;博文链接清单&lt;/h1&gt; &lt;table style=&quot;width:100%; border:1px solid grey;border-collapse:collapse;background-color:#eee;&quot;&gt; &lt;% var posts_fs = site.posts.sort(&#39;-date&#39;); %&gt; &lt;tr style=&quot;line-height:1.7em;&quot;&gt; &lt;%# 标题单元格 %&gt; &lt;th&gt; &lt;% posts_fs.each(function(post, i)&#123; %&gt; &lt;p&gt;&lt;a style=&quot;text-decoration:none;&quot; href=&quot;&lt;%- url_for(post.path) %&gt;&quot; target=&quot;_blank&quot;&gt;&lt;%= post.title %&gt;&lt;/a&gt;&lt;/p&gt; &lt;% &#125;) %&gt; &lt;/th&gt; &lt;%# 链接单元格 %&gt; &lt;th&gt; &lt;% posts_fs.each(function(post, i)&#123; %&gt; &lt;p&gt;&lt;%- post.permalink %&gt;&lt;/p&gt; &lt;% &#125;) %&gt; &lt;/th&gt; &lt;/tr&gt; &lt;/table&gt; &lt;% &#125; %&gt; 对相关的独立页文件增加 style: 1 参数，如 source\\about\\hide.md 文件。 增加自定义 404 页： 增加 source\\404.html 文件，并参考腾讯公益网站进行页面功能的设计； themes\\faradays\\_config.yml 配套增加以下参数： skip_render: - &#39;404.html&#39; 0.2.2，1.27h，2020/09/08 20:05:19 重新优化 outer-index、outer 样式，手机模式增加 2px 的间距，而 FHD 屏幕缩小最大宽度。 解决手机模式的夜间模式切换按钮在 PC 模式下没有隐藏的问题： themes\\faradays\\source\\css\\_partial\\sidebar.styl 增加隐藏设置： // HHJ@20200908 .mobile-header-operation-container @media mq-normal display: none themes\\faradays\\layout\\_layout\\mobile-nav.ejs 增加以下 DOM 元素包围夜间模式操作按钮： &lt;div class=&quot;mobile-header-operation-container&quot;&gt; &lt;/div&gt; 调整时间轴、存档页中的标签云颜色，采用同色设置。相应的变量嵌套使用不需要额外使用 &lt;% %&gt; 包围，如下： &lt;% var color_end = theme.style.main_color %&gt; &lt;%- tagcloud(site.tags, &#123; amount: 65, color: true, start_color: &#39;#320&#39;, end_color: color_end, min_font: 13, max_font: 53 &#125;) %&gt; 0.2.1，3.37h，2020/09/07 23:10:53 优化 outer-index、outer 样式，取消最大宽度限制，确保 1K 屏能够居中显示而不偏左。 调整 themes\\faradays\\source\\css\\_partial\\mobile.styl ，修改手机模式下的菜单背景色，避免文字无法阅读： .mobile-header-menu-nav // HHJ@20200907 //background: rgba(0,0,0,0.17) background: rgba(0,0,0,0.87) 手机模式的菜单中增加夜晚模式切换按钮: themes\\faradays\\layout\\_layout\\mobile-nav.ejs 增加以下内容： &lt;span class=&quot;title&quot;&gt;Operation&lt;/span&gt; &lt;div id=&quot;sidebar-mode&quot; title=&quot;Daylight&quot; onClick=&quot;javascript:switchBackground(1)&quot;&gt; &lt;i class=&quot;fa fa-lightbulb-o&quot;&gt;&lt;/i&gt; &lt;/div&gt; themes\\faradays\\source\\css\\_partial\\mobile.styl 增加以下配套样式： // HHJ@20200907，增加手机模式下的夜晚模式切换功能 #sidebar-mode margin: 5px display: block cursor: pointer width: 27px height: 27px text-align: center line-height: 27px border-radius: 50% background: main-color color: #fff //transition: .4s ease-in-out //box-shadow: 0 3px 10px rgba(0,0,0,0.16), 0 3px 10px rgba(0,0,0,0.23) i font-size: 1.3rem line-height: 1.3em 由于手机的样式使用了媒体查询 @media mq-mobile ，结合 hexo-renderer-stylus 的样式编辑特点，所有后续新增的样式都应该遵守相应的 缩进规则，确保其能够执行媒体查询功能。 themes\\faradays\\source\\css\\_partial\\mobile.styl 增加以下样式，确保手机状态下切换文章的内容显示大小合适： .article-nav-link-wrap margin-top: 13px font-size: 13px text-shadow: none text-align: none #article-nav-newer text-align: left margin-left: 1em #article-nav-older text-align: right margin-right: 1em 对手机模式的摘要元素的高度、显示位置，对手机模式文章的显示大小等进行调整；关闭手机模式下的目录功能。 0.2.0，24.85h，2020/09/07 00:07:38 调整首页中文章序号和文章标题的 margin 关系，确保兼容 IE9+ 传统浏览器， themes\\faradays\\source\\css\\_partial\\article.styl 变动如下： .article margin: -(block-margin)*8 0 0 .article-header-num // 外边距（与 .article 的 margin =-180 对应，不过该参数20200831已弃用，以兼容 IE） //margin: -(article-padding)*4 0 (block-margin)*5 0 top: (article-padding)*3 同时增加 article-index 样式专门用于首页，避免文章页由于固定标题需要下移，而主页无法实现标题和数字对齐。 修改 themes\\faradays\\layout\\_layout\\head.ejs ，增加 IE 兼容设置（优先使用 Chrome，如果只有IE，那么就高渲染，低于IE9的增加HTML5兼容）： &lt;!-- HHJ@20200831，增加 IE 兼容提示 --&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt; &lt;meta name=&quot;renderer&quot; content=&quot;webkit|ie-stand|ie-comp&quot;&gt; &lt;!--[if lt IE 9]&gt; &lt;script src=&quot;//cdn.bootcss.com/respond.js/1.4.2/respond.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;//cdn.bootcdn.net/ajax/libs/selectivizr/1.0.2/selectivizr-min.js&quot;&gt;&lt;/script&gt; &lt;![endif]--&gt; Selectivizr 是一个JS文件，你只需要引入如JQuery、Mootools、Prototype等N多流行的JS框架中的任意一个，然后再调用Selectivizr，就可以让IE6/7/8支持CSS3选择器。 respond.min:让不支持css3 Media Query的浏览器包括IE6-IE8等其他浏览器支持查询。 http://apps.bdimg.com/libs/html5shiv/3.7/html5shiv.min.js &lt;script src=&quot;//cdn.bootcss.com/respond.js/1.4.2/respond.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;http://cdn.static.runoob.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/html5shiv/3.7.3/html5shiv.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://s3.pstatp.com/cdn/expire-1-M/html5shiv/3.7.3/html5shiv.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://s0.pstatp.com/cdn/expire-1-M/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt; 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加以下内容： &lt;!--[if lt IE 9]&gt; &lt;script type=&quot;text/JavaScript&quot;&gt; alert(&quot;请使用 IE9 或更高版本的浏览器，或谷歌浏览器、火狐浏览器，以便您浏览本站优质内容!&quot;); &lt;/script&gt; &lt;![endif]--&gt; 实现主题的布局的重新定义，为主题进一步完善独立页面布局等功能做好准备。 由于 ejs 文件中的 &lt;%#- %&gt; 注释不会在最终文件中显示，因此尽可能进行了替换；但是由于尖括号不能嵌套使用，导致出现异常，已纠正。 由于之前 index 页、 archive 页共用 archive.ejs 文件，已重新梳理解耦。 article.ejs 样式为 index 页、post 页、page 页共用，已重新梳理解耦。 新增日光、夜光背景模式： themes\\faradays\\layout\\_partial\\article.ejs 、 D:\\WebSites\\faradays-studio.hexo\\themes\\faradays\\layout\\_index\\index.ejs 增加 id 值（已废弃，已改用 class 值增加获取 DOM 元素）。 themes\\faradays\\layout\\_post\\post\\copyright.ejs 、 themes\\faradays\\layout\\_page\\post\\copyright.ejs 均增加版权声明模块的 id: &lt;div id=&quot;copyright-content&quot; class=&quot;content&quot;&gt; themes\\faradays\\layout\\layout.ejs 页面加载时自动加载脚本： &lt;body onload=&quot;javascript:switchBackground()&quot;&gt; onload event it only supports with few tags like listed below: &lt;body&gt;, &lt;frame&gt;, &lt;iframe&gt;, &lt;img&gt;, &lt;input type=&quot;image&quot;&gt;, &lt;link&gt;, &lt;script&gt;, &lt;style&gt; . themes\\faradays\\source\\css\\_partial\\sidebar.styl 增加以下元素，以便于进行模式点击切换： &lt;div id=&quot;sidebar-mode&quot; title=&quot;Daylight&quot; onClick=&quot;javascript:switchBackground()&quot;&gt; &lt;i class=&quot;fa fa-sun-o&quot;&gt;&lt;/i&gt; &lt;/div&gt; themes\\next\\source\\css\\_colors.styl 关于默认的模式切换涉及的颜色，有很好的考虑，可以有空的时候深入研究。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加操作脚本： &lt;%# HHJ@20200905，背景样式切换 %&gt; &lt;script&gt; function switchBackground(type_1)&#123; console.log(Date.now() + &quot; 切换背景色功能启动！&quot;); var daylight = document.cookie.replace(/(?:(?:^|.*;\\s*)daylight\\s*\\=\\s*([^;]*).*$)|^.*$/, &quot;$1&quot;); // 获取本地 cookies %&gt; //console.log(document.cookie); //console.log(&quot;cookies值： &quot; + daylight); if (type_1 === undefined) &#123; type_1 = 0; &lt;%# 没有赋予参数，则直接读取 cookie 值显示 %&gt; &#125; else &#123; &lt;%# 存在参数，则将 cookie 值取反，实现点击切换功能 %&gt; if(daylight == &#39;1&#39;)&#123; daylight = &#39;0&#39;; &#125; else &#123; daylight = &#39;1&#39;; &#125; &#125; var ele_1 = document.getElementById(&quot;container&quot;); &lt;%# 页面背景（由于兼容问题，暂不使用） %&gt; //console.log(ele_1.innerHTML); var ele_3 = document.getElementsByClassName(&quot;article-entry&quot;); &lt;%# 首页摘要、文章内容 %&gt; var ele_4 = document.getElementsByClassName(&quot;article-inner&quot;); &lt;%# 首页标题、文章标题 %&gt; var ele_5 = document.getElementsByTagName(&quot;blockquote&quot;); &lt;%# 备注 %&gt; var ele_6 = document.getElementsByClassName(&quot;hljs&quot;); &lt;%# 代码 %&gt; var ele_7 = document.getElementsByClassName(&quot;highlight&quot;); &lt;%# 代码外框 %&gt; //console.log(ele_3); var ele_0 = document.getElementById(&quot;sidebar-mode&quot;); &lt;%# 侧边栏操作按钮 %&gt; //console.log(ele_0.innerHTML); &lt;%# 夜间模式 %&gt; function darker()&#123; document.body.classList.add(&#39;night-1&#39;); //ele_1.classList.add(&#39;night-2&#39;); &lt;%# 在文章页中存在重叠交错情况 %&gt; //console.log(daylight + &quot; = 夜间模式&quot;); if(ele_3.length &gt; 0)&#123; for (i = 0; i &lt; ele_3.length; i++) &#123; ele_3[i].classList.add(&#39;night-2&#39;); ele_4[i].classList.add(&#39;night-2&#39;); //ele_3[i].style.backgroundColor = &quot;red&quot;; &#125; &#125; if(ele_5.length &gt; 0)&#123; for (i = 0; i &lt; ele_5.length; i++) &#123; ele_5[i].classList.add(&#39;night-1&#39;); &#125; &#125; if(ele_6.length &gt; 0)&#123; for (i = 0; i &lt; ele_6.length; i++) &#123; ele_6[i].classList.add(&#39;night-2&#39;); ele_7[i].classList.add(&#39;night-1&#39;); &#125; &#125; ele_0.innerHTML = &quot;&lt;i class=&#39;fa fa-moon-o&#39;&gt;&lt;/i&gt;&quot;; &lt;%# i 标签转义无效 %&gt; //console.log(ele_0.innerHTML); ele_0.setAttribute(&quot;title&quot;,&quot;Nightlight&quot;); document.cookie = &quot;daylight=0; path=/&quot;; console.log(&#39;已切至夜间模式！&#39;); &#125; &lt;%# 日间模式 %&gt; function lighter()&#123; document.body.classList.remove(&#39;night-1&#39;); //ele_1.classList.remove(&#39;night-2&#39;); //console.log(daylight + &quot; = 日间模式&quot;); if(ele_3.length &gt; 0)&#123; for (i = 0; i &lt; ele_3.length; i++) &#123; ele_3[i].classList.remove(&#39;night-2&#39;); ele_4[i].classList.remove(&#39;night-2&#39;); &#125; &#125; if(ele_5.length &gt; 0)&#123; for (i = 0; i &lt; ele_5.length; i++) &#123; ele_5[i].classList.remove(&#39;night-1&#39;); &#125; &#125; if(ele_6.length &gt; 0)&#123; for (i = 0; i &lt; ele_6.length; i++) &#123; ele_6[i].classList.remove(&#39;night-2&#39;); ele_7[i].classList.remove(&#39;night-1&#39;); &#125; &#125; ele_0.innerHTML = &quot;&lt;i class=&#39;fa fa-sun-o&#39;&gt;&lt;/i&gt;&quot;; //console.log(ele_0.innerHTML); ele_0.setAttribute(&quot;title&quot;,&quot;Daylight&quot;); document.cookie = &quot;daylight=1; path=/&quot;; console.log(&#39;已切至日间模式！&#39;); &#125; &lt;%# 切换模式 %&gt; if(daylight == null)&#123; lighter(); &#125; else if(daylight == &#39;0&#39;)&#123; darker(); &#125;else&#123; lighter(); &#125; //console.log(&quot;cookies 最新值： &quot; + daylight); &#125; &lt;/script&gt; HTML DOM 定义了多种查找元素的方法，除了 getElementById() 之外，还有 getElementsByName() 和 getElementsByTagName()。使用 getElementById 时，如果没有指定 ID 的元素返回 null ，如果存在多个指定ID的元素则返回 undefined 。因此使用 == null 或 != null 或 == undefined 或 != undefined 来处理异常。document.getElementsByName 得到的是标签的数组。它根据name属性（name可以重复），得到所有name属性与参数相同的控件组成的数组，不存在时，返回0长度数组( .length == 0 ，而不是 null )document.getElementsByTagName()得到的也是一个数组，与getElementsByName()用法相似tag相同的元素可能不止一个这个时候就需要用getElementsByTagName(“a”)0来获得对象的引用 themes\\faradays\\source\\css\\style.styl 增加了相关样式的定义： // HHJ@20200905，夜间模式 .night-1 background-color: #aaa!important color: #333 img // 对现代浏览器添加滤镜 filter: brightness(30%) .night-2 background-color: #ccc!important color: #333 img // 对现代浏览器添加滤镜 filter: brightness(50%) 修改代码高亮的边框样式和背景样式： 对于外边框，修改 themes\\faradays\\source\\css\\_partial\\highlight.styl 中边框设置即可： $code-block // HHJ@20200906，去除代码块的外边框 //border-style: solid border-style: none 修改代码样式 node_modules\\hexo\\node_modules\\hexo-util\\lib\\highlight.js （经测试无效， 修改 highlight.styl 文件却能去除代码边框及背景，后续采用该中方法 ）： result += &#39;&lt;table border=&quot;0&quot; frame=&quot;void&quot;&gt;&lt;tr&gt;&#39;; 首页 categories2 增加标题 “栏目” 。 增加 outer-index 样式，用于确保首页、归档页、时间轴页的页脚内容居中显示： themes\\faradays\\layout\\layout.ejs 修改样式如下： &lt;div class=&quot;&lt;% if (is_post() || is_page())&#123; %&gt;outer&lt;% &#125; else &#123; %&gt;outer-index&lt;% &#125; %&gt;&quot;&gt; &lt;%# HHJ@20200906 %&gt; &lt;footer id=&quot;footer&quot;&gt; &lt;% if (is_home() || is_archive() || page.layout == &quot;timeline&quot; )&#123; %&gt; &lt;div class=&quot;outer-index&quot;&gt; &lt;% &#125; else &#123; %&gt; &lt;div class=&quot;outer&quot;&gt; &lt;% &#125; %&gt; &lt;%- partial(&#39;_layout/footer&#39;, null, &#123;cache: !config.relative_link&#125;) %&gt; &lt;/div&gt; &lt;/footer&gt; themes\\faradays\\layout_layout\\footer.ejs 文件中动态设置 class 值的方法没有生效，因此调整部分内容至 layout.ejs 文档，确保首页的居中格式满足要求。 themes\\faradays\\layout\\_timeline\\timeline.ejs 参考增加一个外层 DOM 实现标题和标签云的内容尽可能居中。 完成 Faradays 主题文档的编写。 归档页增加标签云，使得归档包含的信息更加完整。 themes\\faradays\\source\\css\\_partial\\sidebar.styl 增加 .tags2x 相关样式； // HHJ@20200906，增加标签云 .tags2x display: block text-align: center border:1px solid color-border //background: color-border a display: inline-block text-decoration: none text-align:center padding: 10px 7px 10px 7px position: relative themes\\faradays\\layout\\_archive\\archive.ejs 增加 site.categories 的云图： &lt;div class=&quot;tags2x&quot; style=&quot;margin:33px 3px 13px 3px;&quot;&gt; &lt;%# 标签云，HHJ@20200815，增加自定义格式 %&gt; &lt;!-- &lt;%- tagcloud(site.tags, &#123;min_font: 13, max_font: 13&#125;) %&gt; --&gt; &lt;!-- &lt;%- tagcloud(site.tags, &#123;amount: 65, orderby: &#39;count&#39;, color: true, start_color: &#39;#9900FF&#39;, end_color: &#39;#FF0000&#39;, min_font: 13, max_font: 53&#125;) %&gt; --&gt; &lt;%- tagcloud(site.categories, &#123;color: true, start_color: &#39;#0000FF&#39;, end_color: &#39;#FF0000&#39;, min_font: 13, max_font: 53&#125;) %&gt; &lt;/div&gt; 同上，themes\\faradays\\layout\\_timeline\\timeline.ejs 增加 site.tags 的云图： 测试首页、归档页的分页处置正确， 但时间轴分页不正确，须后续处理。 0.1.8，2.69h，2020/08/30 15:46:38 增加页面分析统计功能。登录 https://tongji.baidu.com/ ，注册相应的账户；将相应的 key 填入 themes\\faradays\\_config.yml 文件中，重新生成站点文件并上传。 修改 themes\\faradays\\layout\\_partial\\head-more.ejs，增加页面加载时间的脚本： &lt;script&gt; // 页面加载时间 window.onload = function () &#123; var loadTime = window.performance.timing.domContentLoadedEventEnd-window.performance.timing.navigationStart; console.log(&#39;Page load time is &#39;+ loadTime + &#39; ms&#39;); &#125; &lt;/script&gt; themes\\faradays\\layout\\_partial\\post\\title.ejs 增加作者数量计数功能，解决作者分隔符添加不当问题。 0.1.7，10.01h，2020/08/29 23:58:58 对 node_modules 路径下的所有 JavaScript 文件，由 noopener 替换为 noopener norefferrer （将 window.opener 置为 null，防止window.opener被滥用功能），确保兼容 Firefox 。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加版权声明： &lt;script&gt; // HHJ@20200829，增加版权提示 console.log(&quot;\\nAll right reserved by &lt;%- theme.owner %&gt;.\\n\\n&quot; + &quot;Licensed under GNU GPLv3.\\n&quot; + &quot;Send your request to &lt;%- theme.contact_with.email %&gt; and wait for your LICENSE CONFIRMATION email.\\n&quot; + &quot;See https://www.gnu.org/licenses/gpl-3.0.html for the license details.\\n\\n&quot; + &quot;Click &lt;%- theme.site.backup %&gt; for my recent developments...\\n\\n&quot;); &lt;/script&gt; 更新网站 favicon.ico 文件，确保与新 logo 一致。 相应配置在 themes\\faradays\\_config.yml 中定义。 ``` YAML #favicon: /favicon.ico favicon: /faradays.ico ``` 调整 _config.yml 相关设置，实现一次编译，同时提交 GitHub 、 Gitee 功能。 # Deployment ## Docs: https://github.com/hexojs/hexo-deployer-git deploy: type: git # 方法1（无论是字段的填写方式，还是 git 版本库，都有多种填写方式） #repository: git@github.com:faradays-studio/faradays-studio.github.io.git #branch: blog # 方法2 #repository: # github: https://github.com/faradays-studio/faradays-studio.github.io.git # gitee: https://gitee.com/faradays-studio/faradays-studio.git #branch: blog # 方法3（以下两种方式都兼容） repository: github: https://github.com/faradays-studio/faradays-studio.github.io.git,blog gitee: url: https://gitee.com/faradays-studio/faradays-studio.git # master/blog 分支为网站分区， theme 为分支为个人定制的主题 branch: blog # 参考 node_modules\\hexo-deployer-git\\README.md 说明文件配置以下参数 message: &quot;Updated by Faradays&#39; Studio: &#123;&#123; now('YYYY-MM-DD HH:mm:ss') &#125;&#125;&quot; #ignore_pattern: hid.*\\.html ignore_pattern: #【该方式测试不成功】public/about: hid.*\\.html hid.*\\.html 不过上述部署方式有个缺点，就是 Gitee 站点需要进入 Page 设置中点击 更新 才能重新部署网站（否则网站还是显示旧内容）；而使用同步 GitHub 方式则无须此操作。首次提交时需要输入用户名及密码，并配置 Gitee 的版本库。再次提交时无此需要。 纠正 themes\\faradays\\layout\\_partial\\head.ejs 中 &lt;%- kw1 = trim(tag.name) %&gt; 用法不当问题，修改后应当为 &lt;% kw1 = trim(tag.name) %&gt;，修复了文章头部含有不恰当字符的问题。 &lt;% code %&gt;：用于执行其中javascript代码。&lt;%= code %&gt;：会对code进行html转义；&lt;%- code %&gt;：不会进行转义， 如利用 &lt;%- include filename %&gt; 加载其他页面模版，还支持自定义标签，其中 &lt;% 可以使用 &#123;&#123;` 、 `%>` 用 `&#125;&#125; 代替。 标签 含义 &lt;% 脚本 标签，用于流程控制， 无输出 。 &lt;%_ 删除其前面的空格符（两个下划线） &lt;%= 输出数据到模板（输出是转义 HTML 标签） &lt;%- 输出非转义的数据到模板 &lt;%# 注释标签，不执行、不输出内容 &lt;%% 输出字符串 &lt;% %&gt; 一般结束标签 -%&gt; 删除紧随其后的换行符 _%&gt; 将结束标签后面的空格符删除（两个下划线） 纠正文章中图片超链接使用不当的用法，如 static/img/Macbook-开机启动项界面-20200824.jpg 修改为 /static/img/Macbook-开机启动项界面-20200824.jpg ，通过增加 / 来指明图像位于 站点的根目录 下，而不是当前网址的对应的目录下。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加自动推送百度功能： &lt;script&gt; // HHJ@20200829，自动推送百度功能（当新页面每次被浏览时，页面URL会自动推送给百度，无需站长汇总URL再进行主动推送操作。） (function()&#123; var bp = document.createElement(&#39;script&#39;); bp.src = &#39;//push.zhanzhang.baidu.com/push.js&#39;; // push.js 内容如下： // !function()&#123;var e=/([http|https]:\\/\\/[a-zA-Z0-9\\_\\.]+\\.baidu\\.com)/gi,r=window.location.href,o=document.referrer;if(!e.test(r))&#123;var n=&quot;//api.share.baidu.com/s.gif&quot;;o?(n+=&quot;?r=&quot;+encodeURIComponent(document.referrer),r&amp;&amp;(n+=&quot;&amp;l=&quot;+r)):r&amp;&amp;(n+=&quot;?l=&quot;+r);var t=new Image;t.src=n&#125;&#125;(window); var s = document.getElementsByTagName(&quot;script&quot;)[0]; s.parentNode.insertBefore(bp, s); &#125;)(); &lt;/script&gt; 推送平台后，发现该功能不可用。查看官网手册，该功能已下线，恢复时间不确定。2020/10/07 查看百度官网，提示9月16日已恢复使用。官方推荐用法为 ： curl -H ‘Content-Type:text/plain’ –data-binary @urls.txt “http://data.zz.baidu.com/urls?site=https://faradays-studio.gitee.io&amp;token=mRXhKIEz8tw2PT5P&quot; 0.1.6，2.68h，2020/08/28 21:53:13 增加站点地图（sitemap）功能，以便于搜索引擎收录博客文章： 安装相关插件： npm install hexo-generator-sitemap --save npm install hexo-generator-baidu-sitemap --save npm audit fix --force _config.yml 添加以下内容以便于自定义 sitemap 文件名（该参数配置在themes\\faradays\\_config.yml中无效；也无法修改插件中.js文件增加读取 theme 配置文件的功能，目前也无法一并生成两个 sitemap 文件）： # 自动生成sitemap sitemap: path: &#39;sitemap-github.xml&#39; baidusitemap: path: &#39;sitemap-gitee.xml&#39; sitemap_baidu_github: path: &#39;sitemap_baidu_github.xml&#39; 修改 scaffolds\\post.md ，增加 keywords 文件头（该属性可选，调配原则见 head.ejs 修改情况）： keywords: Faradays&#39; Studio, 测试 网页关键词的格式示例（逗号分隔，无引号，无空格）：批处理,Windows,字符。 修改 themes\\faradays\\layout\\_partial\\head.ejs 修改默认的关键词（顺序选择：文章关键词、文章标签、主题关键词、项目关键词）： &lt;!-- HHJ@20200828，HTML 默认关键词由 _config.yml 配置改为优先使用文章文件头 keywords 配置 --&gt; &lt;% if (page.keywords)&#123; %&gt; &lt;meta name=&quot;keywords&quot; content=&quot;&lt;%= page.keywords %&gt;,Faradays&#39; Studio&quot;&gt; &lt;% &#125; else if (page.tags &amp;&amp; page.tags.length)&#123; %&gt; &lt;% var kw1 = &#39;&#39; %&gt; &lt;% page.tags.forEach(function (tag, kx) &#123; %&gt; &lt;% if (kx==1)&#123; %&gt; &lt;%- kw1 = trim(tag.name) %&gt; &lt;% &#125; else &#123; %&gt; &lt;% kw1 = kw1 + &#39;,&#39; + tag.name %&gt; &lt;% &#125;%&gt; &lt;% &#125;) %&gt; &lt;meta name=&quot;keywords&quot; content=&quot;&lt;%= kw1 %&gt;,Faradays&#39; Studio&quot;&gt; &lt;% &#125; else if (theme.keywords)&#123; %&gt; &lt;meta name=&quot;keywords&quot; content=&quot;&lt;%- theme.keywords %&gt;&quot; /&gt; &lt;% &#125; else if (config.keywords)&#123; %&gt; &lt;meta name=&quot;keywords&quot; content=&quot;&lt;%= config.keywords %&gt;&quot;&gt; &lt;% &#125; %&gt; 关键词 keywords 的用法： keywords 的每个词都要能在内容中找到相应匹配，才有利于排名。 keywords 一般不超过3个，每个关键词不宜过长，而且词语间要用英文“,”隔开。 尽量将重要的关键字靠前放，因为靠后的关键字排名较差，除非你站有很高的权重。 用法： &lt;meta name=&quot;Keywords&quot; Content=&quot;关键词1,关键词2,关键词3,关键词4&quot;&gt; 首页keywords： 网站名称,主要栏目名,主要关键词。 栏目页keywords： 栏目名称,栏目关键字,栏目分类列表名称。 分类列表页keywords： 栏目中的主要关键字写入即可。 文章页keywords写法： 提取文章主题中的关键词，也可以选择文章中出现比较多的词来作为关键词。 由于 hexo 建议使用 updated_option 来替代 use_date_for_updated 。为了便于部署，由根目录 _config.yml 调整到 themes\\faradays\\_config.yml，内容变更如下： ## Use post&#39;s date for updated date unless set in front-matter #use_date_for_updated: false updated_option: &#39;mtime&#39; # * mtime: file modification date (default) # * date: use_date_for_updated # * empty: no more update 注册百度站长平台（ https://ziyuan.baidu.com/site/index ），并进行适配： 方法1（sitemap验证） https://faradays-studio.github.io/sitemap-github.xml （hexo-generator-sitemap生成，修改后用于 GitHub 站点） 模板 node_modules\\hexo-generator-sitemap\\sitemap.xml 中 &lt;loc&gt;&#123;&#123; post.permalink | uriencode &#125;&#125;&lt;/loc&gt; 修改为 &lt;loc&gt;&#123;&#123; \"https://faradays-studio.github.io/\" + post.path | uriencode &#125;&#125;&lt;/loc&gt; 。 https://faradays-studio.gitee.io/sitemap-baidu-gitee.xml （hexo-generator-baidu-sitemap生成，根据根目录的 _config.xml 默认生成，用于 gitee 站点） 【未修改】模板 node_modules\\hexo-generator-baidu-sitemap\\sitemap.xml 中 var baiduUrl = config.url 修改为 var baiduUrl = theme.site.main 。 测试表明，sitemap 包含了 hid** 文件，不过相应的文件并没有上传 GitHub 和 Gitee 。 经初步了解，猜测 themes\\faradays\\.gitignore 文件中也可以设置过滤文件清单。 方法2（HTML 验证）增加 baidu_verify_H4oRq5obf8.html 到 source 目录，并增加到 _config.yml 中的 skip_render 参数中（注意书写顺序格式）。 测试表明，如果不同步 wiki 信息，码云从 GitHub 中同步版本库只需要很短的数秒钟。 修改 _config.yml 中的 url 参数值，不再使用 GitHub 网站，而是使用 gitee 网站，确保访问质量和收录效果。同时，修改 themes\\faradays\\layout\\_partial\\head.ejs 以确保 GitHub page 主站可使用 HTML 方式验证通过： &lt;!-- HHJ@20200828，增加百度搜索资源平台验证功能 --&gt; &lt;% if (is_home())&#123; %&gt; &lt;% if (theme.baidu_site_verification &amp;&amp; theme.baidu_site_verification.length)&#123; %&gt; &lt;meta name=&quot;baidu-site-verification&quot; content=&quot;&lt;%= theme.baidu_site_verification %&gt;&quot; /&gt; &lt;% &#125; %&gt; &lt;% &#125; %&gt; themes\\faradays\\_config.yml增加 baidu_site_verification: &#39;YmNlECnn33&#39;； 2020/09/27 https://faradays-studio.github.io 已经被百度收录 1 条；后续多次查询均未能从百度搜索中找到任何一个文章。2020/11/07，使用 site:faradays-studio.github.io 测试检索到一篇文章。2020/11/10 索引量增加 2 。2021/03/08 索引量为 15，且下午时因 https://www.runoob.com/jquery/jquery-selectors.html 连接产生一个展现量，排名 9 ，可惜没有点击量。同样地， 2020/08/29 注册 https://faradays-studio.gitee.io ，至今索引量仍然为 0 。2021/03/08 查看系统，2021/03/02 索引量变为 1，查看为首页。 # 在当前目录下生成 example.html 文件，如果打开显示首页内容，表示百度爬虫可访问 curl -A &quot;Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)&quot; -o example.html https://faradays-studio.github.io/ 对页眉等地方的非本站链接，如 themes\\faradays\\layout\\_partial\\footer.ejs 文件的 a 标签 href 属性之后增加 rel=&quot;external nofollow&quot; 属性，以减少索引。 参考文献中的 a 标签展示无法设置该功能，提示 unknown property name 。 http://codingdict.com/questions/17984 中小编典典提出：仅在external是唯一 rel值 时才有效；如果要设置可能具有1个或多个rel值的链接的样式，则应使用 [att~=val] 属性选择器，如 a[rel~=&quot;external&quot;]（注意波浪号字符）。 网页描述变量规范：修改 node_modules\\hexo\\lib\\plugins\\helper\\open_graph.js （尝试使用 theme.description 变量无效）—— // HHJ@20200829 //let description = options.description || page.description || page.excerpt || content || config.description; let description = page.description || config.keywords || config.description; 确保文件头的作者名称无误：修改 node_modules\\hexo\\lib\\hexo\\default_config.js 如下—— //author: &#39;John Doe&#39;, author: &#39;David Faraday&#39;, 经测试表明，如果在 _config.yml 中定义 author: David 即可解决。 适当调整文章署名区空白格式：涉及 themes\\faradays\\source\\css\\_partial\\article.styl 和 themes\\faradays\\layout\\_partial\\post\\copyright.ejs 文件。 由于 GitHub Page 访问速度实在太慢，基于 https://faradays-studio.gitee.io 网址对每个文章增加后备链接。 修改 themes\\faradays\\layout\\_partial\\post\\copyright.ejs 如下： &lt;!-- HHJ@20200828，调整原始链接显示方式，并增加备用链接 --&gt; &lt;p&gt;原始链接： &lt;% if (theme.site.main &amp;&amp; theme.site.main.length)&#123; %&gt; &lt;a class=&quot;post-url&quot; href=&quot;&lt;%- theme.site.main %&gt;&lt;%- url_for(post.path) %&gt;&quot; title=&quot;&lt;%= post.title %&gt;&quot;&gt; &lt;%- theme.site.main %&gt;&lt;%- url_for(post.path) %&gt; &lt;/a&gt; &lt;% &#125; else &#123; %&gt; &lt;a class=&quot;post-url&quot; href=&quot;&lt;%- url_for(post.path) %&gt;&quot; title=&quot;&lt;%= post.title %&gt;&quot;&gt; &lt;%= post.permalink %&gt; &lt;/a&gt; &lt;% &#125; %&gt; &lt;/p&gt; &lt;% if (theme.site.backup &amp;&amp; theme.site.backup.length)&#123; %&gt; &lt;p&gt;后备链接： &lt;a class=&quot;post-url&quot; href=&quot;&lt;%- theme.site.backup %&gt;&lt;%- url_for(post.path) %&gt;&quot; title=&quot;&lt;%= post.title %&gt;&quot;&gt; &lt;%- theme.site.backup %&gt;&lt;%- url_for(post.path) %&gt;&lt;/a&gt; &lt;/p&gt; &lt;% &#125; %&gt; 对应地，themes\\faradays\\_config.yml 增加以下设置： site: #main: main: https://faradays-studio.github.io backup: https://faradays-studio.gitee.io 0.1.5，16.13h，2020/08/25 23:35:01 创建关于页面 创建新页面： hexo new page about 。 头部不指定 layout 参数，则使用默认的 page.ejs 布局，但是没有保留标题样式。 需要修改文本存储格式为 UTF-8 ，否则编译后文本乱码。 修改 title ，使得文本中显示标题文本与实际相符。 修改 themes\\faradays\\layout\\layout.ejs ，对原有文章添加固定标题样式的地方，增加独立页面的设置（确保拥有固定标题）。 &lt;% if (is_post() || is_page())&#123; %&gt; 归档页、时间轴均为独立设置的布局样式。但上述设置为公共设置。因为 themes\\faradays\\layout\\_partial\\timeline.ejs、themes\\faradays\\layout\\_partial\\archive.ejs 均添加引用了 _partial/header-post 文件。 修改 themes\\faradays\\layout\\_partial\\after-footer-more.ejs，增加 || is_page() ，确保页面导航 tocbot 显示正常、并增加了评论功能；同时为了确保统一，对 themes\\faradays\\layout\\_partial\\article.ejs 也做相应的增加（但效果未检查确认，增加 post-content 来设置 background: #fff ？）。 themes\\faradays\\layout\\_partial\\after-footer-more.ejs 文件编码修改为 UTF-8，避免 GitHub 中创建的 gitalk 评论标签乱码。 同步完善 scaffolds\\page.md，包括增加头部参数和文件编码由 ANSI 修改为 UTF （Npp:Encoding&gt;Convert to UTF-8）。 完善首页社交图标设置，增加 gitee 图标。 修改 themes\\faradays\\source\\css\\_partial\\post.styl，修改标题文字颜色和行距： .post-title //color: #555 //background: main-color // HHJ@20200823 color: main-color line-height: 1.3em 添加QQ 联系等快捷方式，参考 themes\\3-hexo\\layout\\_partial\\nav-left.ejs 创建 themes\\faradays\\layout\\_partial\\post\\contact.ejs 文件，内容如下： &lt;!-- HHJ@20200823，增加联系方式图标 --&gt; &lt;div class=&quot;page-contact&quot;&gt; &lt;% if (theme.contact_with.qq &amp;&amp; theme.contact_with.qq.length ) &#123; %&gt; &lt;a title=&quot;QQ联系博主&quot; href=&quot;http://wpa.qq.com/msgrd?v=3&amp;uin=&lt;%= theme.contact_with.qq %&gt;&amp;site=qq&amp;menu=yes&quot; target=&quot;_blank&quot;&gt; &lt;i class=&quot;fa fa-qq&quot;&gt;&lt;/i&gt; &lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (theme.contact_with.email &amp;&amp; theme.contact_with.email.length ) &#123; %&gt; &lt;a title=&quot;邮件联系博主&quot; href=&quot;mailto:&lt;%= theme.contact_with.email %&gt;&quot; target=&quot;_blank&quot;&gt; &lt;i class=&quot;fa fa-envelope&quot;&gt;&lt;/i&gt; &lt;/a&gt; &lt;% &#125; %&gt; &lt;/div&gt; 修改 themes\\faradays\\layout\\_partial\\article.ejs ，将 contact.ejs 引入 &lt;!-- HHJ@20200823，增加联系方式图标 --&gt; &lt;%- partial(&#39;post/contact&#39;) %&gt; 修改 themes\\faradays\\_config.yml ，增加以下参数： contact_with: qq: 189392385 email: yvany@qq.com 参考 page-reward 格式设置 page-contact 格式： 新建 themes\\faradays\\source\\css\\_partial\\contact.styl 文件； // HHJ@20200823 .page-contact margin: 20px 7% text-align: center position: absolute top: -41px z-index: 3 a position: relative width: 37px height: 37px line-height: 37px font-size: 20px color: #fff!important text-align: center border-radius: 50% display: inline-block background: main-color text-decoration: none boxShadow(.3s) &amp;:hover, &amp;:active color: #fff text-decoration: none!important 将上述 contact.styl 文件导入 themes\\faradays\\source\\css\\style.styl : // HHJ@20200823，增加 @import &quot;_partial/contact&quot; 调整 themes\\faradays\\layout\\_partial\\article.ejs，增加 style 设置，避免上下两行内容过于拥挤（太大的话，手机模式 display: none 则显得下方空白太大）： &lt;ul class=&quot;article-footer-menu&quot; style=&quot;margin-top:10px;&quot;&gt; 需要注意的是，如果 ejs 文件编程错误，比如说括号匹配等问题，可能会导致编译时出现奇怪的报错。因此新增 ejs 文件时需要先改好脚本文件。 进行 about 独立页中内容的渲染研究： 测试 post 生成的要求：不能含有 tag 等头部参数。 测试独立页的 URL 格式：不由项目的配置文件控制，为 &lt;文件名&gt;.html ，注意，必须含有 html 扩展。 测试项目 _config.yml 文件增加 git 更新说明和过滤以 hid 开头的 .html 文件（hid.*\\.html）功能。 该功能可以保留部分个人信息，避免被上传至网络上！ 配置 hide.html 为索引文件，hidden-change_log-hexo-faradays.html 为主题开发笔记。 经过 2 天的反复试验，终于将可能泄露独立页网址的 commit 予以删除。 隐藏网页的访问示例： http://127.0.0.3:4000/about/hide.html。 修改标题的感应样式（之前为字距变宽，改为背景变色），涉及 #site-title 、#header-menu-nav 样式。 background-color: color-link 经过网络调查，未找到配置多作者的案例，唯一设计多作者的是 3-hexo 主题，然后都只是单纯地读取作者显示，特色功能是按作者检索；而自己初步规划的方法设计到动态变量，实现也有一定的难度。综合研究采取文件头多属性来实现： 逻辑：那么 若 0 &lt; post.original &lt; 50，显示 author1 、author2 、author3 为 编者 （排后）， author_x 为 作者（若存在）；若 post.original ≥ 50，author1 、author2 、author3为作者（排前）。 文章的作者的填写方法（author1 无论如何都存在，author2、author3等注册作者内容随意填写，而贡献作者要以类似 tag 的方式填写）： author2: 2 author3: author_x: - [&#39;Bat Man&#39;, &#39;https://faradays-studio.github.io/&#39;] - [&#39;Iron Man&#39;, &#39;https://faradays-studio.github.io/&#39;] 修改 themes\\faradays\\_config.yml ，增加以下内容： # HHJ@20200815 author1: uid: 1 name: David Faraday url: https://faradays-studio.github.io/ author2: uid: 2 name: Superman url: https://faradays-studio.github.io/ author3: uid: 98 name: Captain America url: https://faradays-studio.github.io/ themes\\faradays\\layout\\_partial\\post\\title.ejs 设置如下： &lt;!-- HHJ@20200825，多作者模式 --&gt; &lt;li class=&quot;faradays-author&quot;&gt; &lt;i class=&quot;fa fa-user-o&quot;&gt;&lt;/i&gt; &lt;% if (page.original &amp;&amp; page.original.length)&#123; %&gt; &lt;% var o = parseInt(page.original) %&gt; &lt;% if (o &gt; 0 &amp;&amp; o &lt;50 )&#123; %&gt; &lt;% if (post.author_x &amp;&amp; post.author_x.length)&#123; %&gt; &lt;% post.author_x.forEach(function (au, ix) &#123; %&gt; &lt;% if (ix == 1)&#123; %&gt; &lt;a href=&quot;&lt;%= au[1] %&gt;&quot;&gt;&lt;%= au[0] %&gt;&lt;/a&gt; &lt;% &#125; else &#123; %&gt; , &lt;a href=&quot;&lt;%= au[1] %&gt;&quot;&gt;&lt;%= au[0] %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% &#125;) %&gt; &lt;% &#125; %&gt; , &lt;a href=&quot;&lt;%- theme.author1.url %&gt;&quot;&gt;&lt;%- theme.author1.name %&gt;&lt;/a&gt; &lt;% if (post.author2 &amp;&amp; !post.author2.length)&#123; %&gt; , &lt;a href=&quot;&lt;%- theme.author2.url %&gt;&quot;&gt;&lt;%- theme.author2.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (post.author3 &amp;&amp; !post.author3.length)&#123; %&gt; , &lt;a href=&quot;&lt;%- theme.author3.url %&gt;&quot;&gt;&lt;%- theme.author3.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% &#125; else &#123; %&gt; &lt;a href=&quot;&lt;%- theme.author1.url %&gt;&quot;&gt;&lt;%- theme.author1.name %&gt;&lt;/a&gt; &lt;% if (post.author2 &amp;&amp; !post.author2.length)&#123; %&gt; , &lt;a href=&quot;&lt;%- theme.author2.url %&gt;&quot;&gt;&lt;%- theme.author2.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (post.author3 &amp;&amp; !post.author3.length)&#123; %&gt; , &lt;a href=&quot;&lt;%- theme.author3.url %&gt;&quot;&gt;&lt;%- theme.author3.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (post.author_x &amp;&amp; post.author_x.length)&#123; %&gt; &lt;% post.author_x.forEach(function (au, ix) &#123; %&gt; , &lt;a href=&quot;&lt;%= au[1] %&gt;&quot;&gt;&lt;%= au[0] %&gt;&lt;/a&gt; &lt;% &#125;) %&gt; &lt;% &#125; %&gt; &lt;% &#125; %&gt; &lt;% &#125; else &#123; %&gt; &lt;a href=&quot;&lt;%- theme.author1.url %&gt;&quot;&gt;&lt;%- theme.author1.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;/li&gt; themes\\faradays\\layout\\_partial\\post\\copyright.ejs，同步进行修改。 &lt;p&gt;作者： &lt;% var au_num = 0 %&gt; &lt;% if (page.original &amp;&amp; page.original.length &amp;&amp; parseInt(page.original)&gt;=35 )&#123; %&gt; &lt;% au_num = au_num + 1 %&gt; &lt;a href=&quot;&lt;%- theme.author1.url %&gt;&quot;&gt;&lt;%- theme.author1.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (post.author_x &amp;&amp; post.author_x.length)&#123; %&gt; &lt;% post.author_x.forEach(function (au, ix) &#123; %&gt; &lt;% au_num = au_num + 1 %&gt; &lt;% if (au_num &gt; 1)&#123; %&gt; , &lt;% &#125; %&gt; &lt;a href=&quot;&lt;%= au[1] %&gt;&quot;&gt;&lt;%= au[0] %&gt;&lt;/a&gt; &lt;% &#125;) %&gt; &lt;% &#125; %&gt; &lt;% if (post.author2 &amp;&amp; !post.author2.length)&#123; %&gt; &lt;% au_num = au_num + 1 %&gt; &lt;% if (au_num &gt; 1)&#123; %&gt; , &lt;% &#125; %&gt; &lt;a href=&quot;&lt;%- theme.author2.url %&gt;&quot;&gt;&lt;%- theme.author2.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;% if (post.author3 &amp;&amp; !post.author3.length)&#123; %&gt; &lt;% au_num = au_num + 1 %&gt; &lt;% if (au_num &gt; 1)&#123; %&gt; , &lt;% &#125; %&gt; &lt;a href=&quot;&lt;%- theme.author3.url %&gt;&quot;&gt;&lt;%- theme.author3.name %&gt;&lt;/a&gt; &lt;% &#125; %&gt; &lt;/p&gt; &lt;% if (page.original &amp;&amp; page.original.length &amp;&amp; parseInt(page.original)&lt;35 )&#123; %&gt; &lt;p&gt;编者： &lt;a href=&quot;&lt;%- theme.author1.url %&gt;&quot;&gt;&lt;%- theme.author1.name %&gt;&lt;/a&gt; &lt;/p&gt; &lt;% &#125; %&gt; 0.1.4，16.2h，2020-08-23 01:18:29 修改 themes\\faradays\\source\\css\\_partial\\header.styl ，调整导航栏图标位置（暂无较好处理方法）： .header-menu-container // HHJ@20200821 //max-width: 1100px //margin: 0 auto margin: 0 2% 0 2% 增加代码高亮功能： 在 https://github.com/highlightjs/highlight.js/releases 下载相关文件； 在 themes\\faradays\\source\\js 增加 highlight.min.js 在 themes\\faradays\\source\\css 路径增加 github.min.css （themes\\faradays\\source\\css\\style.styl 文件中本来也引入了 highlight.styl 样式文件） 在 themes\\faradays\\layout\\_partial\\head.ejs 增加以下代码，引入 highlight 相关样式和脚本文件（注意路径的表述方法，后续已迁移至 head-more.ejs 文件中）： &lt;!-- HHJ@20200821 --&gt; &lt;!-- HHJ@20200821 --&gt; &lt;!-- &lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.bootcss.com/highlight.js/9.2.0/styles/github.min.css&quot;&gt; --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/github.min.css&quot;&gt; &lt;!-- &lt;%- css(&#39;css/github.min.css&#39;) %&gt; --&gt; &lt;!-- &lt;script src=&quot;//cdn.bootcss.com/highlight.js/9.2.0/highlight.min.js&quot;&gt;&lt;/script&gt; --&gt; 修改 themes\\faradays\\layout\\layout.ejs ，参考 after-footer.ejs 的引入方法引入 after-footer-more.ejs 布局文件： &lt;%- partial(&#39;_partial/after-footer-more&#39;) %&gt; 在 themes\\faradays\\layout\\ 路径下增加 after-footer-more.ejs 文件，并将文章导航 tocbot（从 after-footer.ejs 迁移过来）、代码高亮 highlight 相关内容设置在此文件中。 经测试，themes\\faradays\\source\\css\\_partial\\highlight.styl 、themes\\faradays\\source\\css\\github.min.css 配合使用效果较好，已修改部分颜色及行距。 修改 themes\\faradays\\layout\\_partial\\post\\copyright.ejs 文件，对原创指数大于 50% 的才显示为作者及许可协议： &amp;&amp; parseInt(page.original)&gt;50 时间轴、归档页增加置顶菜单，便于跳转返回首页。themes\\faradays\\layout\\_partial\\timeline.ejs、themes\\faradays\\layout\\_partial\\archive.ejs 同时增加以下内容： &lt;!-- HHJ@20200821 --&gt; &lt;%- partial(&#39;header-post&#39;) %&gt; 并对 themes\\faradays\\layout\\after-footer-more.ejs 文件的 ! is_home() 判断修改为 is_post() ，避免目录导航 class 未找到报警。 增加 gittalk 评论系统的支持： 访问 https://github.com/settings/applications/new 注册账户（位于 GitHub &gt; Settings &gt; Developer settings ）， Client ID: 90b449ff273a263117ec Client Secret: 0a3ccea67a4d3f03cbff012eeac1a8547e367aad 修改 themes\\faradays\\layout\\_partial\\article.ejs ，增加评论布局文件的引用 &lt;% &#125; else if (theme.gitalk.owner) &#123; %&gt; &lt;%- partial(&#39;plugins/comments/gitalk&#39;) %&gt; npm i --save gitalk，并在 themes\\faradays\\layout\\head-more.ejs 中增加相应的引入文件 import &#39;gitalk/dist/gitalk.css&#39; import Gitalk from &#39;gitalk&#39; 新建 themes\\faradays\\layout\\_partial\\plugins\\comments\\gitalk.ejs 文件，设置 div 元素。 对 themes\\faradays\\layout\\after-footer-more.ejs 文件，增加脚本内容。 &lt;script&gt; // HHJ@20200822 const gitalk = new Gitalk(&#123; clientID: &#39;&lt;%- theme.gitalk.client_id %&gt;&#39;, clientSecret: &#39;&lt;%- theme.gitalk.client_secret %&gt;&#39;, repo: &#39;&lt;%- theme.gitalk.repo %&gt;&#39;, // The repository of store comments, owner: &#39;&lt;%- theme.gitalk.owner %&gt;&#39;, admin: [&#39;&lt;%- theme.gitalk.owner %&gt;&#39;], id: (location.pathname).substring(0,49), // Ensure uniqueness and length less than 50 distractionFreeMode: false // Facebook-like distraction free mode &#125;) gitalk.render(&#39;gitalk-container&#39;) &lt;/script&gt; 经过2天来回测试，终于完成，本地测试无法显示（报错信息为 Error: Network Error），不过部署到 GitHub 上后可以进行评论。当然，每个文章都需要作者进行初始化点击才能评论。 增加文章页中，作者增加感应高亮显示功能： themes\\faradays\\layout\\_partial\\post\\title.ejs 对作者标签增加 class 值 &lt;li class=&quot;faradays-author&quot;&gt; themes\\faradays\\source\\css\\style.styl 增加感应变色样式 .faradays-author /*HHJ@20200822，设置感应后发射光线*/ &amp;:hover //background-color: #4cc9f0 background-color: main-color color: white // 颜色与背景色一致 -webkit-box-shadow: 10px 10px 99px 6px rgba(255,165,0,1) -moz-box-shadow: 10px 10px 99px 6px rgba(255,165,0,1) box-shadow: 10px 10px 99px 6px rgba(255,165,0,1) 优化完善时间轴功能 修改 themes\\faradays\\layout\\_partial\\timeline.ejs，修复时间轴功能排序随机导致同一年的文章被多次拆分的情况（内置的排序方法确实非常的便利）。 &lt;% var posts_fs = site.posts.sort(&#39;-date&#39;); %&gt; &lt;% posts_fs.each(function(post, i)&#123; %&gt; 修改 themes\\faradays\\layout\\_partial\\timeline.ejs，增加数字显示的标签 &lt;div class=&quot;timeline2-num&quot;&gt;&lt;%= (site.posts.length -i) %&gt;&lt;/div&gt; 修改 themes\\faradays\\source\\css\\timeline.styl ，增加相应的数字样式： ``` CSS .timeline2-article-date .timeline2-num display table-cell //display inline-block position absolute //color #222 text-align center vertical-align center top 50% width 2rem left -3.5rem ``` 增加限定条件，确保“存档”字眼不出现在首页，themes\\faradays\\layout\\_partial\\archive.ejs &lt;% if (! is_home())&#123; %&gt; &lt;div style=&quot;font-size:37px; text-align:center;padding-top:47px;&quot;&gt;&lt;%- theme.desc.archive %&gt;&lt;/div&gt; &lt;% &#125; %&gt; 修改 themes\\faradays\\layout\\_partial\\archive.ejs 增加 post_num 参数用做数字序号显示，并增加 div 标签： &lt;% page.posts.each(function(post, post_num)&#123; %&gt; &lt;!-- HHJ@20200822 --&gt; &lt;% if ( is_home() )&#123; %&gt; &lt;div class=&quot;article-header-num&quot;&gt;&lt;%- (page.posts.length - post_num) %&gt; &lt;/div&gt; &lt;% &#125; %&gt; themes\\faradays\\source\\css\\_partial\\article.styl 增加数字样式，通过 margin + top 值实现两个 div 平齐显示 .article // HHJ@20200823 //margin: block-margin margin: -(block-margin)*6 0 block-margin background: #fff border-radius: 0 box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2) .article-header-num // HHJ@20200823，数字编号在文章元素的左侧 // 内边距 //padding: (article-padding)*2 // 外边距 margin: article-padding 0 (block-margin)*5 0 position: relative top: (article-padding)*2 left: -1em color: main-color font-size: 3em .article-inner @extend $block overflow: inherit // HHJ@20200823 margin-top: 230px themes\\faradays\\source\\css\\_partial\\mobile.styl 同样修改确保手机样式匹配 .article //margin: 10px 10px margin: -180px 10px 20px 由于涉及 themes\\faradays\\layout\\post.ejs 的兼容性问题，themes\\faradays\\layout\\_partial\\article.ejs 作为公用文件，不再添加 div 标签。 0.1.3，30.09h，2020/08/18 22:23:18 修改 themes\\faradays\\source\\css\\_partial\\header.styl 的 header-title 的样式，同时对文本进行微小的调整。 调整页脚版本所有人的名称（新增 theme.owner 变量），调整文章的作者名称。 在封面页下方增加标签显示（ themes\\faradays\\layout\\_partial\\header.ejs，themes\\faradays\\source\\css\\_partial\\sidebar.styl ）： 基于 sidebar-menu-box-tags 、 sidebar-menu-box-categories 增加 tags2 、 categories-2 样式。 style内联样式的权值&gt;&gt;ID选择器&gt;&gt;class选择器&gt;&gt;标签选择器 参考 https://hexo.io/zh-cn/docs/helpers#tagcloud 设置标签云格式（默认标签的大小会发生变化，无法通过样式来设置） 增加原创字段 original ，并修改 themes\\faradays\\layout\\_partial\\post\\title.ejs ，增加以下内容： &lt;!-- HHJ@20200812 --&gt; &lt;li&gt; &lt;% if (page.original &amp;&amp; page.original.length)&#123; %&gt; &lt;i class=&quot;fa fa-copyright&quot;&gt;&lt;/i&gt; &lt;%- page.original %&gt; &lt;% &#125; %&gt; &lt;/li&gt; 同步修改 themes\\faradays\\layout\\_partial\\post\\copyright.ejs 文件，增加版权声明。 参考 https://www.runoob.com/font-awesome/fontawesome-icons-directional.html 修改文章导航的图标， themes\\faradays\\layout\\_partial\\post\\nav.ejs 中 fa-hand-o-left 、fa-hand-o-right 替换为 fa-arrow-circle-left、fa-arrow-alt-circle-right，或 fa-arrow-left、 fa-arrow-right，或 。 修改 themes\\faradays\\_config.yml 中各个栏目的图标名称。 参考 ayer 主题的归档页格式，创建时间轴（时间轴）！ 创建新页面： hexo new page timeline ，并在头部引入 layout : timeline 设定。 设定页面内容：参考 archive.ejs 内容创建 themes\\faradays\\layout\\_partial\\timeline.ejs 文件。 变量 page.posts 修改为 site.posts 。 class 标签的修改: 原始样式 样式1 样式2 archives timeline page-type-title archives-wrap media archive-year-wrap archive-year archives 设定页面格式：创建 themes\\faradays\\source\\css\\timeline.styl 文件，并 @import &quot;timeline&quot; 引入 themes\\faradays\\source\\css\\style.styl 文件中。经过2天来回反复试验，初步完成时间轴设置。 参考 https://github.com/willin/hexo-wordcount ，增加字数统计功能 npm install hexo-wordcount --save 安装相关插件； 修改 themes\\faradays\\layout\\_partial\\post\\title.ejs 文件： &lt;!-- HHJ@20200815，增加文章字数统计 --&gt; &lt;ul&gt; &lt;li&gt;&lt;i class=&quot;fa fa-file-word-o&quot;&gt;&lt;/i&gt; &lt;span class=&quot;post-count&quot;&gt;&lt;%= wordcount(post.content) %&gt; words&lt;/span&gt; &lt;/li&gt; &lt;li&gt;&lt;i class=&quot;fa fa-youtube-play&quot;&gt;&lt;/i&gt; &lt;span class=&quot;post-count&quot;&gt;&lt;%= min2read(post.content) %&gt; min&lt;/span&gt; &lt;/li&gt; &lt;/ul&gt; 修改 themes\\faradays\\layout\\_partial\\plugins\\sites\\visit.ejs 文件： &lt;!-- HHJ@20200815，增加站点字数统计 --&gt; &amp;emsp;&lt;%- theme.access_counter.site_words %&gt;&lt;span class=&quot;post-count&quot;&gt;&lt;%= totalcount(site) %&gt;&lt;/span&gt; 修改 themes\\faradays\\_config.yml，增加 access_counter.site_words 参数（写在 ejs 中会出现中文乱码现象）。 增加作者的可选选项 post.author ，如果不设置作者，则为默认作者。同步修改 themes\\faradays\\layout\\_partial\\post\\copyright.ejs 文末作者说明。 调整 URL 格式为 &lt;category&gt;/YYYYMMDDHHMM，暂不考虑保留中文标题形式，因为太长且不直观。 纠正一个文章中调用 2 次不蒜子统计导致后一个不显示的问题（直接删除，因为系统使用 id 标签的方式必须唯一） 修改 themes\\faradays\\layout\\_partial\\archive.ejs ，在文件顶部增加归档页的标题内容： &lt;!-- HHJ@20200817 --&gt; &lt;div style=&quot;font-size:37px; text-align:center;padding-top:0.7%;&quot;&gt;&lt;%- theme.desc.archive %&gt;&lt;/div&gt; 0.1.2，7.70h，2020/08/07 00:07:27 修改 themes\\faradays\\layout\\_partial\\article.ejs，删除 &lt;div class=&quot;article-img&quot;&gt; ... &lt;/div&gt; 去除首页文章的封面图，并调整文字内容增加跳转链接（并去除下划线效果）； &lt;!-- HHJ@20200805 --&gt; &lt;div class=&quot;article-feed&quot;&gt; &lt;p&gt; &lt;a href=&quot;&lt;%- url_for(post.path) %&gt;&quot; &lt;% if (theme.open_new_link) &#123;%&gt; target=&quot;_blank&quot; &lt;% &#125; %&gt; style=&quot;text-decoration: none;&quot; &gt; &lt;%- post.excerpt ? post.excerpt : truncate(strip_html(post.content), &#123; length: theme.excerpt_length &#125;) %&gt; &lt;/a&gt; &lt;/p&gt; &lt;/div&gt; 修改 themes\\faradays\\source\\css\\_partial\\article.styl ，去除左侧为封面预留的空间，如下： .article-feed /* HHJ@20200719 */ /* margin-left: 320px */ /* 上、右、下、左 */ margin: 3px 6px 3px 6px 修改 themes\\faradays\\_config.yml 中 excerpt_length 值，由 190 修改为 288 。 为完善文章导航标题高亮效果、解决标题导航时被遮挡问题，修改如下： &lt;script&gt; tocbot.init(&#123; scrollSmooth: true, // 点击目录时，页面下移一定距离（避免固定顶部的菜单遮盖），单位为 px scrollSmoothOffset: -44, // 避免高亮显示不当 headingsOffset: 47, &#125;); &lt;/script&gt; 由于去除了文章的封面，因此文章的导航应该提前出现： showToc: function (scrollTop) &#123; //if (scrollTop / clientHeight &gt;= 0.4) &#123; //if (scrollTop / clientHeight &gt;= 0.1) &#123; if (scrollTop &gt;= 90) &#123; toc.removeClass(&quot;post-toc-top&quot;); toc.addClass(&quot;post-toc-not-top&quot;); &#125; else &#123; toc.removeClass(&quot;post-toc-not-top&quot;); toc.addClass(&quot;post-toc-top&quot;); &#125; &#125;, 测试表明上述修改已经及时生成相应的 class，但是相应的内容仍不显示。 为使得右侧的置顶图标尽早出现（超过标题栏）， themes\\faradays\\source\\js\\main.js 设置如下： showBackTop: function (scrollTop) &#123; //backTop.css(&#39;display&#39;, (scrollTop &gt; clientHeight) ? &quot;block&quot; : &quot;none&quot;); backTop.css(&#39;display&#39;, (scrollTop &gt; 90) ? &quot;block&quot; : &quot;none&quot;); &#125;, 为了确保 tocbot 尽早展现目录，修改 themes\\faradays\\source\\css\\tocbot.styl 如下： .tocbot // HHJ@20200806 //top 350px top 35px 优化打赏样式 修改 themes\\faradays\\source\\css\\_partial\\reward.styl ，调整显示宽度： .reward-lay // HHJ@20200806 //width: 360px width: 660px .reward-code // HHJ@20200806 //width: 200px 修改 themes\\faradays\\layout\\_partial\\post\\reward.ejs ，设置图片并排显示： &lt;div class=&quot;reward-content&quot;&gt; &lt;div class=&quot;reward-code&quot;&gt; &lt;!-- HHJ@20200806 ，取消图片预览，且两个图片同时显示，减少操作--&gt; &lt;table style=&quot;float:center; margin:auto;&quot;&gt;&lt;tr&gt; &lt;td&gt;&lt;img src=&quot;&lt;%- url_for(&#39;images/微信-收款码.jpg&#39;) %&gt;&quot; alt=&quot;微信&quot; border=0&gt;&lt;/td&gt; &lt;td&gt;&lt;img src=&quot;&lt;%- url_for(&#39;images/支付宝-收款码.jpg&#39;) %&gt;&quot; alt=&quot;支付宝&quot; border=0&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class=&quot;reward-select&quot;&gt; &lt;/div&gt; &lt;/div&gt; 将作者标识调整到标题下方： 修改 themes\\faradays\\layout\\_partial\\post\\copyright.ejs ，删除以下内容： &lt;footer&gt; &lt;a href=&quot;&lt;%- config.url %&gt;&quot;&gt; &lt;img src=&quot;&lt;%- url_for(theme.logo) %&gt;&quot; alt=&quot;&lt;%- config.author %&gt;&quot;&gt; &lt;%- config.author %&gt; &lt;/a&gt; &lt;/footer&gt; 修改 themes\\faradays\\_config.yml ，增加: user-logo: images/f1.png 修改 themes\\faradays\\layout\\_partial\\post\\title.ejs ，增加以下内容： &lt;!-- HHJ@20200806 --&gt; &lt;li&gt; &lt;!-- &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; --&gt; &lt;a href=&quot;&lt;%- config.url %&gt;&quot;&gt; &lt;img src=&quot;&lt;%- url_for(theme.user-logo) %&gt;&quot; alt=&quot;&lt;%- config.author %&gt;&quot; height=&quot;10&quot; width=&quot;10&quot;&gt; &lt;%- config.author %&gt; &lt;/a&gt; &lt;/li&gt; 调整打赏至分享所在的行： themes\\faradays\\source\\css\\_partial\\reward.styl : .page-reward margin: 20px 33% text-align: center // HHJ@20200806 position: absolute top: -41px z-index: 3 a // HHJ@20200806 //width: 50px //height: 50px width: 37px height: 37px themes\\faradays\\source\\css\\_partial\\share.styl : .post-share-fab display: block //width: share-fab-size //height: share-fab-size width: 37px height: 37px line-height: 37px themes\\faradays\\layout\\_partial\\article.ejs ，将打赏的内容放在分享的内容所在的 footer 中： &lt;footer class=&quot;article-footer&quot;&gt; &lt;!-- HHJ@20200806，调整位置 --&gt; &lt;% if (! index)&#123; %&gt; &lt;%- partial(&#39;post/reward&#39;) %&gt; &lt;% &#125; %&gt; &lt;/footer&gt; 0.1.1，1.5h，2020/07/19 21:00:28 实现主页和文章页横幅格式自定义。检查发现 miho 主题中的封面图使用 themes\\miho\\layout\\_partial\\header.ejs 来定义，但是只有 themes\\miho\\layout\\layout.ejs 引用了。 &lt;%- partial(&#39;_partial/header&#39;, null, &#123;cache: !config.relative_link&#125;) %&gt; 删除上述代码后，所有的页面都将没有封面图等内容。 根据 oschina 网友 Rain_mei 的文章，is_home（首页）、 is_post（文章）、 is_page（独立页） 等函数可以实现分不同页面设置不同布局。如下： &lt;!-- HHJ@20200719 --&gt; &lt;% if (is_home())&#123; %&gt; &lt;%- partial(&#39;_partial/header&#39;, null, &#123;cache: !config.relative_link&#125;) %&gt; &lt;% &#125; %&gt; &lt;% if (is_post())&#123; %&gt; &lt;%- partial(&#39;_partial/header-post&#39;, null, &#123;cache: !config.relative_link&#125;) %&gt; &lt;% &#125; %&gt; 修改 themes\\miho\\layout\\_partial\\header-post.ejs 外层 class为 header-post ，同步修改 themes\\miho\\source\\css\\_partial\\header.styl 增加 header-post 的样式。 修改 themes\\miho\\source\\css\\_partial\\article.styl ，纠正首页中文章的标签三角形符号颜色未能自定义问题。 .article-header .header-cate &amp;:after /* HHJ@20200719，标签三角形 */ /* border-left: 10px solid #099 */ border-left: 10px solid main-bg-1 实现主题名称自定义，为后续制作个人主题做好准备。 mihoConfig 替换为 WebConfig miho 替换 faradays 0.1.0，&gt;10h，2020/07/19 16:06:36根据对照选型，暂定使用 miho 主题，并根据 ayer 主题进行修改： - 完成封面更换； - 完成页面动态导航菜单的更换； - 调整页面主题色； - 适当调整页面布局及部分元素的颜色； - 更换 logo。 定制 D:\\WebSites\\faradays-studio.hexo\\themes\\ayer\\source 相关内容 \\dist\\main.css 解决标题过长显示不全问题 .cover-inner &#123;position:absolute;top:50%;left:50%;transform:translate(-50%,-100%)&#125; 修改为（后者更好）： .cover-inner &#123;position:absolute;top:30%;left:25%;&#125; .cover-inner &#123;position:absolute; left:0; right:0; top: 37%; bottom:0; margin:auto;&#125; 放大首页的下拉箭头符号，便于点击 .cover-learn-more a&gt;i &#123;font-size:13rem;color:#fff;-webkit-animation:down 1s linear infinite;animation:down 1s linear infinite&#125; 更换logo #logo: /images/ayer-side.svg logo: /images/logo.png 基于 Miho 定制主题 修改 themes\\miho\\source\\css\\_variables.styl ，设定主题色调： // Main // 主色调 //main-color = #0cc // 天青色 //main-color = #e23 //红色 main-color = orange 修改 themes\\miho\\layout\\_partial\\header.ejs ，去除顶部浮动效果： &lt;!-- &lt;div id=&quot;header-menu&quot; class=&quot;header-menu-pos animated&quot;&gt; --&gt; &lt;!-- HHJ@20200711 删除动态效果，实现顶部固定效果 --&gt; &lt;div id=&quot;header-menu&quot; class=&quot;header-menu-pos&quot;&gt; 对应地，修改 themes\\miho\\source\\css\\_partial\\header.styl ，设置背景色： .header-menu-pos /* background: none */ /* HHJ@20200711，设置背景色 */ background: main-color 或： background: grey 修改 themes\\miho\\source\\css\\_variables.styl ，变更背景图的高度（固定高度）： banner-height = 420px 对应地，修改 themes\\miho\\source\\css\\_partial\\header.styl ，实现自动高度： #header /* HHJ@20200711 */ /* height: banner-height */ /* height: auto */ height: 100% 对应地，修改 themes\\miho\\source\\css\\_partial\\header.styl ，实现垂直居中： /* HHJ@20200711 */ /* padding-top: 50px */ position: relative top: 50% transform: translateY(-50%) 或（测试表明，下述方法更好，因为每个页面的内容高度不同，因此导致其位置不固定） padding-top: calc(32vh - 1em) 修改 themes\\miho\\source\\css\\_partial\\header.styl ，修改标题颜色： #header-title /* HHJ@20200711 */ /* color: #fff */ color: orange #header-description /* HHJ@20200711 */ /* color: #666 */ color: cyan 对应地，修改 themes\\miho\\source\\css\\_partial\\sidebar.styl，避免弹窗被全页背景图遮挡 .sidebar-menu-box /* HHJ@20200712 */ /* overflow: hidden */ z-index: 997 overflow: auto 修改 themes\\miho\\source\\css\\_partial\\sidebar.styl，右侧 sidebar 的浮动位置 /* HHJ@20200711 */ /* right: calc(50% - 525px) */ right: 17px right: 2% 修改 themes\\miho\\source\\css\\_partial\\article.styl ，变更左侧目录导航的位置（配合后续修改宽度）： .post-toc-pos /* HHJ@20200711 */ /* left: calc(50% - 660px) */ //left: 18px left: 1% .post-toc-wrap position: fixed border-radius: 3px /* HHJ@20200711 */ /* width: 200px */ /* max-height: 400px */ /* color: #313131 */ max-width: 15% max-height: 500px color: #111 修改 themes\\miho\\source\\css\\_variables.styl，变更文章的最小宽度： // Layout block-margin = 30px article-padding = 15px mobile-nav-width = 280px // main-column = 9 main-column = 12 sidebar-column = 3 columns = main-column + _sidebar-column 修改 themes\\miho\\source\\css\\style.styl，对文章内容进行整体右侧偏移： .outer clearfix() max-width: (column-width + gutter-width) * columns + gutter-width /* HHJ@20200711，上 右 下 左 按顺时针排序，从右侧浮动、控制左侧空间用于目录 */ /* margin: 0 auto */ margin: 0 7% 0 15% padding: 0 gutter-width 修改 themes\\miho\\layout\\_partial\\post\\reward.ejs ，打赏样式由图片改为文字： &lt;div class=&quot;reward-select&quot;&gt; &lt;% if(wechat) &#123;%&gt; &lt;label class=&quot;reward-select-item checked&quot; data-id=&quot;wechat&quot; data-wechat=&quot;&lt;%- url_for(wechat) %&gt;&quot;&gt;微信 &lt;!-- &lt;img class=&quot;reward-select-item-wechat&quot; src=&quot;&lt;%- url_for(&#39;images/wechat.png&#39;) %&gt;&quot; alt=&quot;微信&quot;&gt; --&gt; &lt;/label&gt; &lt;% &#125; %&gt; &lt;% if(alipay) &#123;%&gt; &lt;label class=&quot;reward-select-item&quot; data-id=&quot;alipay&quot; data-alipay=&quot;&lt;%- url_for(alipay) %&gt;&quot;&gt;支付宝 &lt;!-- HHJ@20200711 ，取消图片预览，采用文字展示--&gt; &lt;!-- &lt;img class=&quot;reward-select-item-alipay&quot; src=&quot;&lt;%- url_for(&#39;images/alipay.png&#39;) %&gt;&quot; alt=&quot;支付宝&quot;&gt; --&gt; &lt;/label&gt; &lt;% &#125; %&gt; &lt;/div&gt; 修改页脚格式 themes\\miho\\layout\\_partial\\footer.ejs 修改 themes\\miho\\source\\css\\_partial\\sidebar.styl，设置搜索框背景色 .search-wrap /* HHJ@20200711 */ /* background: #fff */ /* opacity: 0 */ /* background: #888 */ /* opacity: 0.5 */ background: rgba(0,0,0,0.8) 修改 themes\\miho\\layout\\_partial\\footer.ejs，设置版权声明 修改 themes\\miho\\layout\\_partial\\plugins\\sites\\visit.ejs ，设置访客文字格式 修改 themes\\miho\\source\\css\\_partial\\header.styl ，固定 logo 显示大小，避免导入的图片大小不一 #logo @extend $logo-common img /* HHJ@20200711 */ width: 133px height: 133px 对应修改 themes\\miho\\source\\css\\_partial\\reward.styl ，增加 img 标签格式来设定打赏二维码大小 .reward-content margin: 20px 0 .reward-code width: 200px margin: 0 auto img max-height: 200px vertical-align: middle border: 1 display: inline-block 修改 themes\\miho\\layout\\_partial\\after-footer.ejs ，增加导航目录（miho主题为 post-toc-wrap，ayer 主题为 tocbot ）；以下做法能够添加 div ，但是 css 效果没有设置好 &lt;!-- HHJ@20200719 --&gt; &lt;!-- 设置文章导航 --&gt; &lt;!-- &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/tocbot/4.11.1/tocbot.min.js&quot;&gt;&lt;/script&gt; --&gt; &lt;%- js(&#39;/js/tocbot&#39;) %&gt; &lt;div class=&quot;tocbot&quot; style=&quot;position:absolute;left:10px;top:350px;max-width:230px;max-height:300px;border-radius:3px;line-height:23px;background:rgba(88, 88, 88, 0)&quot;&gt;&lt;/div&gt; &lt;script&gt; // Tocbo http://tscanlin.github.io/tocbot/ tocbot.init(&#123; tocSelector: &#39;.tocbot&#39;, contentSelector: &#39;.article-inner&#39;, headingSelector: &#39;h1, h2, h3, h4, h5, h6&#39;, hasInnerContainers: true, scrollSmooth: true, scrollContainer: &#39;main&#39;, positionFixedSelector: &#39;.tocbot&#39;, positionFixedClass: &#39;is-position-fixed&#39;, fixedSidebarOffset: &#39;auto&#39; &#125;); &lt;/script&gt; 将 ayer 主题中的 tocbot.styl 导入 themes\\miho\\source\\css 文件夹并修改其颜色设置，同步修改 themes\\miho\\source\\css\\style.styl 文件导入 tocbot 的样式文件： @import &quot;tocbot&quot; 通过修改 themes\\miho\\layout\\_partial\\post\\toc.ejs 文件，从而与 after-footer.ejs 相关 div 的设定匹配，同时修改 tocbot.styl 样式。 相关链接主题开发相关材料 hexo-theme-faradays 开发记录 hexo-theme-faradays 主题概述 hexo-theme-faradays 主题用法"}],"posts":[{"title":"使用Q-Q图验证数据是否满足正态分布","slug":"使用Q-Q图验证数据是否满足正态分布","date":"2022-03-21T11:52:18.000Z","updated":"2022-03-21T12:31:02.677Z","comments":true,"path":"202203211952/","link":"","permalink":"https://faradays-studio.gitee.io/202203211952/","excerpt":"","text":"根据大数定律，正常的采样数据达到一定数量时，就会呈现出正态分布的特性。我们之所以特别关心数据是否满足正态分布，无非是这两方面的需要：需要在特定的区间内涵盖大部分的重要数据，或者在两端进行特别的处理。 笔者最近在做一个油泵运行时长的评价工作中，就是对油泵每次运行的时长进行统计，如果运行时间太长，那么就认为该油泵运行存在一定的异常，那么应该考虑予以告警。 那么，我们怎么验证数据是否满足正态分布呢？根据网友的介绍，就是对数据进行处理后绘制 “Q-Q”图；我没有专业背景知识，自己理解就是绘制“数据”与“偏差”的双中位数之间的曲线图，如果呈现为一条直线，那么就表明数据呈现出正态分布的特性。 整理数据 使用 RANK 函数对 数值 进行排名计算，如对 B2 求排名，有 D2=RANK(B2,B:B,1)，对D列双击即可获得D列结果（下同，不再赘述）； 对 B2（原始数据）、D2 （排名值） 数据进行计算，求得分位数 ，如 E2=(D2-0.5)/COUNT(B:B,B2)；如下： 对分位数列进行升序处理，依次点击 Excel 中的：数据（选项卡）→ 排序，对该数据列进行 升序 排序处理，如下： 如果不进行排序就绘制曲线，那么曲线就会变成一条来回曲折的奇怪线条；因此必须按 分位数 进行排序。 对 数据进行Z分数计算，如 C2=NORMSINV(E2)； Z 分数是标准差的倍数，参考文献[1]可以进一步了解，对应的中文版为 https://www.shuxuele.com/data/standard-normal-distribution.html。 绘制图形 选中上述的 B列（原始数据）、C列（Z分数），执行 Excel 的 插入（选项卡）→ 散点图，即可获得拟合曲线； 对曲线进行坐标轴等进行个性化调整，并添加趋势线，最终得到效果图如下： 参考文献[1] Rod Pierce. Normal Distribution [EB/OL]. https://mathsisfun.com/data/standard-normal-distribution.html, 2022/03/13. [2] 博客园. 在Excel里绘制Q-Q图 [EB/OL]. https://www.cnblogs.com/jiangleads/articles/12984545.html, 2022/03/14.","categories":[{"name":"工作中的魔法","slug":"工作中的魔法","permalink":"https://faradays-studio.gitee.io/categories/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%AD%94%E6%B3%95/"}],"tags":[{"name":"正态分布","slug":"正态分布","permalink":"https://faradays-studio.gitee.io/tags/%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83/"},{"name":"Q-Q图","slug":"Q-Q图","permalink":"https://faradays-studio.gitee.io/tags/Q-Q%E5%9B%BE/"},{"name":"中位数","slug":"中位数","permalink":"https://faradays-studio.gitee.io/tags/%E4%B8%AD%E4%BD%8D%E6%95%B0/"},{"name":"Excel","slug":"Excel","permalink":"https://faradays-studio.gitee.io/tags/Excel/"},{"name":"散点图","slug":"散点图","permalink":"https://faradays-studio.gitee.io/tags/%E6%95%A3%E7%82%B9%E5%9B%BE/"}]},{"title":"用华为手机克隆快速实现数据的导入导出","slug":"用华为手机克隆功能快速实现手机数据的导入导出","date":"2022-02-27T13:18:58.000Z","updated":"2022-03-07T13:27:32.938Z","comments":true,"path":"202202272118/","link":"","permalink":"https://faradays-studio.gitee.io/202202272118/","excerpt":"","text":"概述华为的手机克隆功能非常强大，通过该功能，可以实现两部手机之间包括通信录、通话记录、短信、APP等功能的快速迁移。 最近10多年中，我用了多种手机操作系统的手机，更换手机的时候，最困难的事情就是各种资料的同步： 通讯录同步：我用过 QQ同步助手、豌豆荚、SIM卡信息导出+Excel整理、刷机软件等各种工具，QQ同步助手、QQ邮箱同步等功能在一些版本的手机上出现了重大兼容性问题，SIM卡信息导入导出非常费精神，豌豆荚也一般般。综合比较下来，还是华为手机克隆功能最稳定，基本无须再进行更多的干预，特别是华为手机之间的信息同步，比手机自身携带的导入导出 VCard 功能还好用。 程序配置同步：目前我并不了解程序配置同步的方法；只能盲目地整体拷贝手机整个目录。 系统配置同步：华为等多家手机系统具备账户同步功能。 因此，一个“华为手机克隆”功能完成上述诉求，还是挺不错的。 操作过程如下： 打开 WIFI 分别开启 2 台手机的 WiFi 功能和定位功能； 打开应用 通过搜索功能，快速找到 手机克隆 应用，对于非华为手机，可能需要人为安装该应用程序； 选择设备类型 搜索打开“手机克隆”，根据实际情况选择 这是新设备、这是旧设备，如左图； 对于新设备，根据实际选择手机品牌，并出现一个二维码界面，如右图： 对于老设备，选择后进入扫描窗口，用该扫描窗口去扫描新设备的二维码，等待1分钟左右完成系统关联。 &emsp;→&emsp; 选择数据 选择需要同步的数据； 执行同步 等待同步同步完成，如下（同步速度是非常快的，打到了42MB/s，比我的手机专用U盘快多了！）： &emsp;&emsp; 同步后自动导入 同步完成，新手机会自动执行导入操作（比如通话录音、照片等等）： 旧设备显示完成，如左图 新设备文件拷贝完成后，自动进行导入操作，如右图： &emsp;&emsp; 同步完成后，新手机就可以直接使用了，除了微信、QQ、网银等部分账户需要重新登录外，部分应用甚至都不需要重新登录… 克隆至此完成。 参考文献 点亮～黑夜. Markdwon中多张图片的并排显示 [EB/OL]. https://blog.csdn.net/weixin_41010198/article/details/86639739, 2022/03/07. jerry谁便看看. markdown技巧-图片并排 [EB/OL]. https://www.jianshu.com/p/c37f200c0d9c, 2022/03/07.","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"华为","slug":"华为","permalink":"https://faradays-studio.gitee.io/tags/%E5%8D%8E%E4%B8%BA/"},{"name":"手机","slug":"手机","permalink":"https://faradays-studio.gitee.io/tags/%E6%89%8B%E6%9C%BA/"},{"name":"克隆","slug":"克隆","permalink":"https://faradays-studio.gitee.io/tags/%E5%85%8B%E9%9A%86/"},{"name":"导入","slug":"导入","permalink":"https://faradays-studio.gitee.io/tags/%E5%AF%BC%E5%85%A5/"},{"name":"导出","slug":"导出","permalink":"https://faradays-studio.gitee.io/tags/%E5%AF%BC%E5%87%BA/"},{"name":"QQ同步助手","slug":"QQ同步助手","permalink":"https://faradays-studio.gitee.io/tags/QQ%E5%90%8C%E6%AD%A5%E5%8A%A9%E6%89%8B/"}]},{"title":"用iptables管理防火墙策略","slug":"用iptables管理防火墙策略","date":"2022-02-27T13:14:57.000Z","updated":"2022-02-27T13:17:46.774Z","comments":true,"path":"202202272114/","link":"","permalink":"https://faradays-studio.gitee.io/202202272114/","excerpt":"","text":"iptables 是 CentOS 等系统中管理防火墙策略的工具。通过防火墙的配置，可以增强系统的安全性。 iptables -I : 新加一条规则链iptables -A ：增加一条规则链 一般地，iptables -I 添加的规则放在现有规则的最前面，iptables -A 放在现有规则的最后面。 参数 说明 示例 -F 清空规则链 iptables -F -L 查看规则链 iptables -L -A 追加规则 iptables -A INPUT -D 删除规则 iptables -D INPUT 1 -R 修改规则 iptable -R INPUT 1 -s 192.168.120.0 -j DROP -I 在头部插入规则 iptables -I INPUT 1 –dport 80 -j ACCEPT -L 查看规则 iptables -L INPUT -N 新的规则 iptables -N allowed -V 查看iptables版本 iptables -V -p 协议（tcp/udp/icmp） iptables -A INPUT -p tcp -s 匹配原地址，加” ! “表示除这个IP外 iptables -A INPUT -s 192.168.1.1 -d 匹配目的地址 iptables -A INPUT -d 192.168.12.1 –sport 匹配源端口流入的数据 iptables -A INPUT -p tcp –sport 22 –dport 匹配目的端口流出的数据 iptables -A INPUT -p tcp –dport 22 -i 匹配入口网卡流入的数据 iptables -A INPUT -i eth0 -o 匹配出口网卡流出的数据 iptables -A FORWARD -o eth0 -j 要进行的处理动作:DROP(丢弃)，REJECT(拒绝)，ACCEPT(接受)，SANT(基于原地址的转换) iptable -A INPUT 1 -s 192.168.120.0 -j DROP –to-source 指定SANT转换后的地址 iptables -t nat -A POSTROUTING -s 192.168.10.0/24 -j SANT –to-source 172.16.100.1 -t 表名(raw、mangle、nat、filter) iptables -t nat -m 使用扩展模块来进行数据包的匹配(multiport/tcp/state/addrtype) iptables -m multiport","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://faradays-studio.gitee.io/tags/shell/"},{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"CentOS","slug":"CentOS","permalink":"https://faradays-studio.gitee.io/tags/CentOS/"},{"name":"iptables","slug":"iptables","permalink":"https://faradays-studio.gitee.io/tags/iptables/"},{"name":"防火墙","slug":"防火墙","permalink":"https://faradays-studio.gitee.io/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"}]},{"title":"chattr 的用法","slug":"chattr的用法","date":"2022-02-20T12:33:10.000Z","updated":"2022-02-20T12:38:45.172Z","comments":true,"path":"202202202033/","link":"","permalink":"https://faradays-studio.gitee.io/202202202033/","excerpt":"","text":"在网络安全的管理中，需要对一些重要的系统文件进行锁定，比如说 /etc/resolv.conf、/etc/hosts，通过锁定，可以避免文件被误修改或者入侵者滥用。 chattr +i 文件名 //锁定文件（无法修改、删除等） chattr -i 文件名 //解锁文件 chattr +a 文件 //锁定后文件仅可追加 chattr -a 文件名 //解锁文件 lsattr 文件名 //查看文件特殊属性 测试情况如下： 进行文件属性修改 # chattr +i /etc/resolv.conf # # chattr +a /etc/resolv.conf # # lsattr /etc/resolv.conf ----ia---------- /etc/resolv.conf 尝试文件的修改 # rm -rf /etc/resolv.conf rm: 无法删除&quot;/etc/resolv.conf&quot;: 不允许的操作 # echo xyz &gt; /etc/resolv.conf -bash: resolv.conf: 权限不够","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://faradays-studio.gitee.io/tags/shell/"},{"name":"chattr","slug":"chattr","permalink":"https://faradays-studio.gitee.io/tags/chattr/"},{"name":"锁定","slug":"锁定","permalink":"https://faradays-studio.gitee.io/tags/%E9%94%81%E5%AE%9A/"}]},{"title":"用 csh 对 Solaris 远程访问 IP 进行限制","slug":"用csh对Solaris远程访问IP进行限制","date":"2022-02-12T04:27:47.000Z","updated":"2022-02-20T12:33:32.740Z","comments":true,"path":"202202121227/","link":"","permalink":"https://faradays-studio.gitee.io/202202121227/","excerpt":"","text":"最早测试这个的时候，花了一些时间，直接看代码吧 示例代码 #!/usr/bin/csh # 执行 csh /etc/block_ssh.csh # # 获取 tty 值 set tmn = `who am i | awk &#39;&#123;print $2;&#125;&#39;` # 获取当前 IP set login_ip = ` who -um | awk &#39;&#123;print $8;&#125;&#39; | sed -e &#39;s/(//g; s/)//g&#39; ` # 获取当前 PID 值 set login_pid = `who -um | awk &#39;&#123;print $7;&#125;&#39;` set login_name = `echo $LOGNAME` if ( &quot;$login_ip&quot; == &quot;&quot; || &quot;$login_ip&quot; == &quot;:0&quot; || &quot;$login_ip&quot; == &quot;:0.0&quot;) then set type_x = &quot;local&quot; else set type_x = &quot;remote&quot; endif echo &quot;`date +%Y-%m-%d\\ %H:%M:%S` \\t $login_name $login_ip \\n&quot; &gt;&gt; /usr/tmp/remote.log #echo -e &quot;`date +%Y-%m-%d\\ %H:%M:%S` \\t $login_ip \\n&quot; &gt;&gt; /tmp/remote.log # bash echo $type_x #trap 1 2 3 9 15 if ( &quot;$type_x&quot; == &quot;local&quot; || &quot;$login_ip&quot; == &quot;10.0.2.2&quot; ) then echo &quot;Welcome......&quot; logger -p user.info &quot;Someone has logined in: $login_ip \\!&quot; else echo &quot; sys log&quot; # 需要转义：英文叹号 logger -i -p user.err -t SSH &quot;Remote IP is login: $login_ip \\!&quot; echo &quot; user log&quot; logger -ip user.alert &quot;Unauthorized remote IP is login: $login_ip \\!&quot; # 测试表明，上述报警同时在 系统日志和用户日志中存储 # kill remote ssh link pkill -9 -t $tmn endif 姊妹篇 用 bash 对 Solaris 远程访问 IP 进行限制","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"csh","slug":"csh","permalink":"https://faradays-studio.gitee.io/tags/csh/"},{"name":"Solaris","slug":"Solaris","permalink":"https://faradays-studio.gitee.io/tags/Solaris/"},{"name":"IP","slug":"IP","permalink":"https://faradays-studio.gitee.io/tags/IP/"},{"name":"远程","slug":"远程","permalink":"https://faradays-studio.gitee.io/tags/%E8%BF%9C%E7%A8%8B/"},{"name":"限制","slug":"限制","permalink":"https://faradays-studio.gitee.io/tags/%E9%99%90%E5%88%B6/"}]},{"title":"Django ORM 数据库查询的all、filter、exclude方法","slug":"DjangoORM数据库查询的all、filter、exclude方法","date":"2022-02-12T03:35:06.000Z","updated":"2022-02-12T04:44:10.090Z","comments":true,"path":"202202121135/","link":"","permalink":"https://faradays-studio.gitee.io/202202121135/","excerpt":"","text":"Object Relational Mapping(关系对象映射)，简称为 ORM；对于 Django 框架，指的是Django通过内部的处理函数，实现了多种数据库统一的访问方法，从而可以非常方便地实现软件系统的开发，无须针对不同的数据库进行 SQL 语句的编写；对于非职业开发人员而言，这是一种非常大的优势。 在开发中小型网站时，使用 Django 确实能够带来了很多的方便。 Django orm 用法概述在 ORM 中，查询是更新、删除的基础，查询到相应的QuerySet对象后，可以执行特定字段的设值或者删除操作，如下： 项目 示例 备注 查询 test1 = Test.objects.get(id=1) 数据表名=TEST，字段名= id 更新 test1.name = ‘Google’ test1.save() name 为`字段名 删除 test1.delete() Django 的 filter、excludeDjango的查询方法有很多，基本公式是 数据库名.object.ORM访问方法(字段名__字段控制参数=查询条件) 。 除了 get 方法外，最常见的就是 all、filter、exclude 方法了。这里做了表格化的总结： all 方法 公式 备注 数据表名.objects.all() 查询所有 数据表名.objects.all()[:10] 切片 （前10条） 数据表名.objects.all().reverse()[:2] 反向切片 （最后两条） 数据表名.objects.all().reverse()[0] 最后一条 filter 方法 公式 备注 数据表名.objects.filter(字段名=”查询内容“) 数据表名.objects.filter(字段名=”查询内容“)数据表名.objects.filter(字段名__exact=”查询内容“) 数据表名.objects.filter(字段名__iexact=”查询内容“) 精确查询（i 开头，表示不区分大小写，下同） 数据表名.objects.filter(字段名__contains=”查询内容“)数据表名.objects.filter(字段名__icontains=”查询内容“) 包含文本 数据表名.objects.filter(字段名__in=[“查询1“, “查询2“, …, “查询n“ ]) 范围检索（任1） 数据表名.objects.filter(字段名__range=(最小值, 最大值)) 数字区域检索__range=(‘2005-01-01 00:00:00’, ‘2005-03-31 00:00:00’) 数据表名.objects.filter(字段名__gt=查询数字)数据表名.objects.filter(字段名__gte=查询数字)数据表名.objects.filter(字段名__lt=查询数字)数据表名.objects.filter(字段名__lte=查询数字) 数值比较（支持与日期/时间参数串接） 数据表名.objects.filter(字段名__date=’YYYY-mm-dd‘)数据表名.objects.filter(字段名__year=年份数字)数据表名.objects.filter(字段名__iso_year=年份数字)数据表名.objects.filter(字段名__month=月份数值)数据表名.objects.filter(字段名__day=日数值)数据表名.objects.filter(字段名__week=周数) 数据表名.objects.filter(字段名__week_day=星期几数) # 星期日=1 数据表名.objects.filter(字段名__iso_week_day=星期几数) # 星期一=1 数据表名.objects.filter(字段名__quarter=季节数) # 新历 数据表名.objects.filter(字段名__time=”HH:MM“) 数据表名.objects.filter(字段名__hour=小时数) 数据表名.objects.filter(字段名__minute=分钟数) 数据表名.objects.filter(字段名__second=秒数) 数据表名.objects.filter(字段名__date=’2022-01-00’) 数据表名.objects.filter(字段名__year=2022) 数据表名.objects.filter(字段名__iso_year=2022) 数据表名.objects.filter(字段名__month=2) 数据表名.objects.filter(字段名__day=10) 数据表名.objects.filter(字段名__week=52) 数据表名.objects.filter(字段名__week_day=1) 数据表名.objects.filter(字段名__iso_week_day=1) 数据表名.objects.filter(字段名__quarter=2) 数据表名.objects.filter(字段名__time=datetime.time(14, 30)) 数据表名.objects.filter(字段名__hour=22) 数据表名.objects.filter(字段名__minute=59) 数据表名.objects.filter(字段名__second=59) 数据表名.objects.filter(字段名__startswith=”查询内容“) 数据表名.objects.filter(字段名__istartswith=”查询内容“) 数据表名.objects.filter(字段名__endswith=”查询内容“) 数据表名.objects.filter(字段名__iendswith=”查询内容“) 匹配开头/结尾检索 数据表名.objects.filter(字段名__regex=”查询内容“) 数据表名.objects.filter(字段名__iregex=”查询内容“) 正则表达式查询 数据表名.objects.filter(字段名__isnull=布尔值) 数据null检索 exclude方法 exclude 的用法和 filter 基本相同，此处省略。 Django的链式查询 两种参数形成链式查询 公式 备注 数据表名.objects.filter(字段名__year__gte=年份数字) 日期时间查询支持串接比较参数 两种方法形成链式查询 公式 备注 数据表名.objects.filter(字段1__contains=”查询1“).exclude(字段2=”查询2“) 链式查询（支持多个 filter/exclude串接） 参考文献 涂伟忠.Django QuerySet API[EB/OL].https://code.ziqiangxuetang.com/django, 2022/02/12. 涂伟忠.Django QuerySet 进阶[EB/OL].https://code.ziqiangxuetang.com/django, 2022/02/12. 菜鸟教程.Django 模型[EB/OL].https://www.runoob.com/django/django-model.html, 2022/02/12. Django Software Foundation.QuerySet API reference[EB/OL].https://docs.djangoproject.com/en/dev/ref/models/querysets/, 2022/02/12. Django Software Foundation.Model field reference[EB/OL].https://docs.djangoproject.com/en/2.2/ref/models/fields/, 2022/02/12.","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"查询","slug":"查询","permalink":"https://faradays-studio.gitee.io/tags/%E6%9F%A5%E8%AF%A2/"},{"name":"Django","slug":"Django","permalink":"https://faradays-studio.gitee.io/tags/Django/"},{"name":"all","slug":"all","permalink":"https://faradays-studio.gitee.io/tags/all/"},{"name":"filter","slug":"filter","permalink":"https://faradays-studio.gitee.io/tags/filter/"},{"name":"exclude","slug":"exclude","permalink":"https://faradays-studio.gitee.io/tags/exclude/"},{"name":"数据库","slug":"数据库","permalink":"https://faradays-studio.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}]},{"title":"用词云图探析设备故障的分布与频率等特性","slug":"用词云图探析设备故障的分布与频率等特性","date":"2021-10-07T10:56:08.000Z","updated":"2022-02-12T04:44:19.524Z","comments":true,"path":"202110071856/","link":"","permalink":"https://faradays-studio.gitee.io/202110071856/","excerpt":"","text":"近 2 年多来，在系统精益化治理中，通过对设备故障文本的词频及分布规律缝隙，以及深耕多年的系统认识，做了一些比较复杂的系统改造工作，取得了一些别人没有实现的业绩。 不过，在业绩展示时，多数人员一看数据就翻过去，看都不看一样，囧！因此，用词云图来展示业绩是非常必要的。这里用自己的案例来做个演示。 导入函数库# -*- coding: utf-8 -*- import numpy as np # numpy数据处理库 import pandas as pd import codecs import re # 正则表达式库 import jieba # 结巴分词 import jieba.posseg # 词性获取 import jieba.analyse # 设置时间变量，便于对存储的文件进行版本管理 import time import datetime 对相关文本内容进行分词处理本案例以某一文件的特定列内容进行分词处理为例；但在实际工作中，则可能是上千个包含5w+的文件，由于一般的办公电脑内存都不超过 4GB ，加载太多文件就需要考虑内存优化等一系列问题了，否则系统崩溃不说，还丢了中间版本的成果。网友说，一般地，pandas一次处理的文件不建议大于 100MB，特别是不建议大于 1GB。因此，内存管理、版本管理、数据清洗等复杂的操作，这里就不展开了。 这里演示的日志文件为 txt 格式，读取特定列内容进行分词，并连同原始数据一并保存为 csv 格式（方便调试过程中比对分词是否正确等）。 # 记录开始时间 tx1 = time.time() tx2 = str(int(round(tx1 * 1000))) # 时间戳字符串 # 开启并行分词模式（仅支持非 Windows 系统），参数为并行进程数 jieba.enable_parallel(3) # 设定自定义词语组合 jieba.load_userdict(&quot;jieba_segmenter_dict.txt&quot;) # 读取停用词数据（包括去除：区域名、常用调节词、无意义的编号/特殊符号等） stopwords = pd.read_csv(&#39;jieba_stopword_dict.txt&#39;, encoding=&#39;utf8&#39;, names=[&#39;stopword&#39;], index_col=False) # 转化停用词列表 stop_list = stopwords[&#39;stopword&#39;].tolist() # TXT文件特征：事先已由 ANSI 转换为 UTF-8 格式,分隔符是 \\t，默认无标题 # 加载TXT文件（header=None, names 表示添加标题、数量与 tab 数量相当；设置index_col=0避免首列被当做索引）；read_table、read_csv 等效 f1=pd.read_csv(&#39;./EventTxt/EVENT20200627.txt&#39;, sep=&#39;\\t&#39;, encoding=&#39;utf_8_sig&#39;, \\ index_col=0, header=None, \\ names=[&#39;序号&#39;,&#39;时间&#39;,&#39;路径&#39;,&#39;描述&#39;,&#39;操作信息&#39;,&#39;补充信息&#39;,&#39;主机&#39;,&#39;备注&#39;]) # 生成分词 f1[&#39;分词&#39;] = f1[&#39;描述&#39;].apply(lambda x : [i for i in jieba.cut(x) if i not in stop_list]) # 去除停用词 # print(stop_list[10]) # 保存处理后的文件 f1.to_csv(&quot;./t4-EventCsv/t4_&quot; + str(count) + &quot;_&quot; + EVENT20200627 + &quot;.csv&quot;, encoding=&#39;utf_8_sig&#39;) # 显示行列数量 rowNum=f1.shape[0] #不包括表头 colNum=f1.columns.size print(&quot;\\n表&quot; + str(count-1) + &quot;\\t&quot; +str(rowNum) + &quot; 行\\t&quot; + str(colNum)+ &quot; 列&quot;) # 抽样查看数据情况 print(f1[&#39;分词&#39;].loc[20]) # 显示耗时时间 tx3 = time.time() tm_cost = tx3 - tx1 print(&#39;&#123;:.2f&#125;&#39;.format(tm_cost) + &quot; s.&quot;) # str(round(tm_cost,3)) 上述涉及的分词、停用词字典内容暂时不分享，因为相关论文还没有发表，得等到论文发表了再公开吧。毕竟做词云图并不复杂，复杂的是数据如何清洗、权重识别等等，这绝对是考验基层工作经验的。毫无疑问，那些比我会编程的厂家，为啥做不了我做的技改，最核心一点，就是因为我拥有他们从未拥有过的大量实际生产数据！ 词频分析 导入相应的函数库 from PIL import Image # 图像处理库 import matplotlib.pyplot as plt # 图像展示库（这里以plt代表库的全称） from wordcloud import WordCloud # 词云展示库 from imageio import imread import collections # 词频统计库 import ast # 解决 pandas 读取的列的内容需要转换为 子列表的问题 # 重复调用 import time import pandas as pd 进行词频分析 tx4 = time.time() # 时间戳，计算耗时情况 tx4s = str(int(round(tx4 * 1000))) # 时间戳字符串，文件标记，版本管理用 # 读入表格第 8 列(首行为标题)，得到 DataFrame fq1 = pd.read_csv(&#39;./t4-EventCsv/t4_1_EVENT20200628.csv&#39;, header=0, usecols=[8]) # print(fq1.dtypes) # 将所有的分词合并 words = [] for content in fq1[&#39;分词&#39;]: words.extend(ast.literal_eval(content)) # 字符转列表，然后列表追加到新列表末尾 # 对汇总后的分词进行词频统计 fq2 = pd.DataFrame(words, columns=[&#39;分词汇总&#39;]) result = pd.value_counts(fq2[&#39;分词汇总&#39;]) result.head(20) # 不指明参数显示前 5 行，否则按指定参数显示 # 创建词频文件 result.to_csv(&quot;./t4-WordCloud/t4_wordcloud_&quot; + tx4s + &quot;_1_input.txt&quot;, header=0) print(&quot;词频分析文件已保存。&quot;) 词云图绘制 上传相关的资源文件到代码可以访问的目录 背景图 China-map.jpg，去国家统计局官网下载的。字体文件 simhei.ttf，在 Windows 系统目录中拷贝出来的。 词云图绘制 # 背景图 bg1=imread(&quot;../resource/China-map.jpg&quot;) # 读取词频文件 with open(&quot;./t4-WordCloud/t4_wordcloud_&quot; + tx4s + &quot;_1_input.txt&quot;,&quot;r&quot;) as file: txt=file.read() # 生成词云 wc_pic1=WordCloud(background_color=&quot;white&quot;,font_path=&#39;../resource/simhei.ttf&#39;,width=1800,height=1500,mask=bg1).generate(txt) # 保存词云图到本地 wc_pic1.to_file(&#39;./t4-WordCloud/t4_wordcloud_&#39; + tx4s + &#39;_2_output.png&#39;) print(&quot;词云图片文件已保存。&quot;) # 使用plt库显示图片 plt.imshow(wc_pic1) plt.axis(&quot;off&quot;) plt.show() # 显示耗时时间 tx5 = time.time() tm_cost = tx5 - tx4 print(str(round(tm_cost,3)) + &quot; s.&quot;) 最终效果如下： 上仅做效果演示用，并非笔者的技改项目的最终成果；但未经许可，请勿使用，谢谢！","categories":[{"name":"工作中的魔法","slug":"工作中的魔法","permalink":"https://faradays-studio.gitee.io/categories/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%AD%94%E6%B3%95/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://faradays-studio.gitee.io/tags/Python/"},{"name":"WordCloud","slug":"WordCloud","permalink":"https://faradays-studio.gitee.io/tags/WordCloud/"},{"name":"词云图","slug":"词云图","permalink":"https://faradays-studio.gitee.io/tags/%E8%AF%8D%E4%BA%91%E5%9B%BE/"},{"name":"pandas","slug":"pandas","permalink":"https://faradays-studio.gitee.io/tags/pandas/"},{"name":"Jieba","slug":"Jieba","permalink":"https://faradays-studio.gitee.io/tags/Jieba/"},{"name":"词频","slug":"词频","permalink":"https://faradays-studio.gitee.io/tags/%E8%AF%8D%E9%A2%91/"},{"name":"分词","slug":"分词","permalink":"https://faradays-studio.gitee.io/tags/%E5%88%86%E8%AF%8D/"}]},{"title":"一种软件著作权代码合并的批处理脚本","slug":"一种软著代码合并的批处理脚本","date":"2021-10-01T02:09:39.000Z","updated":"2022-02-12T04:44:25.543Z","comments":true,"path":"202110011009/","link":"","permalink":"https://faradays-studio.gitee.io/202110011009/","excerpt":"","text":"最近在忙着工作上的事情，很长一段时间没有写过文章了。前几周申请了一项软件著作权，涉及到代码需要合并的事情，要求前1500行 + 后1500行组成鉴定材料。因此我花了一点时间写了一个批处理的脚本，如下： REM 指定需要处理的文件类型 set /p file_filter=&quot;输入代码文件扩展名，空格分隔，如 *.aspx *.cs *.js *.css *.master *.config *.asax &quot; IF not defined file_filter set file_filter=*.aspx *.cs hhj.js *.master REM 指定输出文件 SET current_date=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2% :: 0 点是出现兼容性问题（时的第一位不会补零） SET current_date=%date:~0,4%%date:~5,2%%date:~8,2%.%time:~3,2%%time:~6,2% set output_file=_codes-%current_date%-%computername%.txt set file_list=_files-%current_date%-%computername%.txt REM 指定代码目录，并切换过去（使用 /d 参数） set /p src_dir=&quot;输入代码根目录，如 I:\\VirtualBox\\vb_share\\WebSites\\Sis-1.0 ：&quot; :: 设定初始值，不能带双引号 IF &quot;%src_dir%&quot;==&quot;&quot; set src_dir=I:\\VirtualBox\\vb_share\\WebSites\\Sis-1.0 :: 跨驱动器切换路径 cd /d &quot;%src_dir%&quot; REM 先清空文件，然后后将代码目录中的所有相关文件导入 :: 首个代码文件 set /p first_file=&quot;输入首个代码文件的相对路径，不区分大小写（如 Default.aspx ）： &quot; :: 设定初始值，不能带双引号 IF &quot;%first_file%&quot;==&quot;&quot; set first_file=Default.aspx :: 添加根目录 set first_file=%src_dir%\\%first_file% :: 不需要双引号扩住，否则会原样输出双引号；末尾也不能添加空格，否则也原样输出 echo %first_file% &gt; %file_list% :: 将首个代码文件内容添加到目标文件中 echo.&gt; %output_file% type %first_file%&gt;&gt; %output_file% :: 合并当前路径中的代码 for /F %%i in (&#39;dir /b/s/a:-d %file_filter%&#39;) do ( :: 追加代码文本内容（比较可以使用 equ 或 == 符号，i 参数表示不区分大小写） IF /i &quot;%%i&quot;==&quot;%first_file%&quot; ( :: 首个代码文件（切记，括号中不允许只有一个语句、且不支持使用语句与注释交差，即只能第一行为注释！） echo.&gt;&gt; %output_file% echo.&gt;&gt; %output_file% echo.&gt;&gt; %file_list% ) ELSE ( :: 写入文件清单 echo %%i&gt;&gt; %file_list% :: 其他代码文件 echo.&gt;&gt; %output_file% type %%i &gt;&gt; %output_file% ) ) echo finish！ REM 打开目标文件夹，以便直接拷贝合成文本 start explorer %src_dir% ::pause 上述代码是按 ASP.NET 来选择代码文件的，在实际应用时 file_filter 的具体值应该根据你的代码文件的扩展名来设定。","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://faradays-studio.gitee.io/tags/Windows/"},{"name":"批处理","slug":"批处理","permalink":"https://faradays-studio.gitee.io/tags/%E6%89%B9%E5%A4%84%E7%90%86/"},{"name":"bat","slug":"bat","permalink":"https://faradays-studio.gitee.io/tags/bat/"},{"name":"脚本","slug":"脚本","permalink":"https://faradays-studio.gitee.io/tags/%E8%84%9A%E6%9C%AC/"},{"name":"软著","slug":"软著","permalink":"https://faradays-studio.gitee.io/tags/%E8%BD%AF%E8%91%97/"},{"name":"代码","slug":"代码","permalink":"https://faradays-studio.gitee.io/tags/%E4%BB%A3%E7%A0%81/"}]},{"title":"用 bash 对 Solaris 远程访问 IP 进行限制","slug":"Solaris远程访问IP限制方法","date":"2021-08-25T11:58:25.000Z","updated":"2022-02-12T04:44:31.648Z","comments":true,"path":"202108251958/","link":"","permalink":"https://faradays-studio.gitee.io/202108251958/","excerpt":"","text":"本来想在网上找一个可以限制远程 IP 访问的脚本，结果一个都不能用；因此，花了几天一边改脚本，一边看 Oracle 的官网手册，最后测试通过了！ 代码示例#!/usr/bin/bash # 执行 bash /etc/block_ssh.sh # # TO-DO # # 1.0.1 8/19 21:49 # # 1.0.0 2021/08/01 22:24:48-2021/08/01 22:37:30 # 根据 /etc/block_ssh.csh 改编，相应日志文件为 # tail -f /var/adm/messages # tail -f /var/log/alarm_`hostname`.log # tail -f /usr/tmp/remote.log # 获取 tty 值 tmn=`who am i | awk &#39;&#123;print $2;&#125;&#39;` # 获取当前 IP # who am i| awk &#39;&#123;print $2,$6;&#125;&#39; #login_ip=`finger |grep $tmn | awk &#39;&#123;print $6;&#125;&#39;` login_ip=` who -um | awk &#39;&#123;print $8;&#125;&#39; | sed -e &#39;s/(//g; s/)//g&#39; ` # bash 去除前缀 $&#123;login_ip#*(&#125; 和后缀 $&#123;login_ip%*)&#125; echo $login_ip # 获取当前 PID 值 login_pid=`who -um | awk &#39;&#123;print $7;&#125;&#39;` login_name=`echo $LOGNAME` if [ &quot;$login_ip&quot; = &quot;&quot; -o &quot;$login_ip&quot; = &quot;:0&quot; -o &quot;$login_ip&quot; = &quot;:0.0&quot; ]; then type_x=&quot;local&quot; else type_x=&quot;remote&quot; fi # chmod 622 /usr/tmp/remote.log echo -e &quot;`date +%Y-%m-%d\\ %H:%M:%S` \\t $login_name \\t $login_ip&quot; &gt;&gt; /usr/tmp/remote.log echo $type_x trap 1 2 3 9 15 if [ &quot;$type_x&quot; = &quot;local&quot; -o &quot;$login_ip&quot; = &quot;10.0.2.2&quot; ]; then echo &quot; Welcome......&quot; logger -p user.info &quot;Someone has logined in: $login_ip \\!&quot; else echo &quot; Warning&quot; # 需要转义：英文叹号 logger -i -p user.err -t SSH &quot;Remote IP is login: $login_ip \\!&quot; logger -ip user.alert &quot;Unauthorized remote IP is login: $login_ip \\!&quot; #logger -p user.warning &#39;Unknown IP is login&#39; # 测试表明，上述报警同时在 系统日志和用户日志中存储 # kill remote ssh link pkill -9 -t $tmn #kill -9 $login_pid fi 姊妹篇 用 csh 对 Solaris 远程访问 IP 进行限制","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"bash","slug":"bash","permalink":"https://faradays-studio.gitee.io/tags/bash/"},{"name":"Solaris","slug":"Solaris","permalink":"https://faradays-studio.gitee.io/tags/Solaris/"},{"name":"IP","slug":"IP","permalink":"https://faradays-studio.gitee.io/tags/IP/"},{"name":"远程","slug":"远程","permalink":"https://faradays-studio.gitee.io/tags/%E8%BF%9C%E7%A8%8B/"},{"name":"限制","slug":"限制","permalink":"https://faradays-studio.gitee.io/tags/%E9%99%90%E5%88%B6/"}]},{"title":"中国专利信息的查询方法","slug":"中国专利信息的查询方法","date":"2021-08-08T14:50:18.000Z","updated":"2022-02-12T04:44:37.679Z","comments":true,"path":"202108082250/","link":"","permalink":"https://faradays-studio.gitee.io/202108082250/","excerpt":"","text":"最近，由于工作的需要，委托代理公司开展专利申报工作；可是又很关心专利申报流程执行得怎么样了，因此就学习一下如何查询专利。 首先，在 http://cpquery.cnipa.gov.cn/ 网站上注册一个账户（注册公众查询账户就行；我考虑到以后工作的需要，申请了电子申请账户，它也具有公众查询功能） 登陆系统后，输入相关信息就可以查询专利喽！（当然，系统很奇葩，专利号中的点号需要删除；如 202110465388.2 的查询值为 2021104653882 ） 上述系统也可以申请专利，不过很多单位都是委托第三方去处理，也许流程太复杂了吧。 从专利检索的角度来说，使用 http://www.soopat.com/Home/Index 来检索更为便利一些，毕竟，很多时候，你不知道你要找到的是什么专利！ 悄悄地告诉你，如果需要下载专利，可以从这里下载 https://www.drugfuture.com/cnpat/cn_patent.asp 或者 https://www.patent9.com/ 。","categories":[{"name":"办事指南","slug":"办事指南","permalink":"https://faradays-studio.gitee.io/categories/%E5%8A%9E%E4%BA%8B%E6%8C%87%E5%8D%97/"}],"tags":[{"name":"专利","slug":"专利","permalink":"https://faradays-studio.gitee.io/tags/%E4%B8%93%E5%88%A9/"},{"name":"查询","slug":"查询","permalink":"https://faradays-studio.gitee.io/tags/%E6%9F%A5%E8%AF%A2/"},{"name":"方法","slug":"方法","permalink":"https://faradays-studio.gitee.io/tags/%E6%96%B9%E6%B3%95/"}]},{"title":"google-authenticator 双因子验证","slug":"google-authenticator-双因子验证","date":"2021-07-31T12:39:26.000Z","updated":"2021-07-31T14:51:50.330Z","comments":true,"path":"202107312039/","link":"","permalink":"https://faradays-studio.gitee.io/202107312039/","excerpt":"","text":"日常工作中，经常有人问系统开启双因子验证没有；奈何人穷志短，从网上看到 google-authenticator 支持免费的双因子验证，只要电脑端安装和配置 google-authenticator，就可以通过手机端安装的 Google 身份验证器提供相应的验证码来校验登录访问行为。 程序安装 yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm yum list google-auth* yum -y install google-authenticator vim /etc/pam.d/sshd # auth required pam_sepermit.so auth required pam_google_authenticator.so vim /etc/ssh/sshd_config ChallengeResponseAuthentication yes # ChallengeResponseAuthentication no UsePAM yes AuthenticationMethods publickey,password publickey,keyboard-interactive 账户验证码功能的配置 生成 root 账户验证码 [root@hhjos6 herc]# google-authenticator https://www.google.com/chart?chs=200x200&amp;chld=M|0&amp;cht=qr&amp;chl=otpauth://totp/root@hhjos6%3Fsecret%3D… Your new secret key is: 此处省略若干字符 Do you want me to update your “~/.google_authenticator” file (y/n) y Do you want to disallow multiple uses of the same authentication token? This restricts you to one login about every 30s, but it increases your chances to notice or even prevent man-in-the-middle attacks (y/n) y By default, tokens are good for 30 seconds and in order to compensate for possible time-skew between the client and the server, we allow an extra token before and after the current time. If you experience problems with poor time synchronization, you can increase the window from its default size of 1:30min to about 4min. Do you want to do so (y/n) y If the computer that you are logging into isn’t hardened against brute-force login attempts, you can enable rate-limiting for the authentication module. By default, this limits attackers to no more than 3 login attempts every 30s. Do you want to enable rate-limiting (y/n) y [root@hhjos6 herc]# 生成 herc 账户验证码 hhjos6:/home/herc&gt; google-authenticator https://www.google.com/chart?chs=200x200&amp;chld=M|0&amp;cht=qr&amp;chl=otpauth://totp/herc@hhjos6%3Fsecret%… Your new secret key is: 此处省略若干字符 ​ Do you want me to update your “/home/username/.google_authenticator” file (y/n) y ​ (是否重新生成登录配置文件？) ​ Do you want to disallow multiple uses of the same authentication ​ token? This restricts you to one login about every 30s, but it increases ​ your chances to notice or even prevent man-in-the-middle attacks (y/n) y ​ (是否拒绝多次重复使用相同的令牌？这将限制你每30s仅能登录一次，但会提醒/阻止中间人攻击。) ​ ​ By default, tokens are good for 30 seconds and in order to compensate for ​ possible time-skew between the client and the server, we allow an extra ​ token before and after the current time. If you experience problems with poor ​ time synchronization, you can increase the window from its default ​ size of 1:30min to about 4min. Do you want to do so (y/n) n ​ (是否将窗口时间由1分30秒增加到约4分钟？这将缓解时间同步问题。) ​ ​ If the computer that you are logging into is not hardened against brute-force ​ login attempts, you can enable rate-limiting for the authentication module. ​ By default, this limits attackers to no more than 3 login attempts every 30s. ​ Do you want to enable rate-limiting (y/n) y ​ (是否启用此模块的登录频率限制，登录者将会被限制为最多在30秒内登录3次。) ​ hhjos6:/home/herc&gt; 注意事项 配置问题排查： tail -40f /var/log/secure 输入android 客户端的验证码（注意控制时间）后，再输入账户密码即可登录。 重启进程生效service sshd restart","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"安装","slug":"安装","permalink":"https://faradays-studio.gitee.io/tags/%E5%AE%89%E8%A3%85/"},{"name":"配置","slug":"配置","permalink":"https://faradays-studio.gitee.io/tags/%E9%85%8D%E7%BD%AE/"},{"name":"authenticator","slug":"authenticator","permalink":"https://faradays-studio.gitee.io/tags/authenticator/"},{"name":"google","slug":"google","permalink":"https://faradays-studio.gitee.io/tags/google/"},{"name":"双因子","slug":"双因子","permalink":"https://faradays-studio.gitee.io/tags/%E5%8F%8C%E5%9B%A0%E5%AD%90/"},{"name":"网络安全","slug":"网络安全","permalink":"https://faradays-studio.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}]},{"title":"tmux 的编译安装","slug":"tmux-在-Linux-中的编译安装","date":"2021-06-28T11:24:26.000Z","updated":"2021-06-28T11:26:22.086Z","comments":true,"path":"202106281924/","link":"","permalink":"https://faradays-studio.gitee.io/202106281924/","excerpt":"","text":"正常情况下，直接使用 yum install tmux 即可完成安装。 安装支持环境 yum -y install libtermcap-devel ncurses-devel libevent-devel readline-devel # tmux depends on libevent 2.x(系统安装的版本为 1.4.13) git clone https://gitee.com/mirrors/libevent.git cd libevent ./configure make make verify # (optional) make install 下载源码 cd /home/common git clone https://gitee.com/mirrors/tmux.git #git clone https://github.com/tmux/tmux.git 编译安装 cd tmux sh autogen.sh ./configure make make install","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"安装","slug":"安装","permalink":"https://faradays-studio.gitee.io/tags/%E5%AE%89%E8%A3%85/"},{"name":"编译","slug":"编译","permalink":"https://faradays-studio.gitee.io/tags/%E7%BC%96%E8%AF%91/"},{"name":"tmux","slug":"tmux","permalink":"https://faradays-studio.gitee.io/tags/tmux/"}]},{"title":"aria2 的安装与配置","slug":"aria2-的安装与配置","date":"2021-06-13T12:11:05.000Z","updated":"2021-06-13T12:13:11.980Z","comments":true,"path":"202106132011/","link":"","permalink":"https://faradays-studio.gitee.io/202106132011/","excerpt":"","text":"下载（安装 aria2 程序包（下载器）：aria2 is a lightweight multi-protocol &amp; multi-source, cross platform download utility operated in command-line. It supports HTTP/HTTPS, FTP, BitTorrent and Metalink ） cd /usr/local/src git clone https://gitee.com/mirrors/aria2.git 安装 gettext 依赖包（不成功，暂时不开展） su cd /home/common wget https://mirrors.aliyun.com/gnu/gettext/gettext-0.18.3.2.tar.gz tar -zxvf gettext-0.18.3.2.tar.gz cd gettext-0.18.3.2 ./configure make -j4 # could not find libjava.so # Could not find Java SE Runtime Environment. make install ln /usr/local/bin/xgettext /bin/xgettext ln /usr/local/bin/msguniq /bin/msguniq ln /usr/local/bin/msgmerge /bin/msgmerge 编译安装 autoreconf -i ./configure #./configure ARIA2_STATIC=yes make","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"安装","slug":"安装","permalink":"https://faradays-studio.gitee.io/tags/%E5%AE%89%E8%A3%85/"},{"name":"配置","slug":"配置","permalink":"https://faradays-studio.gitee.io/tags/%E9%85%8D%E7%BD%AE/"},{"name":"aria2","slug":"aria2","permalink":"https://faradays-studio.gitee.io/tags/aria2/"}]},{"title":"fzf 的安装与配置","slug":"fzf-的安装与配置","date":"2021-06-07T15:38:59.000Z","updated":"2021-06-07T15:46:59.026Z","comments":true,"path":"202106072338/","link":"","permalink":"https://faradays-studio.gitee.io/202106072338/","excerpt":"","text":"安装与配置 安装 fzf （https://github.com/junegunn/fzf，输入模糊的关键词来定位文件或文件；**源代码就是安装程序**，因此需要选择好路径） su cd /usr/local git clone --depth 1 https://github.com/junegunn/fzf.git ./fzf/install 关联系统（默认会自动关联，可以添加到个人自定义的全局设置文件 vim /etc/profile.d/hhjos6.sh 中） # fzf if [[ ! &quot;$PATH&quot; == */usr/local/fzf/bin* ]]; then export PATH=&quot;$&#123;PATH:+$&#123;PATH&#125;:&#125;/usr/local/fzf/bin&quot; fi # Auto-completion [[ $- == *i* ]] &amp;&amp; source &quot;/usr/local/fzf/shell/completion.bash&quot; 2&gt; /dev/null # Key bindings source &quot;/usr/local/fzf/shell/key-bindings.bash&quot; # fzf 其实底层是调用的 Unix 系统 `find` 命令，也可以使用 fd 或 ag 来代替 # export FZF_DEFAULT_COMMAND=&quot;fd --exclude=&#123;.git,.idea,.vscode,.sass-cache,node_modules,build&#125; --type f&quot; export FZF_DEFAULT_COMMAND=&#39;ag --hidden --ignore .git -l -g &quot;&quot;&#39; # 界面展示 export FZF_DEFAULT_OPTS=&quot;--height 30% --layout=reverse --preview &#39;(highlight -O ansi &#123;&#125; || cat &#123;&#125;) 2&gt; /dev/null | head -100&#39;&quot; # 触发命令行补全(默认是 **，一般不用修改) # FZF_COMPLETION_TRIGGER ``` 更多用法见参考文献。 配置安装高亮插件 yum install highlight 配置到 vim # 裸装 cp /usr/local/fzf/plugin/fzf.vim /usr/share/vim/vim74/plugin vim /etc/vimrc set rtp+=/usr/local/fzf/ # 基于 vim-plug 插件系统 Plug &#39;/usr/local/fzf/bin/fzf&#39; Plug &#39;/usr/local/fzf/plugin/fzf.vim&#39; 参考文献 junegunn.fzf - a command-line fuzzy finder[EB/OL].https://github.com/junegunn/fzf, 2021/03/03. Ein Verne.每天学习一个命令：fzf 使用笔记[EB/OL].http://einverne.github.io/post/2019/08/fzf-usage.html, 2021/03/03.","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"安装","slug":"安装","permalink":"https://faradays-studio.gitee.io/tags/%E5%AE%89%E8%A3%85/"},{"name":"配置","slug":"配置","permalink":"https://faradays-studio.gitee.io/tags/%E9%85%8D%E7%BD%AE/"},{"name":"fzf","slug":"fzf","permalink":"https://faradays-studio.gitee.io/tags/fzf/"}]},{"title":"ag 的安装与配置","slug":"ag-的安装与配置","date":"2021-04-30T11:29:34.000Z","updated":"2021-04-30T11:31:08.962Z","comments":true,"path":"202104301929/","link":"","permalink":"https://faradays-studio.gitee.io/202104301929/","excerpt":"","text":"ag （https://github.com/ggreer/the_silver_searcher）比grep、ack更快的递归搜索文件内容（速度对比：`ag`&gt;`ack`&gt;`grep`） # centos 6+（epel） yum install the_silver_searcher 安装到 vim 安装 cd /usr/share/vim/vim74/plugin #cd ~/.vim/plugin git clone https://github.com/rking/ag.vim ag 全局配置 vim /etc/vimrc &quot; 自动缩进 set autoindent &quot; ag 插件（请注意：默认为全局搜索，因此必须指明文件路径，不过支持正则表达式） set runtimepath^=/usr/share/vim/vim74/plugin/ag.vim let g:ag_prg=&quot;/usr/bin/ag --vimgrep&quot; let g:ag_working_path_mode=&quot;r&quot;","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"安装","slug":"安装","permalink":"https://faradays-studio.gitee.io/tags/%E5%AE%89%E8%A3%85/"},{"name":"配置","slug":"配置","permalink":"https://faradays-studio.gitee.io/tags/%E9%85%8D%E7%BD%AE/"},{"name":"ag","slug":"ag","permalink":"https://faradays-studio.gitee.io/tags/ag/"}]},{"title":"zsh 环境的安装与配置","slug":"zsh环境的安装与配置","date":"2021-04-17T11:31:02.000Z","updated":"2021-04-30T11:24:48.101Z","comments":true,"path":"202104171931/","link":"","permalink":"https://faradays-studio.gitee.io/202104171931/","excerpt":"","text":"zsh 在 Linux 系统中是自带的，因此不这里并没有讨论 zsh 自身的安装方法，而是 zsh 插件的安装与配置方法。 zsh 的常用快捷键 虽然网络上都宣称 zsh 和 bash 高度解决，不过我个人的理解，bash 的部分快捷键和 csh 倒是比较接近，而 zsh 并不接近。 项目 zsh bash 备注 光标移动到行首 Ctrl + A Home 光标移动到行尾 Ctrl + E End 光标后的字符串变为大写 Alt + U 当前字符串大写 Alt + C 光标后的字符串变为小写 Alt + L 删除光标后的所有字符 Clt + K 删除光标前的所有字符 Clt + H Clt + U Ctrl + U 对 bash 来说是删除光标前的字符，而 zsh 是整行删除。 删除光标前的一个单词 Ctrl + W 删除光标后的一个单词 Alt + D 删除光标当前的一个字符 Ctrl + D CTRL + R: 搜索历史 插件的安装与配置 安装 zsh-syntax-highlighting 语法提示插件（当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮） su - herc cd ~/.zsh git clone git://github.com/zsh-users/zsh-syntax-highlighting.git vim .zshrc source /home/herc/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 安装 zsh-autosuggestions 命令历史自动提示插件 zsh su - herc cd ~/.zsh mkdir .zsh cd .zsh bash --version zsh --version git clone https://github.com/zsh-users/zsh-autosuggestions source zsh-autosuggestions/zsh-autosuggestions.zsh #完成该步骤后，即可对历史输入命令进行自动语法提示。 # 如果存在过多参数时，仍然可以使用 tab 强制提示。 # 系统内置的命令，如 tar 不能提示参数，不过 yum 可以提示参数、ls 需要强制 tab 才能提示参数 安装 incr 系统目录自动提示插件 su - herc cd ~/.zsh wget https://mimosa-pudica.net/src/incr-0.2.zsh source incr*.zsh # 当前有效，配置到~/.zshrc则用户一直有效（ 使用时将自动以绿色表示提示词） # 不过按回车就会输入绿色部分，网友说可以使用空格隔断或 delete 键删除，测试无效；建议使用 Ctrl + K 删除末尾后回车！","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"安装","slug":"安装","permalink":"https://faradays-studio.gitee.io/tags/%E5%AE%89%E8%A3%85/"},{"name":"配置","slug":"配置","permalink":"https://faradays-studio.gitee.io/tags/%E9%85%8D%E7%BD%AE/"},{"name":"zsh","slug":"zsh","permalink":"https://faradays-studio.gitee.io/tags/zsh/"}]},{"title":"Powerline 插件的安装与配置","slug":"Powerline插件的安装与配置","date":"2021-04-10T14:07:19.000Z","updated":"2021-04-17T11:31:26.493Z","comments":true,"path":"202104102207/","link":"","permalink":"https://faradays-studio.gitee.io/202104102207/","excerpt":"","text":"Powerline 的安装 安装 Powerline Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, fish, tmux, IPython, Awesome, i3 and Qtile. 进阶版本：https://github.com/b-ryan/powerline-shell A beautiful and useful prompt generator for Bash, ZSH, Fish, and tcsh pip3 install wheel powerline-status #或 pip3 install git+git://github.com/powerline/powerline # pip3 install git+git://gitee.com/mirrors/Powerline # 确认包路径 pip3 show powerline-status # /usr/local/python3/lib/python3.8/site-packages # 查看支持的终端 ls /usr/local/python3/lib/python3.8/site-packages/powerline/bindings/ # awesome bar bash config.py fish i3 ipython lemonbar pdb qtile rc shell tcsh tmux vim wm zsh # 查看本地配置 gedit /usr/local/python3/lib/python3.8/site-packages/powerline/config_files/config.json 安装配套字体，并修改终端界面的显示字体（才会生效） #git clone https://github.com/powerline/fonts.git --depth=1 git clone https://gitee.com/efluent/fonts.git --depth=1 # install cd fonts ./install.sh # 在相应的账户下安装，就安装到响应账户的文件夹中 /root/.local/share/fonts /home/herc/.local/share/fonts cp -pr fonts/ /usr/share/fonts/powerline cd .. rm -rf fonts 以下方法测试未成功，原因不明 #安装字体 # cd /usr/share/fonts/SourceCodePro # chmod +x *.otf cp -pr SourceCodePro/ /usr/share/fonts cd /usr/share/fonts wget https://github.com/powerline/powerline/blob/develop/font/PowerlineSymbols.otf chmod +x PowerlineSymbols.otf # 下述方法无效 #cd /etc/fonts/conf.d/ #wget https://github.com/powerline/powerline/blob/develop/font/10-powerline-symbols.conf #wget https://github.com/justrajdeep/fonts/blob/master/10-powerline-symbols.conf mkdir -p ~/.config/fontconfig/conf.d cd ~/.config/fontconfig/conf.d wget https://github.com/powerline/fonts/blob/master/fontconfig/50-enable-terminess-powerline.conf # 在各个用户下执行 fc-cache -fv 查看字体 # 查看中文字体清单 fc-list :lang=zh # 终端字体保存在 find / -name consolefonts cd /lib/kbd/consolefonts setfont -h centos 6安装中文字体（不含文泉驿） yum install bitmap-fonts bitmap-fonts-cjk Powerline 的配置 确认 Python 已关联到系统的各个 shell # 添加到 Python 程序到系统中 #ln -s /usr/local/python3/bin/powerline /usr/local/bin #ln -s /usr/local/python3/bin/powerline-config /usr/local/bin #ln -s /usr/local/python3/bin/powerline-daemon /usr/local/bin echo &#39;export PATH=$PATH:/usr/local/python3/bin&#39; &gt;&gt; /etc/profile echo &#39;export PATH=$PATH:/usr/local/python3/bin&#39; &gt;&gt; /etc/zprofile bash开启 powerline（全局），参考 https://powerline.readthedocs.io/en/latest/usage/shell-prompts.html cd /usr/local/python3/lib/python3.8/site-packages/powerline gedit /etc/bashrc # 或 gedit /etc/profile.d/powerline.sh # powerline，hhj-20210220 export PATH=$PATH:/usr/local/python3/bin if [ -f &quot;`which powerline-daemon`&quot; ]; then powerline-daemon -q POWERLINE_BASH_CONTINUATION=1 POWERLINE_BASH_SELECT=1 . /usr/local/python3/lib/python3.8/site-packages/powerline/bindings/bash/powerline.sh fi . /etc/profile.d/powerline.sh # 当前用户生效 zsh 配置 powerline（全局） cd /usr/local/python3/lib/python3.8/site-packages/powerline/bindings/zsh/ cp /etc/profile.d/powerline.sh /etc/profile.d/powerline.zsh gedit /etc/profile.d/powerline.zsh # hhj-20210220 if [ -f &quot;`which powerline-daemon`&quot; ]; then powerline-daemon -q POWERLINE_BASH_CONTINUATION=1 POWERLINE_BASH_SELECT=1 . /usr/local/python3/lib/python3.8/site-packages/powerline/bindings/zsh/powerline.zsh fi . /etc/profile.d/powerline.zsh vim（全局配置） vim /etc/vimrc &quot; hhj-20210220 set rtp+=/usr/local/python3/lib/python3.8/site-packages/powerline/bindings/vim/ set laststatus=2 set t_Co=256 ipython 配置 gedit ~/.ipython/profile_default/ipython_config.py from powerline.bindings.ipython.since_5 import PowerlinePrompts c = get_config() c.TerminalInteractiveShell.simple_prompt = False c.TerminalInteractiveShell.prompts_class = PowerlinePrompts tmux 配置 gedit ~/.tmux.conf source &quot;/usr/local/python3/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf&quot; 解决不能显示git分支问题（未配置） mkdir -p ~/.config/powerline cat &lt;&lt;-&#39;EOF&#39; &gt; ~/.config/powerline/config.json &#123; &quot;ext&quot;: &#123; &quot;shell&quot;: &#123; &quot;theme&quot;: &quot;default_leftonly&quot; &#125; &#125; &#125; EOF powerline-daemon --replace csh 配置（不成功） gedit /etc/zprofile export PATH=&quot;$PATH:/usr/local/python3/bin&quot; . /usr/local/python3/lib/python3.8/site-packages/powerline/bindings/tcsh/powerline.tcsh 参考文献不记得了，之前安装的时候查阅了多个文档，改天补上来了！","categories":[],"tags":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/tags/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}]},{"title":"CentOS 6 编译安装 Python 3","slug":"CentOS6编译安装Python3","date":"2021-03-29T11:35:26.000Z","updated":"2021-04-10T14:13:44.441Z","comments":true,"path":"202103291935/","link":"","permalink":"https://faradays-studio.gitee.io/202103291935/","excerpt":"","text":"依赖包的安装 编译环境的安装（centos6 默认已具备） yum -y groupinstall &quot;Development tools&quot; 或 yum -y install gcc gcc-c++ zlib zlib-devel gcc-4.4.7-23 gcc-c++-4.4.7-23 zlib-devel-1.2.3-29 yum install -y openssl-devel yum install -y libffi-devel yum install gcc gcc-c++ glibc-static 编译安装 openssl wget http://www.openssl.org/source/openssl-1.1.1.tar.gz tar -zxvf openssl-1.1.1.tar.gz cd openssl-1.1.1 whereis openssl # 系统自带版本为 1.0.1e-fips # [root@hhjos6 lib]# whereis openssl # openssl: /usr/bin/openssl /usr/lib64/openssl /usr/include/openssl /usr/local/openssl /usr/share/man/man1/openssl.1ssl.gz mkdir /usr/local/openssl ./config --prefix=/usr/local/openssl shared zlib make &amp;&amp; make install echo -e &quot;\\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/openssl/lib&quot; &gt;&gt; /etc/profile source /etc/profile ln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/lib64/libssl.so.1.1 ln -s /usr/local/openssl/lib/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1 mv /usr/bin/openssl /usr/bin/openssl-1.0.1 ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl openssl version exit # 下个版本的说明 https://wiki.openssl.org/index.php/OpenSSL_3.0 程序的下载与编译 下载程序 mkdir -p /home/common/python3.8 &amp;&amp; cd /home/common/python3.8 #测试表明，Python 并没有限制 sqlite 版本；不过关闭 --enable-loadable-sqlite-extensions 或者 --enable-optimizations 均能编译通过（虽然同样的报错还在）。 wget https://www.python.org/ftp/python/3.8.7/Python-3.8.7.tgz 官方手册 https://docs.python.org/release/3.8.7 sqlite教程 https://docs.python.org/3.8/library/sqlite3.html tar -xzvf Python-3.8.7.tgz 配套修改组件的编译配置（https://docs.python.org/3.8/whatsnew/changelog.html#changelog 链接中指明了 Windows、MacOS 中集成的 sqlite 版本号，但是 Linux 的 Python 3 并没有继承 sqlite，因此需要如下配置 sqlite 库） # ModuleNotFoundError: No module named &#39;_sqlite3&#39; gedit /home/common/python3.8/Python-3.8.7/setup.py sqlite_inc_paths &#39;/usr/local/sqlite/include&#39;, &#39;/usr/local/sqlite/include/sqlite3&#39;, #undefined symbol: __gcov_indirect_call_profiler # cd /home/common/python3.8/Python-3.8.7 &amp;&amp; ./python -E -S -m sysconfig --generate-posix-vars # 报错信息同上 # 网友中有通过设置语言 编译 whereis python mkdir /usr/local/python3 cd /home/common/python3.8/Python-3.8.7 export CPPFLAGS=&quot; -Wno-error=coverage-mismatch&quot; # 可选 ./configure --prefix=/usr/local/python3 --with-openssl=/usr/local/openssl --enable-shared CFLAGS=-fPIC --enable-profiling --enable-loadable-sqlite-extensions #LD_RUN_PATH=/usr/local/lib ./configure --prefix=/usr/local/python3 --with-openssl=/usr/local/openssl --enable-shared CFLAGS=-fPIC --enable-optimizations --enable-profiling --enable-loadable-sqlite-extensions |grep -v &quot;yes&quot; LD_RUN_PATH=/usr/local/lib: 可选 --prefix 可把所有资源文件放在指定路径下，卸载软件或移植软件只需要对应的文件夹操作。 不指定的话，可执行文件默认放在/usr/local/bin，库文件默认放在/usr/local/lib， 配置文件默认放在/usr/local/etc，其它的资源文件放在/usr/local/share，比较凌乱 要卸载程序，也可以在原来的make目录下用一次make uninstall，但前提是make文件指定过uninstall，否则卸载要结合安装日志来进行逐一删除 --enable-optimizations 加上后性能有 10% 左右的优化，但会明显增加编译时间； 且 https://bugs.python.org/issue34112 提出 gcc 8.1 以下可能编译不过 --enable-shared CFLAGS=-fPIC 是使用 YCM、pyinstaller、caffe、mysqlclient 等一系列功能的需要(后者确保编译时使用相对路径) --enable-profiling：let you profile the interpreter with gprof --enable-loadable-sqlite-extensions：support loadable extensions in _sqlite module # 查看帮助 ./configure --help 或 ./configure -h # 在更改 ./configure 编译参数后必须清除生成的文件 make clean &amp;&amp; make distclean make -j4 #LD_RUN_PATH=/usr/local/lib make -j4 # 警告：‘/home/common/python3.8/Python-3.8.7/build/temp.linux-x86_64-3.8/home/common/python3.8/Python-3.8.7/Modules/resource.gcda’的版本是‘404R’，需要的版本‘408*’ [默认启用] cd /home/common/python3.8/Python-3.8.7/build/lib.linux-x86_64-3.8 ls |grep sqlite make install &gt; py3-install-`date +%Y%m%d`.log 关联系统 添加到系统 # 设置环境变量，也可以直接将 /usr/local/python3/bin 加入 /etc/profile 文件的环境变量 path 中 ln -s /usr/local/python3/bin/python3 /usr/bin/python3 # 考虑到 yum 必须使用 python 2 因此，不能命名为 python，切记！ ln -s /usr/local/python3/bin/python3 /usr/bin/py3 ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3 ln -s /usr/local/python3/bin/python3-config /usr/bin/python3-config cp /usr/local/python3/lib/libpython3.8.so.1.0 /usr/lib64 #/usr/local/python3/bin/python3.8: error while loading shared libraries: libpython3.8.so.1.0: cannot open shared object file: No such file or directory cd /usr/local/lib ln -s libpython3.8.so.1.0 libpython3.8.so cp /usr/local/python3/lib/libpython3.8.so.1.0 /usr/local/lib ldconfig -v python -V whereis python whereis python3 find / -name _sqlite*.so python3 import sqlite3 Ctrl+ D pip3 -V # pip 21.0 将在 2021 年 1 月释出，将停止支持 Python 2.7（Python 2.x） 系列 pip -V #python 2 修改 Python3环境变量 vi ~/.bash_profile 将“PATH=$PATH:$HOME/bin”修改为“PATH=$PATH:$HOME/bin:/usr/local/python3/bin” source ~/.bash_profile # 关闭报警 export PIP_DISABLE_PIP_VERSION_CHECK=1 修复Python2的关联 vi /usr/bin/yum vi /usr/bin/yum-config-manager vim /usr/libexec/urlgrabber-ext-down vi /usr/libexec/ibus-ui-gtk vi /usr/bin/ibus-setup vi /usr/libexec/ibus-engine-table vi /usr/bin/gnome-tweak-tool","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"CentOS","slug":"CentOS","permalink":"https://faradays-studio.gitee.io/tags/CentOS/"},{"name":"Python","slug":"Python","permalink":"https://faradays-studio.gitee.io/tags/Python/"},{"name":"安装","slug":"安装","permalink":"https://faradays-studio.gitee.io/tags/%E5%AE%89%E8%A3%85/"},{"name":"编译","slug":"编译","permalink":"https://faradays-studio.gitee.io/tags/%E7%BC%96%E8%AF%91/"},{"name":"sqlite","slug":"sqlite","permalink":"https://faradays-studio.gitee.io/tags/sqlite/"}]},{"title":"CentOS 6 编译安装 sqlite 3","slug":"CentOS6编译安装sqlite3","date":"2021-03-21T09:34:41.000Z","updated":"2021-03-21T09:39:58.790Z","comments":true,"path":"202103211734/","link":"","permalink":"https://faradays-studio.gitee.io/202103211734/","excerpt":"","text":"由于安装 Python 环境的需要，需要对 Python 进行编译安装。 安装编译环境先安装必要的环境，博主的系统中默认其实已经包含了 yum install sqlite-devel 编译安装cd /home/common/ wget https://www.sqlite.org/2020/sqlite-autoconf-3320300.tar.gz tar -xvzf sqlite-autoconf-3320300.tar.gz cd sqlite-autoconf-3320300/ mkdir -p /usr/local/sqlite ./configure --prefix=/usr/local/sqlite make -j4 &amp;&amp; make install 关联系统vim /etc/ld.so.conf.d/sqlite3.conf # 可选 /usr/local/sqlite/lib ldconfig","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"CentOS","slug":"CentOS","permalink":"https://faradays-studio.gitee.io/tags/CentOS/"},{"name":"Python","slug":"Python","permalink":"https://faradays-studio.gitee.io/tags/Python/"},{"name":"安装","slug":"安装","permalink":"https://faradays-studio.gitee.io/tags/%E5%AE%89%E8%A3%85/"},{"name":"编译","slug":"编译","permalink":"https://faradays-studio.gitee.io/tags/%E7%BC%96%E8%AF%91/"},{"name":"sqlite","slug":"sqlite","permalink":"https://faradays-studio.gitee.io/tags/sqlite/"}]},{"title":"CentOS 6.10 编译安装 GCC4.8.5","slug":"CentOS6编译安装GCC4-8-5","date":"2021-03-07T13:30:40.000Z","updated":"2021-03-07T13:59:11.729Z","comments":true,"path":"202103072130/","link":"","permalink":"https://faradays-studio.gitee.io/202103072130/","excerpt":"","text":"由于安装 python 3 的需要，需要升级 GCC；由于我的操作系统是 CentOS6.10，而且还需要考虑到工作软件系统的兼容，因此 GCC 版本暂时定为 4.8.5。测试表明，如果 Python 需要性能优化选项 --enable-optimizations，需要 GCC 8.2+ 以上的版本。 源码下载GCC 源码下载cd /home/common wget https://mirrors.tuna.tsinghua.edu.cn/gnu/gcc/gcc-4.8.5/gcc-4.8.5.tar.gz tar xzvf gcc-4.8.5.tar.gz # 源码权限根据实际需要设定，实际上编译完成后这个文件夹用不到，因此可以不操作此步骤 chmod 777 -R gcc-4.8.5/ 依赖库源码下载# 进入保存地址 cd /home/common/gcc-4.8.5 wget https://gmplib.org/download/gmp-6.1.2/gmp-6.1.2.tar.bz2 tar xvf gmp-6.1.2.tar.bz2 mv gmp-6.1.2 gmp wget https://ftp.gnu.org/gnu/mpfr/mpfr-3.1.6.tar.gz tar xzvf mpfr-3.1.6.tar.gz mv mpfr-3.1.6 mpfr wget https://ftp.gnu.org/gnu/mpc/mpc-1.0.3.tar.gz tar xzvf mpc-1.0.3.tar.gz mv mpc-1.0.3 mpc wget http://www.bastoul.net/cloog/pages/download/cloog-0.18.4.tar.gz tar xzvf cloog-0.18.4.tar.gz mv cloog-0.18.4 cloog wget http://isl.gforge.inria.fr/isl-0.14.tar.gz tar xzvf isl-0.14.tar.gz mv isl-0.14 isl 编译安装 GCC编译安装#gcc4.4.7版本开始，官方推荐使用单独的目录，而不是在解压gcc源码后的目录中进行编译 mkdir /home/common/gcc-build cd gcc-build ../gcc-4.8.5/configure --enable-checking=release --enable-languages=c,c++ --disable-multilib # --with-pkgversion=version ：指定一个标识你的包的字符串 # --enable-languages=c,c++：可以使用 all，default，ada，c，c++，fortran，go，jit，lto，objc，obj-c++。 # --disable-multilib：禁止生成多个平台的代码 # --enable-bootstrap：冗余的编译检查工作 # --enable-gather-detailed-mem-stats：允许通过 -fmem-report 选项来输出编译其它程序时的实时内存使用情况 # --with-long-double-128：指定long double类型的默认值是128位。 # --enable-threads=posix：C++ 异常能处理多线程代码 # --without-bash-malloc：禁用了 Bash 的内存分配函数(malloc)，Bash 将使用更为稳定的 Glibc 里的 malloc 函数。 # --enable-multibyte：支持使用多字节字符编码的文件 grep &quot;error&quot; config.log # 默认的make不加-j参数效率比较低，加上多线程参数 -j4 和-j8性能差距不大，-j16性能就比较差 date +%T &amp;&amp; make -j4 &amp;&amp; date +%T # make clean：清除上次的make命令所产生的object文件（后缀为“.o”的文件）及可执行文件。 # make distclean：包含make clean，同时也将configure生成的文件全部删除掉。感觉有点像在 gcc-build 中执行 rm -rf 的删减版一样。 lscpu |grep -A 1 &#39;Model name&#39; make install 关联系统如果上述安装过程中指定了 gcc 的安装路径，那么需要关联系统。当然，我上一步并没有指定安装路径，而是直接替代了系统自带的 GCC 4.4.7。 # 更新环境 echo &#39;/usr/local/gcc-4.8.5/lib64&#39; &gt; /etc/ld.so.conf.d/gcc4.8.5.conf ldconfig # 在自定义的全局配置文件中添加 PATH 变量 vim /etc/profile.d/hhjos6.sh PATH=/usr/local/gcc-4.8.5/bin:$PATH mv /usr/bin/gcc /usr/bin/gcc-4.4.7 mv /usr/bin/g++ /usr/bin/g++-4.4.7 mv /usr/bin/c++ /usr/bin/c++-4.4.7 ln -s /usr/local/gcc/bin/gcc /usr/bin/gcc ln -s /usr/local/gcc/bin/c++ /usr/bin/c++ ln -s /usr/local/gcc/bin/g++ /usr/bin/g++ ln -s /usr/local/gcc/lib64/libstdc++.so.6.0.22 /usr/lib64/libstdc++.so.6 版本检查gcc -v gcc -dumpversion ll /usr/bin/cc strings /usr/lib64/libstdc++.so.6 | grep GLIBC g++ -v g++ -dumpversion c++ -dumpversion 参考文献 如果还要尝试 yum -y install centos-release-scl 安装临时版本的 GCC ，那多数人并不会成功，毕竟 CentOS 6 在官方都是不支持的版本了。博主这次安装 GCC 4.8.5 花了很长时间，毕竟坑太多了，而且已有程序环境的兼容性也必须兼顾。因此虽然参考了以下这些文章，但是操作步骤上却有差异；就是一点点差异，我浪费了很多很多的时间！实际上，我看过的文章就不止这些了，但对我并没有提供任何的帮助。 TUNA.清华大学开源软件镜像站（GCC）[EB/OL].https://mirrors.tuna.tsinghua.edu.cn/gnu/gcc, 2021/02/20. peterpanzsy.centos 6 升级gcc[EB/OL].https://www.cnblogs.com/peterpanzsy/archive/2013/04/10/3006838.html, 2021/02/20. 创小新.LINUX CENTOS6.8编译安装GCC-6.3.0 升级GCC[EB/OL].https://chuangxiao.xin/h-nd-87.html, 2021/02/20. ljpwinxp.Centos 6.9 编译安装gcc 4.8.5[EB/OL].https://blog.51cto.com/191226139/2066137, 2021/02/20. Free Software Foundation.GCC 4.8 Release Series: Changes, New Features, and Fixes[EB/OL].https://gcc.gnu.org/gcc-4.8/changes.html, 2021/02/20.","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"CentOS","slug":"CentOS","permalink":"https://faradays-studio.gitee.io/tags/CentOS/"},{"name":"安装","slug":"安装","permalink":"https://faradays-studio.gitee.io/tags/%E5%AE%89%E8%A3%85/"},{"name":"GCC","slug":"GCC","permalink":"https://faradays-studio.gitee.io/tags/GCC/"},{"name":"编译","slug":"编译","permalink":"https://faradays-studio.gitee.io/tags/%E7%BC%96%E8%AF%91/"}]},{"title":"文章导航","slug":"list","date":"2021-03-05T16:55:56.000Z","updated":"2021-03-05T16:55:58.366Z","comments":true,"path":"202103060055/","link":"","permalink":"https://faradays-studio.gitee.io/202103060055/","excerpt":"","text":"文章导航","categories":[],"tags":[]},{"title":"CentOS6 升级安装 MySQL 5.7","slug":"CentOS6编译安装MySQL5-7","date":"2021-03-03T11:18:21.000Z","updated":"2021-03-07T13:31:09.409Z","comments":true,"path":"202103031918/","link":"","permalink":"https://faradays-studio.gitee.io/202103031918/","excerpt":"","text":"由于 CentOS6 自带的 MySQL 5.1 性能不行，使用过程中遇到了很多问题，（误）最关键的是，都不支持 utf8mb4，后台去检查数据老是遇到乱码，烦死了！mysql 5.5.3+ 才支持 utf8mb4，（逃…）因此我决定安装 MySQL 5.7 。 设置国内源最近几年里，我给好几个系统安装过 MySQL，可是国外官网的速度实在是太瘆人了；后来才知道这软件居然也有国内源，用了之后心情都好很多了。 gedit /etc/yum.repos.d/mysql-community.repo，填入以下内容： [mysql-connectors-community] name=MySQL Connectors Community baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-connectors-community-el6-$basearch/ enabled=1 gpgcheck=1 gpgkey=https://repo.mysql.com/RPM-GPG-KEY-mysql [mysql-tools-community] name=MySQL Tools Community baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-tools-community-el6-$basearch/ enabled=1 gpgcheck=1 gpgkey=https://repo.mysql.com/RPM-GPG-KEY-mysql [mysql-5.6-community] name=MySQL 5.6 Community Server baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-5.6-community-el6-$basearch/ enabled=0 gpgcheck=1 gpgkey=https://repo.mysql.com/RPM-GPG-KEY-mysql [mysql-5.7-community] name=MySQL 5.7 Community Server #baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-5.7-community-el6-$basearch/ #baseurl=https://mirrors4.tuna.tsinghua.edu.cn/mysql/yum/mysql-5.7-community-el6-x86_64/ baseurl=https://mirrors.ustc.edu.cn/mysql-repo/yum/mysql-5.7-community/el/6/x86_64/ enabled=1 gpgcheck=1 gpgkey=https://repo.mysql.com/RPM-GPG-KEY-mysql [mysql-8.0-community] name=MySQL 8.0 Community Server baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-8.0-community-el6-$basearch/ enabled=0 gpgcheck=1 gpgkey=https://repo.mysql.com/RPM-GPG-KEY-mysql 安装程序使用 yum 进行安装 MySQL yum makecache yum install mysql-community-libs-compat* yum install mysql-community-server 一般情况下，MySQL包括以下各个包： 名字 摘要说明 备注 mysql-community-client MySQL客户端应用程序和工具 mysql-community-common 服务器和客户端库的通用文件 mysql-community-devel MySQL数据库客户端应用程序的开发头文件和库 mysql-community-embedded-compat MySQL服务器作为嵌入式库，与使用库版本18的应用程序兼容 mysql-community-libs MySQL数据库客户端应用程序的共享库 mysql-community-libs-compat 以前的MySQL安装的共享兼容性库 mysql-community-server 数据库服务器和相关工具 mysql-community-server-debug 调试服务器和插件二进制文件 mysql-community-test MySQL服务器的测试套件 mysql-community RPM的源代码类似于mysql-community-8.0.20-1.el7.src.rpm，具体取决于所选的OS 安装还会在系统上创建一个名为的用户 mysql和一个名为的组 mysql。 MySQL 的初始化配置初始化配置gedit /etc/my.cnf 设定 MySQL 的编码参数以及默认端口 [mysqld] port = 6033 character-set-server=utf8mb4 collation_server=utf8mb4_general_ci default-time-zone = &#39;+8:00&#39; explicit_defaults_for_timestamp=true [client] port = 6033 default-character-set=utf8mb4 修改服务设定 MySQL 开机启动 su chkconfig --add mysqld chkconfig mysqld on # 启动 MySQL 服务 service mysqld start 账户和密码管理 查看 MySQL 默认密码 grep &quot;temporary password&quot; /var/log/mysqld.log 设定 root 密码，并添加普通用户 david mysql -uroot -p # 本地 ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;fs@DB135&#39;; # SET PASSWORD FOR &#39;root&#39;@&#39;localhost&#39; = PASSWORD(&#39;fs@DB135&#39;); # 远程 ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;fs@ABCD.135&#39;; # 普通用户 david CREATE USER &#39;david&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;dav#D2468&#39;; CREATE USER &#39;david&#39;@&#39;%&#39; IDENTIFIED BY &#39;dav#D-124857&#39;; # 查看用户 select user,host,password from mysql.user; exit 如果由于默认的密码强度校验导致本地使用的简单密码无法通过，可以在 MySQL 中使用 set global validate_password_policy=0; 临时关闭，不过，应当谨慎使用哦! 如果在使用过程中，需要修改账户的本地、远方访问权限，示例如下： # 局域网访问：主库 grant replication slave on *.* to &#39;david&#39;@&#39;192.168.88.%&#39; identified by &#39;dav#D2468&#39; with grant option; # 局域网访问：从库（在对端主机配置） grant all privileges on *.* to &#39;david&#39;@&#39;192.168.88.%&#39; identified by &#39;dav#D2468&#39; with grant option; # 远程访问（db1、db2为系统中的数据库名） GRANT ALL PRIVILEGES ON db1.* TO &#39;david&#39;@&#39;%&#39; IDENTIFIED BY &#39;dav.D2468-fs1&#39; WITH GRANT OPTION; GRANT ALL PRIVILEGES ON db2.* TO &#39;david&#39;@&#39;%&#39; IDENTIFIED BY &#39;dav#D-124857&#39; WITH GRANT OPTION; # 本地访问（临时性修改密码策略，从而在保留原有授权的基础下，增加密码较为简单的访问） set global validate_password_policy=0; GRANT ALL ON db1.* TO &#39;david&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;david.1357&#39; WITH GRANT OPTION; GRANT ALL ON db2.* TO &#39;david&#39;@&#39;127.0.0.%&#39; IDENTIFIED BY &#39;david.2468&#39; WITH GRANT OPTION; # 执行生效 flush privileges; 如果需要清除权限，示例如下： mysql -u root -p select user,host, authentication_string from mysql.user; # 清除 delete 权限 REVOKE delete ON *.* FROM &#39;david&#39;@&#39;localhost&#39;; revoke delete on *.* from &#39;david&#39;@&#39;%&#39;; # 清除 all 权限 revoke all on *.* from &#39;david&#39;@&#39;localhost&#39;; REVOKE ALL PRIVILEGES ON *.* FROM &#39;david&#39;@&#39;%&#39;; # 执行生效 FLUSH PRIVILEGES; 配套修改防火墙确保远程主机的访问，如下： gedit /etc/sysconfig/iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT #-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 6033 -j ACCEPT -A INPUT -j REJECT --reject-with icmp-host-prohibited service iptables restart 安装故障排查查看错误日志是最直接有效的，如果不指定，文件名则为主机名（此处为 hhjos6 ），如： tail -f /var/lib/mysql/hhjos6.err 参考文献 TUNA.Mysql Community Edition 镜像使用帮助[EB/OL].https://mirrors.cnnic.cn/help/mysql/, 2021/03/05. Oracle Corporation and/or its affiliates.MySQL Product Archives[EB/OL].https://downloads.mysql.com/archives/community/, 2021/03/05.","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"国内源","slug":"国内源","permalink":"https://faradays-studio.gitee.io/tags/%E5%9B%BD%E5%86%85%E6%BA%90/"},{"name":"CentOS","slug":"CentOS","permalink":"https://faradays-studio.gitee.io/tags/CentOS/"},{"name":"MySQL","slug":"MySQL","permalink":"https://faradays-studio.gitee.io/tags/MySQL/"},{"name":"安装","slug":"安装","permalink":"https://faradays-studio.gitee.io/tags/%E5%AE%89%E8%A3%85/"},{"name":"配置","slug":"配置","permalink":"https://faradays-studio.gitee.io/tags/%E9%85%8D%E7%BD%AE/"},{"name":"权限","slug":"权限","permalink":"https://faradays-studio.gitee.io/tags/%E6%9D%83%E9%99%90/"}]},{"title":"Linux系统的多条件查询与匹配","slug":"Linux的多条件查询","date":"2021-02-12T12:28:32.000Z","updated":"2021-02-24T12:22:14.431Z","comments":true,"path":"202102122028/","link":"","permalink":"https://faradays-studio.gitee.io/202102122028/","excerpt":"","text":"基本用法 vim 的多条件匹配 与 或 非 ?.*a\\&amp;.*b ?a\\|b ?a\\&amp;.*b grep 的多条件匹配 与 或 非 grep &#39;pattern1&#39; filename | grep &#39;pattern2&#39; grep ‘pattern1\\|pattern2‘ filename grep -v ‘pattern‘ filename grep -E ‘pattern1.*pattern2‘ filename grep -E ‘pattern1|pattern2‘ filename grep -E ‘pattern1.*pattern2|pattern2.*pattern1‘ filename grep -e ‘pattern1 -e pattern2‘ filename egrep ‘pattern1|pattern2‘ filename 案例与 运算 查看 12 月份的错误信息：grep ‘error‘ /var/log/message | grep ‘Feb ‘； 查看用户下有无特定程序： ps -Af | grep -E ‘root’ | grep bash ps -Af | grep herc |grep bash 在系统的日常维护中，应当应该配合上下文检索信息，例如匹配前3条、后1条： ausearch -f /etc/passwd | grep -B3 -A1 cat。 匹配文件中的两个字符串： 第一个关键词位于行首：/2021-1-18\\&amp;.* d 第一个关键词位于行中： /.*9:23\\&amp;.* d 或 运算 查看是否存在这些进程：ps -Af | grep -E ‘mysql|postgres|xinetd|amanda’； 查看相应程序是否开机运行的配置：chkconfig –list | grep -E ‘mysql|postgres|xinetd|amanda’。 匹配文件中的两个字符串： /.*Send\\|83 非 运算 查看非空密码用户：cat /etc/shadow |grep -v “!!“； 查看可以登录系统的用户：cat /etc/passwd |grep -v “nologin”。 参考文献 夜之眷属.vim中多条件查询[EB/OL].https://blog.csdn.net/qq_28112995/article/details/106741835, 2021/02/12. stalin_.Linux--使用grep命令进行多条件查询（AND，OR，NOT）[EB/OL].https://blog.csdn.net/stalin_/article/details/81450633, 2021/02/12.","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://faradays-studio.gitee.io/tags/shell/"},{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"多条件查询","slug":"多条件查询","permalink":"https://faradays-studio.gitee.io/tags/%E5%A4%9A%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/"},{"name":"vim","slug":"vim","permalink":"https://faradays-studio.gitee.io/tags/vim/"},{"name":"grep","slug":"grep","permalink":"https://faradays-studio.gitee.io/tags/grep/"}]},{"title":"写论文的苦，你未必想尝一下","slug":"写论文的苦你未必想尝一下","date":"2021-01-30T03:28:55.000Z","updated":"2021-02-03T14:36:15.266Z","comments":true,"path":"202101301128/","link":"","permalink":"https://faradays-studio.gitee.io/202101301128/","excerpt":"","text":"最近 3 个星期，一直在忙着写论文，走路在想，吃饭在想，睡觉也在想，总感觉某个地方有个难关需要我去跨越，我到了附近，却一直没有发现；等到论文基本写出来后，发现写论文是挺辛苦的！ 选题的苦如果认真去做科研论文的话，选题是很苦的，因为是很难找到合适的题目的。 我都工作快 10 年了，也就最近才有些灵感和题材。一个人很难独自拥有一些高大上的项目，我的工作是搬砖的，就很难去研究烧砖技术，更多的是考虑如何搬运、如何与人协作、如何做好工期管理等等。 因此，好不容易在工作中，发挥了一些重要作用，在种种压力之下，准备去写论文；拟好了粗略的提纲，感觉去找一个知识数据库的账户，将同领域、同主题的文献找出来，一看，不好了，怎么这么多人都写了，多半只能放弃，就算不放弃，题材也很难写出新意来；水论文的人很多，可是自己扪心自问，那并不是我想要的，丢掉吧！ 由于工作繁忙以及自己心里的这一丝丝骄傲，我好长时间都没有写出论文来，明明我业绩最多、贡献最大，可是我比不少按部就班的同事晚了 2 年。有些时日里，我焦虑得不行，不肯将就，也没有天降福利，在两个单位里边都被关心我的大领导约谈了… 好不容易能够选了一个题目，能够勉强说有创新性、实用价值的，又得在诸多先行者的背影里，寻找空间，作出差异化来，不然，自己就真的是水论文了。 写作的苦如果认真去做科研论文的话，写作的过程也是很苦的，因为写的东西不一定被人认可。 工作的过程，事情做完就了事了；可是如果发论文，那么自己得将事情的来龙去脉、因果、主次、先后等等都弄明白。最近写的这个论文，是关于计算机技术的，在网络上、操作系统里、论文里，都有零零星星的表述，可是有些已经过期了，有些别人就写错了，有些别人提供的参数、程序、方法等等不适合实际情况，都得去一一验证，一一去比较，一一去部署，最近这两周，我的头一直很疼，因为有些试验尝试了十多次了，一次需要一两个小时；日常的工作仍然需要继续，家里儿女仍得操心，老家也有一些烦心事，新一年的工作仍然很迷茫，这一些都让我很为难。 好不容易写出素材来了，还得修改文字；标题是否有吸引力，摘要是否清楚，翻译是否妥当，文章各级标题是否层次鲜明，各个段落的内容是否清楚明白、是否啰嗦繁杂、是否存在逻辑问题，得来回修改。 感觉差不多了，得控制字数，不能太多，也不能太少；图片得自己去绘制，不然显示效果不好；图表得考虑，论文的相关指标能否让别人看得懂、评估得上等级。因此，各种修改也得耗好几个通宵！ 发表的苦如果认真去做科研论文的话，发表过程也是很辛苦的，因为得到好期刊的认可也是相当的困难的。好不容易有了内容，得开始寻找适当的杂志了。找了几个心仪的杂志，论文格式好好捯饬了一下，存了很多个版本格式，花了几天也完成了。 自己一无人脉，二无平台，三无能力，核心期刊基本都很难；前一个论文我整整收了三年，投了多家期刊，有些是毫不客气的说水平不行，有些和和气气地说不符合杂志风格，有些啥也没说退稿回来。 成果的苦如果认真去做科研论文的话，论文发表了也是很苦的，因为不是投入越大、回报越大。 很不容易地，论文发表了，可是好些平时不做事的同事，不知不觉地就发了好几篇论文，评选职称了，自己又显得落后了，这种苦真不是滋味！ 看着别人那么水，和自己发在同样的杂志上，并不知道自己来回倒腾是否有价值。其实杂志里边的论文多数都是过得去的，奈何偏偏有几个相熟的人凑了一些他从来没有弄清楚过的内容上去，也发表了，心里何其翻覆！这样一对比，再也不认为那些核心期刊里侃侃而谈的大家们徒有其表了，而是自惭形秽不已。 论文发表了，自己回忆起来，那个过程仍然是苦涩的，很长时间都挥之不去。可是，如果得到了认可，对别人也发挥了作用，那心里在很短的瞬间也是会有甘之如饴的愉悦的。 其实，写论文不一定苦，苦的是放不下心里的结，随性一点的话，一切会好很多。春城冬暖，愿大家都能享受这美好的阳光。","categories":[{"name":"坐井观天","slug":"坐井观天","permalink":"https://faradays-studio.gitee.io/categories/%E5%9D%90%E4%BA%95%E8%A7%82%E5%A4%A9/"}],"tags":[{"name":"论文","slug":"论文","permalink":"https://faradays-studio.gitee.io/tags/%E8%AE%BA%E6%96%87/"},{"name":"科研","slug":"科研","permalink":"https://faradays-studio.gitee.io/tags/%E7%A7%91%E7%A0%94/"},{"name":"冷板凳","slug":"冷板凳","permalink":"https://faradays-studio.gitee.io/tags/%E5%86%B7%E6%9D%BF%E5%87%B3/"},{"name":"苦","slug":"苦","permalink":"https://faradays-studio.gitee.io/tags/%E8%8B%A6/"}]},{"title":"2021年随笔","slug":"2021年随笔","date":"2021-01-17T03:57:31.000Z","updated":"2021-08-27T13:34:19.713Z","comments":true,"path":"202101171157/","link":"","permalink":"https://faradays-studio.gitee.io/202101171157/","excerpt":"","text":"2021/01/28，辛苦写论文，又到凌晨，身心疲惫不已的，有种长路漫漫之感。想认真去做事，可是效果却不甚了了；人生甚是困难… 2021/03/03，愚钝最近，母亲在老家动作频频，与邻居们争论不休，好几个人都向我倾诉；然而我也无能为力，一个顽固的、生病的孤独老太婆，我又能将她怎么样呢？！ 工作上也是困难重重，好几天都无精打采的，总结材料怎么也写不出来，设备改造也推进不力，科技创新项目也没有开展，论文还迟迟没有动笔。心里负担太重，天空都是灰色的了！ 2021/08/27，累并快乐着最近 4 个月，几乎没有写什么博文，并非偷懒；而是事情实在太忙碌了，匆匆忙忙地赶完工作上的事情，然后我一直在看论文、做试验和写论文中，连考证和辅导小孩的事情都完全地丢下了。 4 个月，说不尽的辛劳，道不完的心酸。很长一段时间里，心里一直盘旋着论文方方面面的事情，睡也睡不着，困得浑身乏力，累得甚至小病了一场；但是我还是一心一意地做着朴实的论文试验，反反复复地改文章，生病的时候，休息一会又回到电脑前做试验、改论文…好几个同事笑我太认真，以为我是为了评职称。其实，我评下一个等级职称的业绩和论文等各个方面都准备妥当了；我就是想好好地做一下科研而已——虽然我并非职业的科研人。我想，也许有一天，有在读研究生看了我的论文，得到了一些的启发，那我就挺满足了！ 前天，论文终于写完了；昨天，试验数据也基本整理好了；今天，心情终于稍稍轻松了一些。认真做事，很累，但是也很充实，有一种真切的快乐感——也许是因为前半生太苦，能够用自己的勤劳与智慧来创造有用的作品，是我的幸事！","categories":[{"name":"星星心事","slug":"星星心事","permalink":"https://faradays-studio.gitee.io/categories/%E6%98%9F%E6%98%9F%E5%BF%83%E4%BA%8B/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://faradays-studio.gitee.io/tags/%E9%9A%8F%E7%AC%94/"},{"name":"2021","slug":"2021","permalink":"https://faradays-studio.gitee.io/tags/2021/"}]},{"title":"CentOS 使用 yum 国内源实现加速下载","slug":"centos使用yum国内源实现加速下载","date":"2021-01-17T03:56:05.000Z","updated":"2021-02-14T13:19:59.507Z","comments":true,"path":"202101171156/","link":"","permalink":"https://faradays-studio.gitee.io/202101171156/","excerpt":"","text":"又是一年过去，忽然接到通知，要求更新一个之前做的展示系统，就想起来要更新一下系统。结果使用 yum list kernel.x86_64 提示 Cannot find a valid baseurl for repo: base。 更换国内源也不行，看了http://mirrors.163.com/centos/6.10/readme 文件，发现官方自 2020/11/30 起就禁止 CentOS 6.x 更新了（文件被清空）。呜呜，真是后知后觉了！ su cd /etc/yum.repos.d/ cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.original # 系统是根据 Base*.repo 来判别基础源的，因此备份的时候必须修改扩展名 gedit CentOS-Base.repo # 国外 http://vault.centos.org/6.10 # 国内 http://mirrors.aliyun.com/centos-vault/6.10/； mv epel.repo epel.original gedit epel.repo # 网址替换为 http://archives.fedoraproject.org/pub/archive/epel/6/x86_64/ 即可 # 国内（好像不行了） http://mirrors.aliyun.com/epel-archive/6/ rm -f /var/run/yum.pid yum clean all yum makecache yum repolist 网友多喜欢用 vim ，我是普通人，我就是喜欢使用 gedit ，用上边提到的网址将文件中的网址替换一下就搞定了；如果可能需要滚动升级到下一个版本的，请参考修改一下网址的表达方式就行了。 你问我怎么更换国内源，方法和上边是一样的——都是更换源嘛！至于国内源有哪些，可以了解一下清华、阿里云、网易、搜狐、中科大等源。当然，如果想简单一点的话，还可以 su # 备份 mv /etc/yum.repos.d/CentOS-Base.repo/etc/yum.repos.d/CentOS-Base.repo.bck # 下载替换源（依次为网易、阿里、中科大、搜狐） wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo # wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo # curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo # wget -O /etc/yum.repos.d/CentOS-Base.repo http://centos.ustc.edu.cn/CentOS-Base.repo # wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.sohu.com/help/CentOS-Base-sohu.repo # 更新系统源数据库 yum clean all yum makecache yum repolist 当然，也可以用这种方法： su sed -e &#39;s|^mirrorlist=|#mirrorlist=|g&#39; \\ -e &#39;s|^#baseurl=http://mirror.centos.org|baseurl=https://mirrors.tuna.tsinghua.edu.cn|g&#39; \\ -i.bak \\ /etc/yum.repos.d/CentOS-*.repo 国内源是真的快，不用真的不知道！ 参考文献 清华大学TUNA团队.CentOS 镜像使用帮助[EB/OL].https://mirrors.cnnic.cn/help/centos/, 2021/02/01. fogwu.centos6 yum源失效，yum不可用处理方法及php环境搭建[EB/OL].https://www.cnblogs.com/fogwang/p/14133970.html, 2021/02/01.","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"yum","slug":"yum","permalink":"https://faradays-studio.gitee.io/tags/yum/"},{"name":"国内源","slug":"国内源","permalink":"https://faradays-studio.gitee.io/tags/%E5%9B%BD%E5%86%85%E6%BA%90/"},{"name":"CentOS","slug":"CentOS","permalink":"https://faradays-studio.gitee.io/tags/CentOS/"},{"name":"加速","slug":"加速","permalink":"https://faradays-studio.gitee.io/tags/%E5%8A%A0%E9%80%9F/"},{"name":"下载","slug":"下载","permalink":"https://faradays-studio.gitee.io/tags/%E4%B8%8B%E8%BD%BD/"}]},{"title":"Python 使用 pip 国内源实现百倍加速下载","slug":"python使用pip国内源实现加速下载","date":"2021-01-17T03:17:53.000Z","updated":"2021-02-14T13:22:21.581Z","comments":true,"path":"202101171117/","link":"","permalink":"https://faradays-studio.gitee.io/202101171117/","excerpt":"","text":"pip 是一个现代的，通用的 Python 包管理工具。提供了对 Python 包的查找、下载、安装、卸载的功能。 使用 Python 多年了，一直都坚持使用官方源的做法，结果被现实打脸了，下载一个包往往一个小时都不一定能够成功，不得不放弃了使用 Python 的念头。后来，偶尔知道了 pip 有国内源，大大加快了组件的下载速度，必须严重推荐。 听说曾经有以下这些国内源—— 清华 https://pypi.tuna.tsinghua.edu.cn/simple/阿里 https://mirrors.aliyun.com/pypi/simple/豆瓣 https://pypi.doubanio.com/simple/中科大 https://mirrors.ustc.edu.cn/pypi/web/simple/官网 https://pypi.org/simple华中理工 http://pypi.hustunique.com/山东理工 http://pypi.sdutlinux.org/ 2021年了，一些国内源已经不运营了，我也不习惯照抄网上的文章，所以这里是我的实践结果。 国内源的测评 源 地址 测试 速度 清华大学 https://pypi.tuna.tsinghua.edu.cn/simple ping pypi.tuna.tsinghua.edu.cn 62ms 阿里云 https://mirrors.aliyun.com/pypi/simple/ ping mirrors.aliyun.com 8ms 豆瓣 https://pypi.douban.com/simple/ ping pypi.douban.com 52ms 综上，推荐选择阿里云，不是网友清一色的推荐清华大学源和豆瓣源。 临时源配置 普通环境下操作示例： pipenv install &lt;package&gt; -i &lt;URL&gt; pip install Django -i https://pypi.doubanio.com/simple/ 虚拟环境下的操作示例 pipenv install &lt;package&gt; --pypi-mirror &lt;URL&gt; pip install Django --pypi-mirror https://mirrors.aliyun.com/pypi/simple/ 永久源配置 Windows 平台：在 %HOMEPATH% 路径下创建 pip 文件夹，再创建 pip.ini 文件，内容如下： [global] timeout = 6000 index-url = https://mirrors.aliyun.com/pypi/simple/ ;清华大学：https://pypi.tuna.tsinghua.edu.cn/simple ;阿里云：https://mirrors.aliyun.com/pypi/simple/ ;豆瓣：https://pypi.douban.com/simple/ [install] ;use-mirrors = true ;mirrors = https://pypi.tuna.tsinghua.edu.cn/simple trusted-host = https://mirrors.aliyun.com Linux 平台：在 ~/.pip/pip.conf 文件中增加上述内容。 pipenv 等虚拟环境，只需要在相应的 Pipfile 中修改相应的 URL 内容即可，举例如下： [[source]] name = &quot;pypi&quot; #修改源提高锁定速度 url = &quot;https://mirrors.aliyun.com/pypi/simple&quot; [[source]] name = &quot;aliyun&quot; url = &quot;https://mirrors.aliyun.com/pypi/simple&quot; verify_ssl = true 测试下载 pip install pandas 速度从 12kb/s 提升到 3Mb/s，妥妥地提升百倍以上速度不是梦！ 致敬阿里云、清华大学、豆瓣这些为开源共享力量的单位！ 上述内容，有些是三四年前梳理的，早忘了是参考了哪些文章了，有空再找找，然后补上来。不过尴尬的是，天下文章一大抄，多数人都是乱写一通，不成体系，不辨真伪，实在是不堪入目！ 参考文献 PyPA.Installing Packages[EB/OL].https://packaging.python.org/tutorials/installing-packages/, 2021/01/17.","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"国内源","slug":"国内源","permalink":"https://faradays-studio.gitee.io/tags/%E5%9B%BD%E5%86%85%E6%BA%90/"},{"name":"加速","slug":"加速","permalink":"https://faradays-studio.gitee.io/tags/%E5%8A%A0%E9%80%9F/"},{"name":"下载","slug":"下载","permalink":"https://faradays-studio.gitee.io/tags/%E4%B8%8B%E8%BD%BD/"},{"name":"pip","slug":"pip","permalink":"https://faradays-studio.gitee.io/tags/pip/"},{"name":"Python","slug":"Python","permalink":"https://faradays-studio.gitee.io/tags/Python/"}]},{"title":"VirtualBox 虚拟机磁盘压缩方法（已验证）","slug":"Virtualbox虚拟机磁盘压缩方法","date":"2021-01-10T08:04:54.000Z","updated":"2021-02-14T13:24:07.101Z","comments":true,"path":"202101101604/","link":"","permalink":"https://faradays-studio.gitee.io/202101101604/","excerpt":"","text":"VirtualBox 虚拟机的容量会随着使用自动扩容，这本来是个好事；不过在实际使用过程中，由于系统错误日志疯狂写入等原因，也可能会导致系统容量被明显扩充变大。容量变大之后，无论是转换虚拟盘格式，还是导入导出，均不能减小容量。特别是做虚拟机备份导出时，白白浪费了大量的空间。因此，进行虚拟机磁盘容量的压缩，势在必行！ 以下两个系统我都用了很长时间，也都测试过方法的可行性，可供参考。 虚拟机磁盘格式转换 需要注意的是，虽然 VirtualBox 默认的磁盘格式为 vdi，可是经过导入、导出等一系列操作后，硬盘格式往往都是 wmdk；本文所讨论的磁盘压缩方法，只对 vdi 格式的磁盘有效；因此，磁盘压缩之前，往往都需要进行磁盘格式转换！ 在 VirtualBox 管理界面上，还需要重新删除原有的 vmdk 磁盘（否则 uuid 冲突导致无法导入 vdi 磁盘）、然后指定系统需要使用的磁盘为新的 vdi 磁盘（否则无法使用后续的磁盘压缩功能）。 转换虚拟机磁盘文件格式为 vdi cd &quot;C:\\Program Files\\Oracle\\VirtualBox\\&quot; &quot;VBoxManage.exe&quot; clonehd &quot;e:\\source.vmdk&quot; &quot;e:\\target.vdi&quot; --format vdi 将新磁盘关联到虚拟机中 Windows 虚拟机磁盘的压缩毫无疑问，Windows 平台的磁盘压缩比较简单，在主机系统中直接执行以下命令即可。 &quot;C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe&quot; modifyhd &quot;e:\\target.vdi&quot; --compact 多年前，我曾进行过上述操作，并截图，可是现在找不到之前的截图了，有空再补了。 CentOS 虚拟机磁盘的压缩 一开始，我尝试使用网上泛滥的手动将磁盘剩余空间写 0 的方法，可是，过了很久，不过没有看到磁盘空间变小，反而越来越大——我本来虚拟机才25GB，不到半个小时变成了 60 GB，本来主机硬盘容量就很小，吓得我赶紧终止了。 dd if=/dev/zero of=/empty bs=1M #dd if=/dev/zero of=/dev/sda3 rm -f /empty 多天以后，做完了手上的工作，重新去外网上学习相应的处理方法，发现了有个叫做 zerofree 工作的做法没有尝试过，因此我重新导入了一个虚拟机进行尝试，结果成功了，过程如下： 使用 yum 下载安装 zerofree 程序包 su yum -y install zerofree 重新启动系统，并在系统 GRUB 启动菜单出现时点击 Enter 键进入编辑模式 选择含有 vmlinuz 字样菜单行，按 e 进入内容编辑状态 在菜单末尾增加 init=/bin/bash 后 Enter 返回上级菜单 内核启动参数 含义 备注 init=/sbin/init 告诉内核用 /sbin/init 作为它的 init 程序 init=/bin/bash 只启动 bash，在紧急恢复时有用 救援模式 root=/dev/foo 告诉内核用 /dev/foo 作为根设备 single 引导进入单用户模式 单用户模式 然后按 b 重新启动系统 进入救援模式初始界面 查看系统的磁盘名称 df 执行清理（请根据前一步的查询结果进行确定需要清理的磁盘） zerofree -v /dev/sda1 zerofree -v /dev/sda3 至此，虚拟机磁盘容量 已经明显变小。然后强制关机，重新进入系统。 在宿主机中，打开命令行，笔者这里是Windows系统，如下执行 &quot;C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe&quot; modifyhd &quot;e:\\target.vdi&quot; --compact 版本说明参考文献 mowkeeper.VirtualBox压缩vdi文件[EB/OL].http://mowblog.com/virtualbox%E5%8E%8B%E7%BC%A9vdi%E6%96%87%E4%BB%B6/, 2021/01/08. Canonical Ltd.Ubuntu Manpage: zerofree — zero free blocks from ext2, ext3 and ext4 file-systems[EB/OL].http://manpages.ubuntu.com/manpages/hirsute/en/man8/zerofree.8.html, 2021/01/10. 变更说明 1.0.0，2021/01/19 20:55:03，初始版本。 1.0.1，2021/02/12 19:36:23，补充 Linux 内核启动参数表。","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://faradays-studio.gitee.io/tags/Windows/"},{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"VirtualBox","slug":"VirtualBox","permalink":"https://faradays-studio.gitee.io/tags/VirtualBox/"},{"name":"虚拟机","slug":"虚拟机","permalink":"https://faradays-studio.gitee.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"},{"name":"压缩","slug":"压缩","permalink":"https://faradays-studio.gitee.io/tags/%E5%8E%8B%E7%BC%A9/"},{"name":"zerofree","slug":"zerofree","permalink":"https://faradays-studio.gitee.io/tags/zerofree/"}]},{"title":"什么才是事业成功的关键？","slug":"什么才是事业成功的关键","date":"2021-01-03T02:51:25.000Z","updated":"2021-02-17T05:30:39.718Z","comments":true,"path":"202101031051/","link":"","permalink":"https://faradays-studio.gitee.io/202101031051/","excerpt":"","text":"2021 年元旦，休假在家。偶然间，会想起自己2020年里工作上的点点滴滴：这一年，我投入了不少精力，取得了一定的业绩，有点骄傲、有点遗憾、也有点不满。 2020年里，我除了有一两个月因为一些特别重大的事情低沉了好几个星期，从年初到年底，我实际上在工作上投入的时间并不比别人少。没错，我就是那种人——明明没人安排我，回到家里还在研究工作中的事情，去探索如何能够将工作做得效果更好、操作更智能化…… 2020年，也看着不少的同事，慢慢地领先到了前方，有些人成为了处级领导，有些人从副科转为了正科，甚至也有个别年轻人超到前方去成了副科级的领导了。我回想自己的这些年，工作付出不少，荣誉很多，业绩丰富，能力也不错，可是目前并未看到向上升迁的机会；心里不免是着急的，会盲目去比较，也会突然地爆出几句怨言来！ 工作中，看过太多的事情没做成——哪怕是高层领导牵头的事，没做成的也是一抓一大把。因此，我对自己“每一次都将别人没做成的事情做成了，将别人不愿意做的事情默默做出来了”这一点颇为骄傲，甚至有些得意忘形了！年终评选的时候，我常常列入上级荣誉的候选人，然而很多年里都止步于候选；不知道今年结果如何，反正公司推荐到集团的名单里，我也是排名靠后的——我都已经尽力地吹嘘自己了，可是也不见得每个领导都喜欢我！ 有意思的是，2020年的评选我魔幻般的拿了大满贯，所在部门的、区域的、集团的先进我全拿了！感谢领导！ 看着别人的宣传材料，都是将普通而平凡的事情做成了。我和别人的区别，无非是我的业绩更多是与计算机相关的，不容易可视化评估；而别人的业绩往往都是加了什么设备、修好了什么东西、帮助了多少穷人，即使是外行人也能评价出一二三来。所以，我还是挺无奈的：酒再香，也怕巷子太深！ 噢，不再说这些事情了，我还是向前看看吧，因为这些社会环境可不会自动适应我：工作上的岗位，不是我自己能定的；而我也不愿意去做一条咸鱼，哪怕可能会被一些人毫无底线地利用。因此，我，需要调整自我，不断去提升自我，与时俱进，开拓创新。 2020年，我是做了不少工作的。我自以为：我是一些工作成功开展的关键，因为我有决心、有能力、有行动去突破困难，让我的同事没有后顾之忧！可是，我也不是成功唯一的关键，我明白，我再厉害，如果厂家不配合、使用者不接纳，那么我做的成果，也只是一堆空洞的二进制符号的集合；厂家、用户都是靠我的上上级以及上上级的上上级去驱动的——没有领导的支持，就没有相应的硬件资源，就没有实施的基础，更没有应用、推广、完善的可能性！因此，关键领导的支持，也毫无疑问是成功的最关键。 《荀子·劝学》中提出：君子生非异也，善假于物也。我认为，一个事情不是我一个人做成的，并不丢人。我分析，事业成功的关键，在于资源完备、方法完整、执行到位 都落实到位了。一个人是做不成大事业的，需要集体的支持；集团未必就能长期稳健，需要个人的奋斗创新；两者相辅相成、缺一不可。 春城经冬，乍暖还寒。2020年已经过去，我感激领导的支持和信任，感谢同事和陌生人的帮助和支援，感恩妻子儿女默默的支撑，也点赞自己，栉风沐雨，永不放弃！ 2021年，你好！文字前的读者，也祝你未来一切越来越好！","categories":[{"name":"坐井观天","slug":"坐井观天","permalink":"https://faradays-studio.gitee.io/categories/%E5%9D%90%E4%BA%95%E8%A7%82%E5%A4%A9/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://faradays-studio.gitee.io/tags/%E9%9A%8F%E7%AC%94/"},{"name":"成功","slug":"成功","permalink":"https://faradays-studio.gitee.io/tags/%E6%88%90%E5%8A%9F/"},{"name":"关键","slug":"关键","permalink":"https://faradays-studio.gitee.io/tags/%E5%85%B3%E9%94%AE/"},{"name":"领导","slug":"领导","permalink":"https://faradays-studio.gitee.io/tags/%E9%A2%86%E5%AF%BC/"},{"name":"奋斗","slug":"奋斗","permalink":"https://faradays-studio.gitee.io/tags/%E5%A5%8B%E6%96%97/"},{"name":"总结","slug":"总结","permalink":"https://faradays-studio.gitee.io/tags/%E6%80%BB%E7%BB%93/"}]},{"title":"csh 、 bash 的基础语法对照：循环表达式","slug":"csh与bash的基础语法对照-循环","date":"2020-12-26T09:33:40.000Z","updated":"2022-02-19T01:46:04.291Z","comments":true,"path":"202012261733/","link":"","permalink":"https://faradays-studio.gitee.io/202012261733/","excerpt":"","text":"循环的中断Bash 提供了两个内部命令break和continue，用来在循环内部跳出循环。 - break命令立即终止循环，程序继续执行循环块之后的语句，即不再执行剩下的循环。 - continue命令立即终止本轮循环，开始执行下一轮循环。 项目 bash csh break #!/bin/bash for number in 1 2 3 4 5 6 do echo “number is $number” if [ “$number” = “3” ]; then break fi done continue #!/bin/bash while read -p “What file do you want to test?” filename do if [ ! -e “$filename” ]; then echo “The file does not exist.” continue fi echo “You entered a valid file..” done while 循环的用法while循环有一个判断条件，只要符合条件，就不断循环执行指定的语句。 项目 bash csh while while expression; do commands done while(expression) commands continue breakend 示例 #关键字do可以跟while不在同一行，这时两者之间不需要使用分号分隔。while true do echo ‘Hi, while looping …’; done #while循环写成一行，也是可以的while true; do echo ‘Hi, while looping …’; done until 循环的用法until循环与while循环恰好相反，只要不符合判断条件（判断条件失败），就不断循环执行指定的语句。一旦符合判断条件，就退出循环。 项目 bash csh while until condition; do commands done 示例 #!/bin/bash number=0 until [ “$number” -ge 10 ]; do echo “Number = $number” number=$((number + 1)) done for…in 循环for...in循环用于遍历列表的每一项。 for循环会依次从list列表中取出一项，作为变量variable，然后在循环体中进行处理。 项目 bash csh for…in for variable in list do commands done 示例 #!/bin/bash for i in word1 word2 word3; do echo $i done 列表由通配符产生 for i in *.png; do ls -l $i done 列表通过子命令产生 #!/bin/bash count=0 for i in $(cat ~/.bash_profile); do count=$((count + 1)) echo “Word $count ($i) contains $(echo -n $i | wc -c) characters” done for 项目 bash csh for for (( expression1; expression2; expression3 )); do commands done 示例 for (( i=0; i&lt;5; i=i+1 )); do echo $i done #直到用户输入了一个点（.）为止，才会跳出循环for ((;;)) do read var if [ “$var” = “.” ]; then break fi done 参考文献 阮一峰.Bash 脚本教程[EB/OL].https://wangdoc.com/bash, 2020/12/21. 该教程的部分内容是比较完善的。 姊妹篇 csh 、 bash 的基础语法对照：变量 csh 、 bash 的基础语法对照：判断表达式 csh 、 bash 的基础语法对照：循环表达式","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://faradays-studio.gitee.io/tags/shell/"},{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"csh","slug":"csh","permalink":"https://faradays-studio.gitee.io/tags/csh/"},{"name":"bash","slug":"bash","permalink":"https://faradays-studio.gitee.io/tags/bash/"},{"name":"语法","slug":"语法","permalink":"https://faradays-studio.gitee.io/tags/%E8%AF%AD%E6%B3%95/"},{"name":"判断","slug":"判断","permalink":"https://faradays-studio.gitee.io/tags/%E5%88%A4%E6%96%AD/"},{"name":"表达式","slug":"表达式","permalink":"https://faradays-studio.gitee.io/tags/%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"while","slug":"while","permalink":"https://faradays-studio.gitee.io/tags/while/"},{"name":"for","slug":"for","permalink":"https://faradays-studio.gitee.io/tags/for/"}]},{"title":"csh 、 bash 的基础语法对照：判断表达式","slug":"csh与bash的基础语法对照_判断表达式","date":"2020-12-26T08:36:00.000Z","updated":"2022-02-19T01:45:07.140Z","comments":true,"path":"202012261636/","link":"","permalink":"https://faradays-studio.gitee.io/202012261636/","excerpt":"","text":"判断表达式使用 test 判断1. test 基本用法# 写法一 (不支持正则判断) test expression # 写法二(不支持正则判断) [ expression ] # 写法三 (支持正则判断) [[ expression ]] 2. 文件判断 [ -a file ]：如果 file 存在，则为true。 [ -b file ]：如果 file 存在并且是一个块（设备）文件，则为true。 [ -c file ]：如果 file 存在并且是一个字符（设备）文件，则为true。 [ -d file ]：如果 file 存在并且是一个目录，则为true。 [ -e file ]：如果 file 存在，则为true。 [ -f file ]：如果 file 存在并且是一个普通文件，则为true。 [ -g file ]：如果 file 存在并且设置了组 ID，则为true。 [ -G file ]：如果 file 存在并且属于有效的组 ID，则为true。 [ -h file ]：如果 file 存在并且是符号链接，则为true。 [ -k file ]：如果 file 存在并且设置了它的“sticky bit”，则为true。 [ -L file ]：如果 file 存在并且是一个符号链接，则为true。 [ -N file ]：如果 file 存在并且自上次读取后已被修改，则为true。 [ -O file ]：如果 file 存在并且属于有效的用户 ID，则为true。 [ -p file ]：如果 file 存在并且是一个命名管道，则为true。 [ -r file ]：如果 file 存在并且可读（当前用户有可读权限），则为true。 [ -s file ]：如果 file 存在且其长度大于零，则为true。 [ -S file ]：如果 file 存在且是一个网络 socket，则为true。 [ -t fd ]：如果 fd 是一个文件描述符，并且重定向到终端，则为true。用于判断是否重定向了标准输入／输出／错误。 [ -u file ]：如果 file 存在并且设置了 setuid 位，则为true。 [ -w file ]：如果 file 存在并且可写（当前用户拥有可写权限），则为true。 [ -x file ]：如果 file 存在并且可执行（有效用户有执行／搜索权限），则为true。 [ file1 -nt file2 ]：如果 FILE1 比 FILE2 的更新时间最近，或者 FILE1 存在而 FILE2 不存在，则为true。 [ file1 -ot file2 ]：如果 FILE1 比 FILE2 的更新时间更旧，或者 FILE2 存在而 FILE1 不存在，则为true。 [ FILE1 -ef FILE2 ]：如果 FILE1 和 FILE2 引用相同的设备和 inode 编号，则为true。 3. 字符串判断（==） [ string ]：如果string不为空（长度大于0），则判断为真。 [ -n string ]：如果字符串string的长度大于零，则判断为真。 [ -z string ]：如果字符串string的长度为零，则判断为真。 [ string1 = string2 ]：如果string1和string2相同，则判断为真。 [ string1 == string2 ] 等同于[ string1 = string2 ]。 [ string1 != string2 ]：如果string1和string2不相同，则判断为真。 [ string1 &#39;&gt;&#39; string2 ]：如果按照字典顺序string1排列在string2之后，则判断为真。 [ string1 &#39;&lt;&#39; string2 ]：如果按照字典顺序string1排列在string2之前，则判断为真。 注意，test命令内部的&gt;和&lt;，必须用引号引起来（或者是用反斜杠转义）。否则，它们会被 shell 解释为重定向操作符。 4. 整数判断（-eq） [ n1 -eq n2 ]：如果n1等于n2，则为true。 [ n1 -ne n2 ]：如果n1不等于n2，则为true。 [ n1 -le n2 ]：如果n1小于或等于n2，则为true。 [ n1 -lt n2 ]：如果n1小于n2，则为true。 [ n1 -ge n2 ]：如果n1大于或等于n2，则为true。 [ n1 -gt n2 ]：如果n1大于n2，则为true。 5. 正则判断（=~）#!/bin/bash INT=-5 if [[ &quot;$INT&quot; =~ ^-?[0-9]+$ ]]; then echo &quot;INT is an integer.&quot; exit 0 else echo &quot;INT is not an integer.&quot; &gt;&amp;2 exit 1 fi 多条件逻辑运算 AND运算：符号&amp;&amp;，也可使用参数-a。 OR运算：符号||，也可使用参数-o。 NOT运算：符号!。 通过 ((...)) 进行算术运算判断if ((3 &gt; 2)); then echo &quot;true&quot; fi if 配套 test 或 ((...)) 进行条件判断 项目 bash csh if if [ -f $a ];then echo “hello world!” fi if(expression)then commandsendif if {(command)} then commandsendif if(expression) then commandselse if(expression) then commandselse commandsendif case 的条件判断 项目 bash csh case case expression in pattern ) commands ;; pattern ) commands ;; …esac switch(“$value”)case pattern1: commands breakswcase pattern2: commands breakswdefault: commands breakswendsw bash 的case的匹配模式可以使用各种通配符，下面是一些例子。 a)：匹配a。 a|b)：匹配a或b。 [[:alpha:]])：匹配单个字母。 ???)：匹配3个字符的单词。 *.txt)：匹配.txt结尾。 *)：匹配任意输入，通过作为case结构的最后一个模式。 Bash 4.0之前，case结构只能匹配一个条件，然后就会退出case结构。Bash 4.0之后，允许匹配多个条件，这时可以用 ;;&amp; 终止每个条件块。 参考文献 脚本之家网.csh的基本语法介绍[EB/OL].https://www.jb51.net/article/57770.htm, 2020/12/21. iTech.csh 语法实例参考[EB/OL].https://www.cnblogs.com/itech/archive/2012/08/15/2640811.html, 2020/12/21. 阮一峰.Bash 脚本教程[EB/OL].https://wangdoc.com/bash, 2020/12/21. 该教程的部分内容是比较完善的。 脚本之家.shell中各种括号的作用详解()、(())、[]、[[]]、&#123;&#125;[EB/OL].https://www.jb51.net/article/123081.htm, 2020/12/24. 姊妹篇 csh 、 bash 的基础语法对照：变量 csh 、 bash 的基础语法对照：判断表达式 csh 、 bash 的基础语法对照：循环表达式","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://faradays-studio.gitee.io/tags/shell/"},{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"csh","slug":"csh","permalink":"https://faradays-studio.gitee.io/tags/csh/"},{"name":"bash","slug":"bash","permalink":"https://faradays-studio.gitee.io/tags/bash/"},{"name":"语法","slug":"语法","permalink":"https://faradays-studio.gitee.io/tags/%E8%AF%AD%E6%B3%95/"},{"name":"判断","slug":"判断","permalink":"https://faradays-studio.gitee.io/tags/%E5%88%A4%E6%96%AD/"},{"name":"表达式","slug":"表达式","permalink":"https://faradays-studio.gitee.io/tags/%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"if","slug":"if","permalink":"https://faradays-studio.gitee.io/tags/if/"}]},{"title":"Word 2016 脚注格式问题的处理","slug":"Word2016脚注格式的自定义方法","date":"2020-12-26T05:00:45.000Z","updated":"2020-12-26T06:03:58.731Z","comments":true,"path":"202012261300/","link":"","permalink":"https://faradays-studio.gitee.io/202012261300/","excerpt":"","text":"乖乖，这几天在 CNKI、VIP和万方上看论文，有几个比较熟悉的同事，不知不觉下就发了十多篇论文了。吓死宝宝，赶紧将 2 年前的未发表的论文拿出来修改。 在修改论文的过程中，居然遇到了两个奇怪的问题，捣腾了好久才给解决了。以下总结一下操作方法： 分栏内容从下一页起排版的问题 论文分栏居然从下一页开始，果断不能忍！！！刚开始的时候，我以为是存在隐藏的分页符，来回删除、重新插入，无法解决；然后以为是分栏操作方法不对，来回修改各种分栏方式以及插入方式，均无法解决。偶然间，不小心删除脚注后，分页正常了；这一下才找到解决问题的思路。 解决方法是：Word 选项》高级》兼容性选项：勾选按Word 6.x/95/97的方式安排脚注，如下图所示： 注意，在“高级”选项卡中须向下拖动滚动条才能显示该项配置 脚注内容前存在两个空行的问题 脚注默认的样式如下，存在两个空行，默认情况下无法编辑： 脚注格式的修改方法 进入 Web 版式视图 （点击下方快捷工具图标，或通过上方“视图”选项卡切换），点击 引用 选项卡下的 显示备注，初始界面如下： 在 脚注 下拉列表中选择 脚注分隔符 ，对下方编辑框中的空行进行删除，上述操作流程如下： 切回至 页面视图，保存即可完成修改。最终效果图如下： 参考文献 飞飞.WORD脚注和分栏冲突的解决办法[EB/OL].http://blog.sina.com.cn/s/blog_5fe506110100f2y0.html, 2020/12/25. 赵晓锋.Word教程：编辑脚注和尾注[EB/OL].http://blog.sciencenet.cn/blog-285749-350946.html, 2020/12/25.","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Word","slug":"Word","permalink":"https://faradays-studio.gitee.io/tags/Word/"},{"name":"Office","slug":"Office","permalink":"https://faradays-studio.gitee.io/tags/Office/"},{"name":"脚注","slug":"脚注","permalink":"https://faradays-studio.gitee.io/tags/%E8%84%9A%E6%B3%A8/"},{"name":"论文","slug":"论文","permalink":"https://faradays-studio.gitee.io/tags/%E8%AE%BA%E6%96%87/"},{"name":"分栏","slug":"分栏","permalink":"https://faradays-studio.gitee.io/tags/%E5%88%86%E6%A0%8F/"},{"name":"分隔符","slug":"分隔符","permalink":"https://faradays-studio.gitee.io/tags/%E5%88%86%E9%9A%94%E7%AC%A6/"}]},{"title":"csh 、 bash 的基础语法对照：变量","slug":"csh与bash的基础语法对照_变量","date":"2020-12-20T03:25:53.000Z","updated":"2022-02-19T01:47:08.917Z","comments":true,"path":"202012201125/","link":"","permalink":"https://faradays-studio.gitee.io/202012201125/","excerpt":"","text":"bash是现在很多Linux的发行版中默认的shell，它来自于 BSD Unix，语法非常类似于C语言，所以通常有 C/C++ 编程背景的开发人员最喜欢使用。不过我在工作中，一个主要系统的默认 shell 却是 csh 。因此我总结一下两种 shell 的语法特点。 变量用户变量 项目 bash csh 变量定义 变量名称=&quot;变量值&quot; set var 变量引用 $var$&#123;var&#125; $var$&#123;var&#125; 内置用法 $%x 表示变量的值的长度$?x 来判断变量x是否设置，如设置则为1，否则为0。 示例 a=&quot;abc&quot; echo $a set x = 7 echo $x 注意事项 = 的两边不能有空格，否则shell解释成名称和命令参数。bash变量默认都是字符串类型的。 使用 setenv var value 方式可以定义环境变量，所有子 shell 继承其变量值 Bash 变量名区分大小写，HOME和home是两个不同的变量。 字母、数字和下划线字符组成。 第一个字符必须是一个字母或一个下划线，不能是数字。 不允许出现空格和标点符号。如果变量的值包含空格，则必须将值放在引号中。 如果变量不存在，Bash 不会报错，而会输出空字符。 同一行定义多个变量或执行多个语句，必须使用分号 ; 分隔。 系统变量 env命令或printenv命令，可以显示所有环境变量；而且命令后面的变量名，不用加前缀$。如 printenv PATH 等同于 echo $PATH。 set 命令可以显示所有变量（包括环境变量和自定义变量），以及所有的 Bash 函数。 变量 定义 备注 $BASH Bash 程序的路径 $BASH_VERSION 系统Bash 版本号 $EUID “有效” 用户 ID $UID 用户 ID $UID 是一个只读变量，不能在命令行或者脚本中修改它，在 /etc/passwd 文件中定义。 $GROUPS 用户组名 在 /etc/passwd 文件中定义。 $HOME 用户主目录 在 /etc/passwd 文件中定义。 $PWD 工作目录(当前目录) 这与内置命令 pwd 的作用相同。 $HOSTNAME 主机名 $IFS 内部域分隔符 $IFS 默认为空白(空格, 制表符,和换行符)，可以通过赋值改变。 $* 就是使用的 $IFS 的第一个字符来分隔位置参数的。 $PATH 可执行文件的搜索路径 $PS1 主提示符 普通用户默认提示符是 $，超级用户（root 用户）默认提示符是 #。 $PS2 第二提示符 默认值为 &gt; $PS4 第二提示符 使用 -x 选项来调用脚本时，这个提示符会出现在每行输出的开头，默认为 + 在 GNU 指令中，如果单独使用 - 符号，不加任何该加的文件名称时，代表 标准输入 的意思。 cat -： cat - &gt; test.txt 表示在屏幕里输入什么，都会在test.txt中输出。 (cd /source/directory &amp;&amp; tar cf - . ) | (cd /dest/directory &amp;&amp; tar xpvf -) ：压缩/source/directory下的文件，输出作为下一个命令的输入；更改当前目录到/dest/directory，解压文件 tar xpvf -：标准输入读取资料并解压 cd -：切换到上次的工作目录 函数的参数变量 变量 定义 备注 $0 脚本的名称 $1, $2,…,$&#123;n&#125; 位置 参数 当 n&gt; 9 时，必须使用花括号 &#123;&#125; 包围数字 n。 $# 位置参数的个数 $*, $@ 位置参数数组 &quot;$*&quot; 表示的是所有参数拼接成一个字符串，与 $*、&quot;$@&quot;、$@ 表达的数组概念是不同的。 $! 运行在后台的 最后一个 作业的 PID $$ 当前 bash 脚本的 PID $PPID 当前 bash 脚本父进程的 PID $- 当前 Shell 的启动参数 $_ 命令的 最后一个 参数的值 $? 命令的退出状态码 一般表示命令执行成功或失败： 0 ** 表示成功，其它值** 表示错误。比如 cp 命令，退出状态码 1 表示文件没有找到，2 表示文件不可读，3 表示目标目录没有找到，4 表示目标目录不可写，5 表示一般性错误。 在为shell脚本传递的参数中如果包含空格，应该使用单引号或者双引号将该参数括起来，以便于脚本将这个参数作为整体来接收。 变量特性 readonly: 只读变量 local: 局部变量（仅在当前shell实例中有效，其他shell启动的程序不能访问局部变量。）。 unset：删除变量，如 unset variable_name。变量被删除后不能再次使用。unset 命令不能删除只读变量。 let：整数变量。 参考文献 脚本之家网.csh的基本语法介绍[EB/OL].https://www.jb51.net/article/57770.htm, 2020/12/21. iTech.csh 语法实例参考[EB/OL].https://www.cnblogs.com/itech/archive/2012/08/15/2640811.html, 2020/12/21. 菜鸟教程.Shell 变量[EB/OL].https://www.runoob.com/linux/linux-shell-variable.html, 2020/12/24. sparkdev.常见 Bash 内置变量介绍[EB/OL].https://www.cnblogs.com/sparkdev/p/9934595.html, 2020/12/24. 361way.com.ssh几个超时参数[EB/OL].http://www.361way.com/ssh-autologout/4679.html, 2020/12/24. 13070026王志东.3种shell自动交互的方法[EB/OL].https://www.cnblogs.com/evi10032/p/5455990.html, 2021/02/12. Mykola Ulianytskyi.Expect Download for Linux[EB/OL].https://pkgs.org/download/expect, 2021/02/12. 姊妹篇 csh 、 bash 的基础语法对照：变量 csh 、 bash 的基础语法对照：判断表达式 csh 、 bash 的基础语法对照：循环表达式","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://faradays-studio.gitee.io/tags/shell/"},{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"csh","slug":"csh","permalink":"https://faradays-studio.gitee.io/tags/csh/"},{"name":"bash","slug":"bash","permalink":"https://faradays-studio.gitee.io/tags/bash/"},{"name":"变量","slug":"变量","permalink":"https://faradays-studio.gitee.io/tags/%E5%8F%98%E9%87%8F/"},{"name":"语法","slug":"语法","permalink":"https://faradays-studio.gitee.io/tags/%E8%AF%AD%E6%B3%95/"},{"name":"$","slug":"","permalink":"https://faradays-studio.gitee.io/tags/"}]},{"title":"pacman 包管理器的用法概述","slug":"Arch系Linux系统pacman用法概述","date":"2020-11-22T02:04:14.000Z","updated":"2020-12-29T15:49:42.548Z","comments":true,"path":"202011221004/","link":"","permalink":"https://faradays-studio.gitee.io/202011221004/","excerpt":"","text":"pacman 是 Arch/Manjaro Linux 下的包管理软件。它将一个简单的二进制包格式和易用的构建系统结合了起来。不管软件包是来自官方的 Arch 库还是用户自己创建， pacman 都能方便得管理。 pacman 基本用法-h 查看帮助pacman &#123;-h --help&#125; -V 查看版本pacman &#123;-V --version&#125; -D 管理数据库选项pacman &#123;-D --database&#125; &lt;选项&gt; &lt;软件包&gt; 选项 含义 备注 –asdeps 标记为非单独指定安装的软件包 –asexplicit 标记为单独指定安装的软件包 –config &lt;路径&gt; 指定另外的配置文件 –logfile &lt;路径&gt; 指定另外的日志文件 –noconfirm 不询问确认 –noprogressbar 下载文件时不显示进度条 –noscriptlet 不执行安装小脚本 -v, –verbose 循环执行 –debug 显示除错信息 -r, –root &lt;路径&gt; 指定另外的安装根目录 -b, –dbpath &lt;路径&gt; 指定另外的数据库位置 –cachedir &lt;目录&gt; 指定另外的软件包缓存位置 –arch &lt;架构&gt; 设定另外的架构 -Q 查询安装包pacman &#123;-Q --query&#125; [选项] [软件包] 选项 含义 备注 -c, –changelog 查看某软件包的更新日志 -d, –deps 列出所有作为依赖关系安装的软件包 [过滤器] -e, –explicit 列出所有单独指定安装的软件包 [过滤器] -g, –groups 查看某软件包组所属的所有软件包 -i, –info 查看软件包信息 -ii查看备份文件 -k, –check 检查该软件包拥有的文件是否存在 -l, –list 列出被查询软件包的内容 -m, –foreign 列出没有在同步数据库时找到的已安装软件包 [过滤器] -o, –owns &lt;文件&gt; 查询哪个软件包拥有 &lt;文件&gt; -p, –file &lt;软件包&gt; 从某个软件包而不是数据库查询 -s, –search 搜寻符合指定字符串的已安装本地的软件包 -t, –unrequired 列出所有不被其他软件包要求的软件包 [过滤器] -u, –upgrades 列出所有可升级的软件包 [过滤器] -q, –quiet 在查询或搜索时显示较少的信息 –config &lt;路径&gt; 指定另外的配置文件 –logfile &lt;路径&gt; 指定另外的日志文件 –noconfirm 不询问确认 –noprogressbar 下载文件时不显示进度条 –noscriptlet 不执行安装小脚本 -v, –verbose 循环执行 –debug 显示除错信息 -r, –root &lt;路径&gt; 指定另外的安装根目录 -b, –dbpath &lt;路径&gt; 指定另外的数据库位置 –cachedir &lt;目录&gt; 指定另外的软件包缓存位置 –arch &lt;架构&gt; 设定另外的架构 -R 删除安装包pacman &#123;-R --remove&#125; [选项] &lt;软件包&gt; 选项 定义 备注 -c, –cascade 删除软件包及所有的依赖于此的软件包 -d, –nodeps 略过依赖关系检查 -k, –dbonly 只删除数据库记录，不删除文件 -n, –nosave 同时删除配置文件 -s, –recursive 同时删除(不会破坏其他软件包的) 依赖关系 -ss·也包括单独指定安装的依赖关系 -u, –unneeded 同时删除不需要的(且不会破坏其他软件包的) 依赖关系 –print 仅打印目标而不执行操作 –print-format &lt;字符串&gt;指定如何打印目标 –config &lt;路径&gt; 指定另外的配置文件 –logfile &lt;路径&gt; 指定另外的日志文件 –noconfirm 不询问确认 –noprogressbar 下载文件时不显示进度条 –noscriptlet 不执行安装小脚本 -v, –verbose 循环执行 –debug 显示除错信息 -r, –root &lt;路径&gt; 指定另外的安装根目录 -b, –dbpath &lt;路径&gt; 指定另外的数据库位置 –cachedir &lt;目录&gt; 指定另外的软件包缓存位置 –arch &lt;架构&gt; 设定另外的架构 -S 安装安装包pacman &#123;-S --sync&#125; [选项] [软件包] 选项 含义 备注 –asdeps 作为非单独指定安装的软件包安装 –asexplicit 作为单独指定安装的软件包安装 -c, –clean 从缓存目录中删除旧软件包 -cc清除所有 -d, –nodeps 略过依赖关系检查 -f, –force 强制安装，覆盖存在冲突的文件 -g, –groups 查看某软件包组所属的所有软件包 -i, –info 查看软件包信息 -l, –list &lt;软件库&gt; 查看在该软件库中的软件包清单 -s, –search &lt;regex表达式&gt; 按照指定字符串查询远端软件库 -u, –sysupgrade 升级所有已安装的软件包 -uu可启用降级 -w, –downloadonly 下载但不安装/升级软件包 -y, –refresh 从服务器下载新的软件包数据库 –needed 不重新安装已经为最新的软件包 –ignore &lt;软件包&gt; 升级时忽略某个软件包 (可多次使用) –ignoregroup &lt;软件包组&gt;升级时忽略某个软件包组 (可多次使用) –print 仅打印目标而不执行操作 –print-format &lt;字符串&gt;指定如何打印目标 -q, –quiet 在查询或搜索时显示较少的信息 –config &lt;路径&gt; 指定另外的配置文件 –logfile &lt;路径&gt; 指定另外的日志文件 –noconfirm 不询问确认 –noprogressbar 下载文件时不显示进度条 –noscriptlet 不执行安装小脚本 -v, –verbose 循环执行 –debug 显示除错信息 -r, –root &lt;路径&gt; 指定另外的安装根目录 -b, –dbpath &lt;路径&gt; 指定另外的数据库位置 –cachedir &lt;目录&gt; 指定另外的软件包缓存位置 –arch &lt;架构&gt; 设定另外的架构 -U 更新安装包pacman &#123;-U --upgrade&#125; [选项] &lt;文件&gt; 选项 含义 备注 –asdeps 作为非单独指定安装的软件包安装 –asexplicit 作为单独指定安装的软件包安装 -d, –nodeps 略过依赖关系检查 -f, –force 强制安装，覆盖存在冲突的文件 -k, –dbonly 添加数据库记录，不安装或保持现存文件 –print 仅打印目标而不执行操作 –print-format &lt;字符串&gt; 指定如何打印目标 –config &lt;路径&gt; 指定另外的配置文件 –logfile &lt;路径&gt; 指定另外的日志文件 –noconfirm 不询问确认 –noprogressbar 下载文件时不显示进度条 –noscriptlet 不执行安装小脚本 -v, –verbose 循环执行 –debug 显示除错信息 -r, –root &lt;路径&gt; 指定另外的安装根目录 -b, –dbpath &lt;路径&gt; 指定另外的数据库位置 –cachedir &lt;目录&gt; 指定另外的软件包缓存位置 –arch &lt;架构&gt; 设定另外的架构 参考文献 乌托邦2号.pacman用法[EB/OL].https://blog.csdn.net/taiyang1987912/article/details/41253533, 2020/11/22.","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"Arch","slug":"Arch","permalink":"https://faradays-studio.gitee.io/tags/Arch/"},{"name":"Manjaro","slug":"Manjaro","permalink":"https://faradays-studio.gitee.io/tags/Manjaro/"},{"name":"pacman","slug":"pacman","permalink":"https://faradays-studio.gitee.io/tags/pacman/"}]},{"title":"jQuery 用法入门","slug":"jQuery用法总结","date":"2020-10-05T14:46:45.000Z","updated":"2021-03-08T12:17:54.771Z","comments":true,"path":"202010052246/","link":"","permalink":"https://faradays-studio.gitee.io/202010052246/","excerpt":"","text":"概述虽然已经 2020 年了，但是，对于非专业编程人士来说，使用 jQuery 仍然是一个不错的选择的。因为它是一个希望用户 写的少，做的多 的 JavaScript 库，并得到了广泛的使用。它具有以下功能： HTML 元素选取 HTML 元素操作 CSS 操作 HTML 事件函数 JavaScript 特效和动画 HTML DOM 遍历和修改 AJAX Utilities 我并非是职业写程序的，既没有完整的时间去学习，也没有那样的环境让我学习；只是偶尔由于工作需要使用编程工具，因此 jQuery 帮我快速地完成了网站菜单、网站 UI 等其他工具没有帮我完成的事情。因此，虽然知乎等网站上充斥着大量的批评jQuery的意见，我仍然愿意选用 jQuery 来帮我完成工作上的一些编程任务。 jQuery版本 1.xx 的版兼容 IE 6/7/8，官方只做 BUG 维护，功能不再新增。最终版本：1.12.4 (2016年5月20日) 2.xx 版本不兼容 IE 6/7/8，官方只做 BUG 维护，功能不再新增。 3.xx 版本不兼容 IE 6/7/8，只支持最新的浏览器。并且很多老的jQuery插件不支持 3.x 版。目前该版本是官方主要更新维护的版本。 压缩版（mini,js）与未压缩版本的功能一致，区别只在于文件大小 引用 jQuery 到 HTML在网页中引入 jQuery 库的方法有很多种，简单总结如下： 本地引用 &lt;head&gt; &lt;script src=&quot;jquery-1.10.2.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; JavaScript 是 HTML5 以及所有现代浏览器中的默认脚本语言！因此没有必要在 &lt;script&gt; 标签中使用 type=&quot;text/javascript&quot; 了。 CDN 引用 &lt;head&gt; &lt;script src=&quot;https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://upcdn.b0.upaiyun.com/libs/jquery/jquery-2.0.2.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://lib.sinaapp.com/js/jquery/2.0.2/jquery-2.0.2.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://ajax.aspnetcdn.com/ajax/jquery/jquery-1.9.0.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; 使用 CDN 的原因许多用户在访问其他站点时，已经从百度、又拍云、新浪、谷歌或微软加载过 jQuery。所以结果是，当他们访问您的站点时，会从缓存中加载 jQuery，这样可以减少加载时间。同时，大多数 CDN 都可以确保当用户向其请求文件时，会从离用户最近的服务器上返回响应，这样也可以提高加载速度。 jQuery 的语法jQuery 库的引用字符当然要在 JavaScript 语句中指明使用的是 jQuery 库，否则网页怎么知道呢？用法有两种： 最常见： $ ，如 $(&quot;#ID值&quot;); ； 最安全： jQuery ，如 jQuery(&quot;#ID值&quot;); 。 这两种我都用过，不过网上最常见的是第一种用法，后续也采用这种表述，字面上简洁一些。 入口函数为了确保 JavaScript 脚本能够正确执行，建议 jQuery 的编写如下： &lt;script&gt; $(function()&#123; // 开始写 jQuery 代码... &#125;); &lt;/script&gt; 这是为了防止文档在完全加载（就绪）之前运行 jQuery 代码，即在 DOM 加载完成后才可以对 DOM 进行操作。上述方法可以对多个脚本片段进行加载。 语法公式$(selector).action() 选择符（selector）：需要 “查询”和”查找” HTML 元素 action()：执行对元素的操作 $(this).hide() - 隐藏当前元素 $(&quot;p&quot;).hide() - 隐藏所有 &lt;p&gt; 元素 $(&quot;p.test&quot;).hide() - 隐藏所有 class=&quot;test&quot; 的 &lt;p&gt; 元素 $(&quot;#test&quot;).hide() - 隐藏 id=&quot;test&quot; 的元素 jQuery 选择器jQuery 选择器允许您对 HTML 元素组或单个元素进行操作。它基于已经存在的 CSS 选择器，实现对元素的 id、类、类型、属性、属性值等 “查找”（或选择）HTML 元素的功能。 选择器的基本用法 //id选择器 $(&quot;#ID值&quot;); //标签选择器 $(&#39;tagName&#39;); //class类选择器 $(&#39;.className&#39;); //交集选择器,选择两个条件同时成立的标签 $(&#39;div.c1&#39;); //选择class=c1的div标签 //并集选择器，选择满足以下条件中任意一个的所有标签 $(&#39;#d,.c1,p&#39;); //选择id=d的标签，具有class=c1的标签，标签是p的标签。 //所有元素选择器 $(&#39;*&#39;); //选择所有的标签 多层匹配选择 jQuery 的选择器不仅可以选择一个层级的元素，还可以像串珠子一样依次选择多个层级的元素，化简代码的处理逻辑，主要方法如下： //后代选择器 $(&#39;a b&#39;); //处于a标签级别下的所有b标签，用空格分开。 //子类选择器 $(&#39;a&gt;b&#39;); //处于a标签级别下一级别的所有b标签。 //毗邻单一弟弟选择器 $(&#39;a+b&#39;); //与a标签同一级别的紧挨着a标签的b标签。 //毗邻多个弟弟选择器 $(&#39;a~b&#39;); //与a标签同一级别的位于a标签之后的所有b标签。 精确筛选元素 嗯，jQuery 还可以精确地筛选第 1 个、最后 1 个等元素，相当方便，如下： 选择器 实例 选取 :first $(“p:first”) 第一个 &lt;p&gt; 元素 :last $(“p:last”) 最后一个 &lt;p&gt; 元素 :even $(“tr:even”) 所有偶数 &lt;tr&gt; 元素，索引值从 0 开始，第一个元素是偶数 (0)，第二个元素是奇数 (1)，以此类推。 :odd $(“tr:odd”) 所有奇数 &lt;tr&gt; 元素，索引值从 0 开始，第一个元素是偶数 (0)，第二个元素是奇数 (1)，以此类推。 :first-child $(“p:first-child”) 属于其父元素的第一个子元素的所有 &lt;p&gt; 元素 :first-of-type $(“p:first-of-type”) 属于其父元素的第一个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素 :last-child $(“p:last-child”) 属于其父元素的最后一个子元素的所有 &lt;p&gt; 元素 :last-of-type $(“p:last-of-type”) 属于其父元素的最后一个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素 :nth-child(n) $(“p:nth-child(2)”) 属于其父元素的第二个子元素的所有 &lt;p&gt; 元素 :nth-last-child(n) $(“p:nth-last-child(2)”) 属于其父元素的第二个子元素的所有 &lt;p&gt; 元素，从最后一个子元素开始计数 :nth-of-type(n) $(“p:nth-of-type(2)”) 属于其父元素的第二个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素 :nth-last-of-type(n) $(“p:nth-last-of-type(2)”) 属于其父元素的第二个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素，从最后一个子元素开始计数 :only-child $(“p:only-child”) 属于其父元素的唯一子元素的所有 &lt;p&gt; 元素 :only-of-type $(“p:only-of-type”) 属于其父元素的特定类型的唯一子元素的所有 &lt;p&gt; 元素 当然，如果涉及上下层级之间的关系切换，那就需要在选择器的基础上使用筛选方法了。 选择器 实例 选取 parent &gt; child $(“div &gt; p”) &lt;div&gt; 元素的直接子元素的所有 &lt;p&gt; 元素 parent descendant $(“div p”) &lt;div&gt; 元素的后代的所有 &lt;p&gt; 元素 element + next $(“div + p”) 每个 &lt;div&gt; 元素相邻的下一个 &lt;p&gt; 元素 element ~ siblings $(“div ~ p”) &lt;div&gt; 元素同级的所有 &lt;p&gt; 元素 表单的筛选 方法 说明 $(“:text”); 找出type=”text”(文本)的input标签 $(“:password”); 找出type=”password”（密码）的input标签 $(“:file”); 找出type=”file”（文件）的input标签 $(“:radio”); 找出type=”radio”（单选框）的input标签 $(“:checkbox”); 找出type=”checkbox”（多选框）的input标签 $(“:submit”); 找出type=”submit”的input标签 $(“:reset”); 找出type=”reset”的input标签 $(“:button”); 找出type=”button”的input标签 注意：$(“:text”)与$(“input:text”);结果相同 表单对象的属性 方法 说明 $(“input:enabled”); 找出属性为enabled（可用）的input标签 $(“input:disabled”); 找出属性为disabled（不可用）的input标签 $(“input:checked”); 找出属性为checked（显示默认选择）的input标签 $(“:selected”); 找出属性为selected（显示默认选择）的option标签 jQuery 的方法jQuery 方法涉及到事件的操作方法、元素的筛选方法以及元素的动态效果等等。由于该部分内容较为复杂，此处不再展开，详询参考文献 6-12 相关部分。 参考文献 张三帅.jQuery[EB/OL].https://www.cnblogs.com/mingkong-z/articles/9131866.html, 2020/10/05. 老佐.JavaScript 及 jQuery 常用dom操作方法[EB/OL].https://www.cnblogs.com/html5css3js/p/4550666.html, 2020/10/05. hemin.jQuery 1.12.1 速查表[EB/OL].http://hemin.cn/jq/, 2020/10/05. minoz.JQuery字符串的操作[EB/OL].https://www.cnblogs.com/minozMin/p/8328028.html, 2020/10/05. 菜鸟教程.jQuery 安装[EB/OL].https://www.runoob.com/jquery/jquery-install.html, 2020/10/07. 菜鸟教程.jQuery 选择器[EB/OL].https://www.runoob.com/jquery/jquery-ref-selectors.html, 2020/10/07. 菜鸟教程.jQuery 事件方法[EB/OL].https://www.runoob.com/jquery/jquery-ref-events.html, 2020/10/07. 菜鸟教程.jQuery 效果方法[EB/OL].https://www.runoob.com/jquery/jquery-ref-effects.html, 2020/10/07. 菜鸟教程.jQuery HTML / CSS 方法[EB/OL].https://www.runoob.com/jquery/jquery-ref-html.html, 2020/10/07. 菜鸟教程.jQuery 遍历 方法[EB/OL].https://www.runoob.com/jquery/jquery-ref-traversing.html, 2020/10/07. 菜鸟教程.jQuery AJAX 方法[EB/OL].https://www.runoob.com/jquery/jquery-ref-ajax.html, 2020/10/07. 菜鸟教程.jQuery 杂项方法[EB/OL].https://www.runoob.com/jquery/jquery-ref-misc.html, 2020/10/07.","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://faradays-studio.gitee.io/tags/JavaScript/"},{"name":"jQuery","slug":"jQuery","permalink":"https://faradays-studio.gitee.io/tags/jQuery/"}]},{"title":"评《Margin Call》：高个不挑担，世上永无光","slug":"MarginCall影评-世上再无屠龙的少年","date":"2020-10-02T02:08:23.000Z","updated":"2020-12-26T10:22:53.919Z","comments":true,"path":"202010021008/","link":"","permalink":"https://faradays-studio.gitee.io/202010021008/","excerpt":"","text":"直到落幕，我才意识到 《Margin Call》（商海通牒） 已经结束，可是对它的感悟我才刚刚开始… 剧本 ☆☆☆☆ 场景 ☆☆☆☆ 演绎 ☆☆☆☆ 综合 ☆☆☆☆ 剧情摘要整个故事不复杂：一家公司正在大幅裁员，领导 Sam 带头鼓掌并发表了鼓舞人心的讲话，员工们纷纷加班至深夜；努力工作的新员工 Peter 在别人下班去娱乐的时候，发现了公司风险模型预测到未来走势将大幅下跌，光是一层楼 25% 的亏损将超过公司的市值，立即汇报领导 Will ，领导也汇报他的领导 Sam，最后二把手贾德·科恩也在凌晨 2 点乘坐直升机来到公司，并决策抛售公司资产、及时止损。 整部电影一直都没有正面展开商业斗争的波谲云诡（bō jué yún guǐ），而是大量了使用了各种背景阐述，各种侧面语言动作渲染。电影的节奏一直比较缓慢，没有快步奔跑的员工，也没有大幅的悲伤情绪，即使大结局了，既没有看到行业动荡的场景，也没有被阴谋拖入破产骗局的投资人纷纷跳楼的场景；只见暗淡的月色底下，与会者深锁的眉头、凝重的表情，晦涩难懂、含糊不清的经营风险陈述，与员工们纸醉金迷的生活、老板来去直升机、投资人高大上言论形成鲜明的对比。 Eric Dale （艾力克·戴尔）负责风险管理部门，工作了 19 年的员工，秋毫不觉就被即时辞退了。他希望在离职时将工作交接清楚，可是无论是人力资源部门主管还是自己的直属领导 Will Emerson，都没有人搭理他；在电梯门关闭之际，他将做了一半工作的资料U盘给了赶来告别的新员工 Peter，然后到了楼下工作手机就被公司关停了。 发生问题后公司想请他说清楚以及对数据进行保密时，公司才发现已经联系不上他了，只能等到凌晨他妻子打来电话说他在家了，公司才决定去他家里找他、用每小时 17 万多美元的代价来要求他对公司的风险秘密予以保守一天。 社会感悟个人利益至上，屠龙少年终成恶龙尽管行业性的经济危机将至，但只有一个镜头表现了 2008 年经济大动荡的可怕的之处——因年入 25 万美元而自豪不已的小员工 Seth （赛斯·布雷格曼）面对即将辞退的困境，在卫生间里边痛哭失声，他十多分钟前还镇定自若地说，OK！ 公司的领导人 Sam 尽管工作了 34 年，积累了大量的财富，作为人性未泯的领导者，他依然无法放弃对利益的追逐。 他是靠公司体制成功的领导者。他入职早，高高在上，做出英明的决策，英明地裁员、果断地抛售资产，然而公司的主要利润都是那些小员工辛辛苦苦赚来的，他甚至不知道的如何看明白预示着公司未来的曲线怎么看、指标是什么，他也记不住下层员工的名字，但是不影响他拿着公司基层无法企及、难以想象的高薪。他的狗生病了，每天都要花费一千美元治病，他太过于悲伤甚至于不觉得80%的下属被辞退了能怎么样，毕竟他早已从长期的人员流动中变得麻木不仁了！ 他来自基层，也拼搏过，因此他同情弱者、忧心行业，良心未泯。 Sam 的手下员工，不乏能力卓著的年轻人，比如说火箭科学家 Peter（彼得·苏利文）；也有出身不凡的得力下属，比如说桥梁工程师 Eric。因此，当二把手要求他出售资产时，他考虑到了对行业的影响以及年轻人的未来，他质疑何为老板毫无选择，他拒绝聆听风险评估，他嚎叫老板让开，他一次又一次地拒绝了二把手的要求，直到杰瑞开出了天价的报酬。 他是利益追逐的一员，当首席风险评估分析师 Sarah（莎拉·罗伯森）等其他部门的人员被二把手说服后，他也自甘堕落，即使明知严重违反良知与诚信，明知 3/7 的人员还将被裁决，他仍然镇定自若地完成了所有下属的工作安排——在一天之内完成风险资产的全部抛售，那么是打六五折也可以。跟他的下属 Will 一样，渴望保留人性，但无法拒绝金钱利益的侵蚀—— Will 站在楼顶做出跳楼的假动作，他颤动地看着深渊，最终还是说“not today”，并向下属员工轻描淡写地描述了去年收入的 250 万美元是如何轻而易举地全部花完的！ 遍身罗绮者，不是养蚕人 评估员塞斯问长官威尔，这次的危机会给平常人带来的影响？ 威尔这样说：这些普通人，他们想要的生活就是香车豪宅，但是他们根本负担不起。这就是为什么我们这么重要，我们是他们豪华生活的根本原因。我们用手指在他们天平的一端压了一下，我们抽走手指，那时候才是真正的公平社会，但是他们马上就会不干。他们想要我们给的东西，但是又喜欢假装不知道这些东西是怎么来的。他们装伪君子比我强多了，去他们的吧！ 尽管二把手很年轻，但是手段非常老到，他左右拉拢员工，用尽方法；他信口开河，满是利益，让人毫无拒绝的可能性。是的，无论是 Sam 还是 Jerry，尽管技术能力平平，但是都心狠手辣，善于言谈，洞察人心，这是他们驱动那些比他们更有技术手段的人为他们卖命赚钱！ 更绝的是，最后的老大 John（约翰·图尔德），更是老手中的老手，他左一句你可以 保留 股份与分红，右一句 及时止损比整年焦头烂额更好 的深入分析，直接将 Sam 说服了。将相本无种，奈何无论人数如何变化，富贵与贫贱的比例永远不变，无论时间过去多长，名利的游戏将永存不朽，历史中的一次次经济危机游戏给了我们无限的启迪： 1637年、1797年、1819年、1837年、1857年、1884年、1901年、1907年、1929年、1937年、1974年、1987年、1992年、1997年、2000年、还有这次，不管我们叫它什么，一样的缘故，一次又一次，我们挡都挡不住，我们还想阻止它，控制它，甚至放慢它，我们的本性一丁点都没变，我们仅仅是随机应变，如果对了就赚一大笔，如果错了就被晾到一边，这个世界上过去会有，将来也会有，同样比例的赢家和输家，得意洋洋者和垂头丧气者，撑的撑死，饿的饿死，今天像我们这样的人也许前所未有的多，但是那个比例，原封未动。 历史总是存在输家和赢家，至此， Sam 完全被征服；他已毫不在乎之前是如何如何地一次次的痛苦挣扎， 唯余 “我只是不想事情发展到如此操蛋的地步！” 的感叹给观众去慢慢品味！ 夜晚， Sam 回到前妻的房前，埋葬了自己深爱的狗，也埋葬了自己的良心。 从来都没有屠龙的英雄，有的都是最终都会皮毛并带角的怪兽！公平、平等一直都在头部玩家的口中，从来都不曾真正广泛存在过：古今中外，资本逐利，2% 的头部资本家拥有绝对控股的资源，也许一部分人分到了羹汤成为了人上人，但始终不可能让广大底层人员享受到福利，从来如此，社会主义建设之路何其远哉！","categories":[{"name":"坐井观天","slug":"坐井观天","permalink":"https://faradays-studio.gitee.io/categories/%E5%9D%90%E4%BA%95%E8%A7%82%E5%A4%A9/"}],"tags":[{"name":"影评","slug":"影评","permalink":"https://faradays-studio.gitee.io/tags/%E5%BD%B1%E8%AF%84/"},{"name":"Margin Call","slug":"Margin-Call","permalink":"https://faradays-studio.gitee.io/tags/Margin-Call/"},{"name":"商海通牒","slug":"商海通牒","permalink":"https://faradays-studio.gitee.io/tags/%E5%95%86%E6%B5%B7%E9%80%9A%E7%89%92/"}]},{"title":"在 Shell 中使用 printf 格式化输出语句","slug":"在Shell中使用printf格式化输出语句","date":"2020-09-29T12:08:22.000Z","updated":"2021-02-14T13:34:18.400Z","comments":true,"path":"202009292008/","link":"","permalink":"https://faradays-studio.gitee.io/202009292008/","excerpt":"","text":"在使用 shell 编程的过程，难免要进行内容输出，我们一般情况下都使用 echo 命令进行输出，如 echo &quot;Hello, World&quot; ，不过功能比较有限；如果需要高级的格式化功能控制，那么应当使用 printf 命令。 printf 由 POSIX 标准所定义，是C语言 `printf()` 库函数的一个有限的变形（在语法上也有些不同），是 echo 命令的增强版。 printf 不像 echo 那样会自动换行，必须显式添加换行符 `\\n` 。语法说明printf 命令的语法printf &#123;format-string1 format-string2...&#125; [arguments1 arguments2...] format-string 为格式控制字符串（可以没有引号，但最好加上，单引号、双引号均可；多个格式字符使用空格进行分隔），按 %[标志][输出最小宽度][.精度][长度]类型 格式书写： 标志：即正负号或进制符号的设定 标 志 意义 - 结果左对齐，右边填空格 + 输出符号(正号或负号) 空格 输出值为正时冠以空格，为负时冠以负号 # 对c、s、d、u类无影响； 对o类，在输出时加前缀o； 对x类，在输出时加前缀0x； 对e、g、f 类当结果有小数时才给出小数点。 输出最小宽度：用十进制整数来表示输出的最少位数。若实际位数多于定义的宽度，则按实际位数输出，若实际位数少于定义的宽度则补以 空格 或 0。 精度：以 . 开头，后跟十进制整数。本项的意义是：如果输出数字，则表示小数的位数；如果输出的是字符，则表示输出字符的个数；若实际位数大于所定义的精度数，则截去超过的部分。 长度：格式符分为h、l两种， h 表示按短整型量输出，l 表示按长整型量输出。 类型：即输出数据的变量类型设定 格式字符 意义 d 以十进制形式输出带符号整数(正数不输出符号) o 以八进制形式输出无符号整数(不输出前缀0) x,X 以十六进制形式输出无符号整数(不输出前缀Ox) u 以十进制形式输出无符号整数 f 以小数形式输出单、双精度实数 e,E 以指数形式输出单、双精度实数 g,G 以%f或%e中较短的输出宽度输出单、双精度实数 c 输出单个字符 s 输出字符串 举例 %d 表示按十进制整型输出； %ld 表示按十进制长整型输出； %c 表示按字符型输出等。 arguments 为参数列表（多个参数使用空格分隔，不用逗号；若 arguments 多于 format-string 时，format-string 将自动重用）。 参数来自于前序程序段，也就是需要格式化输出的变量。 printf 命令的转义序列由于部分控制字符并不含在变量（参数）中，也无法使用格式控制符导入，比如变量之间的连接符等等，因此需要使用转义字符来完善格式化功能。最常见的就是增加换行符和制表符等，如 printf &quot;Hello, Shell\\n&quot; 。 序列 说明 \\a 警告字符，通常为 ASCII 的 BEL 字符 \\b 后退 \\c 抑制（不显示）输出结果中任何结尾的换行字符（只在 %b 格式指示符控制下的参数字符串中有效），而且，任何留在参数里的字符、任何接下来的参数以及任何留在格式字符串中的字符，都被忽略 \\f 换页（formfeed） \\n 换行 \\r 回车（Carriage return） \\t 水平制表符 \\v 垂直制表符 \\ 一个字面上的反斜杠字符 \\ddd 表示 1 到 3 位数八进制值的字符。仅在格式字符串中有效 \\0ddd 表示 1 到 3 位的八进制值字符 使用示例 示例1（shell 示例） #!/bin/bash # author: david faraday # created: 2020/10/05 17:05:13 # format-string为双引号 printf &quot;%d %s\\n&quot; 1 &quot;abc&quot; # 单引号与双引号效果一样 printf &#39;%d %s\\n&#39; 1 &quot;abc&quot; # 没有引号也可以输出 printf %s abcdef # 格式只指定了一个参数，但多出的参数仍然会按照该格式输出，format-string 被重用 printf %s abc def printf &quot;%s\\n&quot; abc def printf &quot;%s %s %s\\n&quot; a b c d e f g h i j # 如果没有 arguments，那么 %s 用NULL代替，%d 用 0 代替 printf &quot;%s and %d \\n&quot; 上述输出结果为： 1 abc 1 abc abcdefabcdefabc def a b c d e f g h i j and 0 示例2：表格化输出 #!/bin/bash # author: david faraday # created: 2020/10/05 17:15:25 printf &quot;%-10s %-8s %-4s\\n&quot; 姓名 性别 体重kg printf &quot;%-10s %-8s %-4.2f\\n&quot; 郭靖 男 66.1234 printf &quot;%-10s %-8s %-4.2f\\n&quot; 杨过 男 48.6543 printf &quot;%-10s %-8s %-4.2f\\n&quot; 郭芙 女 47.9876 %-10s 指一个宽度为 10 个字符（ - 表示左对齐，没有则表示右对齐），任何字符都会被显示在 10 个字符宽的字符内，如果不足则自动以空格填充，超过也会将内容全部显示出来。%-4.2f 指格式化为小数，其中 .2 指保留 2 位小数。 执行脚本，输出结果如下所示： 姓名 性别 体重kg 郭靖 男 66.12 杨过 男 48.65 郭芙 女 47.99 示例（C 语言示例） #include &lt;stdio.h&gt; int main(void)&#123; int i=8; printf(&quot;The raw value: i=%d\\n&quot;, i); printf(&quot;++i=%d \\n++i=%d \\n--i=%d \\n--i=%d\\n&quot;,++i,++i,--i,--i); return 0; &#125; 运行结果： The raw value: i=8 ++i=8 ++i=7 --i=6 --i=7 附录版本说明 1.0.0，2020/10/05 21:51:03，初始版本。 参考文献 w3cschool编程狮.Shell printf 命令[EB/OL].https://www.w3cschool.cn/linux/linux-shell-printf.html, 2020/09/29. C语言中文网.shell printf命令：格式化输出语句[EB/OL].http://c.biancheng.net/cpp/view/1499.html, 2020/09/29. C语言中文网.C语言格式输出函数printf()详解[EB/OL].http://c.biancheng.net/cpp/html/33.html, 2020/10/05.","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://faradays-studio.gitee.io/tags/shell/"},{"name":"printf","slug":"printf","permalink":"https://faradays-studio.gitee.io/tags/printf/"},{"name":"格式化","slug":"格式化","permalink":"https://faradays-studio.gitee.io/tags/%E6%A0%BC%E5%BC%8F%E5%8C%96/"},{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"}]},{"title":"2020年随笔","slug":"2020年随笔","date":"2020-09-02T13:11:05.000Z","updated":"2020-12-29T15:22:19.889Z","comments":true,"path":"202009022111/","link":"","permalink":"https://faradays-studio.gitee.io/202009022111/","excerpt":"","text":"2020/09/02，明月凌晨将寝，看见一轮明月从百叶窗的缝隙中漏了出来。江天一色无纤尘，皎皎空中孤月轮，我想起来了我的老父亲，突然好一阵心酸。 这世界就这一轮明月，父亲看到的明月，和我看到的是不是一样的呢？我无从得知，但是我知道他清澈的心底，应该也和这明月一样，明朗、简洁、孤独的挂在那里！我现在正在重构的 hexo 主题，是否也能和它一样明朗呢？ 2020/09/11，疲倦今天颇为疲倦，那是种种摧残对生活热爱的力量。 生活无望的摧残有之。生活压力太大，家庭收入有限，总是有种种债务要还，明明金额也不多，可是月月都是勉勉强强，总有一种秦琼卖马、穷途末路的感觉，既担不起风险去谋份新工作拼出路，也割舍不了那些缠缠绵绵的家庭责任。 与人相处的困顿有之。我总以为自己是个文人，家国情怀、儿女情长；然而也不知道如何面对糟糠之妻，是勉励还是鞭策，是举案齐眉还是听之任之；也不知道如何面对幼年儿女，是宠爱还是严厉，是陪伴成长还是执鞭指导。看过不少教育理论和案例，也曾以自身做过很多试验，终究是了了，每一个方向都言之凿凿，然而都不曾看得到光明。一人独行的孤独，布满了天空。 报国无门的失望有之。①得不到应有的回报：在单位里，也曾以一己之力，年年月月坚持，做了很多别人不想做、不能做的事情，但体制之下，来回调动，兜兜转转，始终只是棋子一枚。不少人长袖善舞、坑蒙拐骗，却获得了多次升迁，改善了生活，而我被所谓的工作需要等原因排除在外，常常需要为家庭的每月的账单发愁很久。②官僚主义严重。对于自己，每一次努力改变工作局面，总有领导劝你多克服一下困难，总是有人说你不知道在忙什么；对于企业，有些人，总能罔顾年年亏损，形式主义，人浮于事，人满为患的会议永远在开着，落实工作的，永远都只有那么少数的几个人；好多人都拈轻怕重、装模作样，写计划时高瞻远瞩、侃侃而谈，谈落实时左右掣肘、漠视困难，没有人关心日常应该怎么做提升效率、没有人有魄力面对上级的考核压力，更没有人具有规章制度里边要求的那些工作能力，制度永远只是规范下级、杀鸡儆猴的玩物……我甚至不知道，我10多年来孜孜不倦地工作，到底有没有意义了？！我自小家里生活困顿，多次获得了学校的贫困补助和一些周边人的帮助，曾发誓要报效祖国、造福社会；然而，在年复一年的人治环境下，我几乎丧失去了再挣扎的动力。 人，活的疲惫，不是因为事情太难做，而是因为适应社会不是一个容易的事情！ 2020/09/26，迷茫昨日，在公司某部门那里被批评项目文件写的不清不楚。我的内容别人看不明白，因此需要修改；这本来也没啥，偏偏别人要告诉我他不是搞这个专业的，这让人有点难受。 法国作家 John Collier 说过，If Youth Knew, If Age Could。我自己理解的意思就是，如果年轻人经验丰富，那么就不会栽在人情世故和盲目自大上；如果老年人能力充沛、能闯善干，那么就不会、也不必利用特权来设置那么多莫名其妙的规则来限制或阻挡事物的发展。 就事论事而言，我也直接参与不少重要的基础事务，天天都在赶任务似的。那天的项目申请书和可行性研究报告都是一天之内匆匆写就的，而且要花费一大笔钱，涉及不少未知的研究和探索，怎么可能足够完善、足够清晰到一个非专业人员能够在几分钟内读懂、并作出投资决策呢！所以，对于这些身居要位、日常看报的中老年专家，我是有看法的：他们平时或做好好先生、或好为人师，对领导阿谀奉承，对基层装腔作势；给我这样的基层打工仔造成种种混乱也是难免的——他们作为从我这样的基础工种提拔上去的技术管理人员，平时不指导和帮助我们，不率先垂范，却要求下层人员有所作为、还要遵守一堆只有下层人员才需要遵守的规则，真可谓“何不食肉糜”的典范！ 我一度迷茫，想去纠正他的每一个专业术语上的错误，想引经据典，想据理力争到底…然而，一念之间，竟放弃了这个念头——我们参与日常事务，希望企业兴旺、国家繁荣，那是我们自己主动参与实现的，不是等来的；如果我们再退却了，旁观了，又何来希望？！ 是我自己一厢情愿的幻想罢了。我指望着的人——他们早已被生活和工作刺破了梦想、也与高官厚禄无望，我竟希望他们能够礼贤下士、推陈出新？！那也太为难人了！试想，又有几个人不曾怀揣着“仗剑走天涯”的梦想，却偏偏在现实社会中得到遍体鳞伤、至今怕蛇咬？他们不正和我现在一样吗——总以为自己技术业绩很突出就能傲视群雄，甚至学着别人的腔调说“生态就是被你们这些人搞坏的”，然后无所作为地、等待着别人来改善生态环境。可是我做的就够了吗？我低微到了尘埃里，可也有人说自己更低微，期盼着我不要在工作中给他们挑刺，帮他们协调解决哪些超出了能力的怪事吗？ 算了，做自己能做的事吧！希望明天会好一点，希望“日行一善，积善成德；日行一善，功满三千”，时间自有定论。","categories":[{"name":"星星心事","slug":"星星心事","permalink":"https://faradays-studio.gitee.io/categories/%E6%98%9F%E6%98%9F%E5%BF%83%E4%BA%8B/"}],"tags":[{"name":"2020","slug":"2020","permalink":"https://faradays-studio.gitee.io/tags/2020/"},{"name":"随笔","slug":"随笔","permalink":"https://faradays-studio.gitee.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"苹果 Macbook Pro 笔记本从 U 盘启动以及重置开机密码的方法","slug":"苹果MacbookPro笔记本U盘启动与重置开机密码的方法","date":"2020-08-27T13:41:35.000Z","updated":"2020-09-02T13:21:47.065Z","comments":true,"path":"202008272141/","link":"","permalink":"https://faradays-studio.gitee.io/202008272141/","excerpt":"","text":"前几天，有位老领导委托我对其苹果 Macbook Pro 2018 笔记本进行优化处理。由于网上的资料比较零散、挂一漏万，因此我也来总结一下操作经验。 配置 U盘启动或者切换系统的方法 Macbook 没有 BISO 等设置，所谓的进入 U盘 PE 或者切换双系统的方法是：按住 Option 键，然后按电源键开机，那么就会出现一个类似于 Windows 启动项的界面，从而用于实现改变启动方式的效果。 苹果电脑安装 Windows 系统，一般都是通过 Boot Camp 等软件来实现。对于双系统的主机，也可以在 Windows 系统中输入 “恢复” 找到相应的菜单进入切换启动盘的功能，不过具体功能我没有完整测试。 有意思的是，进入 MacOS 的启动方式选择界面后，如果接入 U盘 PE，那么也能很快识别出来；跟我之前在 BISO 里边配置 U盘启动需要提前接入还是有明显差别的。 Macbook 重置密码的方法结合网络资料测试了一下，操作流程如下： 按住 Option 键，然后按电源键开机； 按方向键选择 Macintosh （苹果） 系统，按 Command + r 后自动进入系统恢复界面； 在经历进度条界面一会后，选择界面的操作语言后，出现以下界面，执行菜单命令 使用工具→终端 ，弹出终端界面： 在终端中执行 resetpassword ，在弹窗中选择需要重置的用户名，并填入新密码，然后存储到系统即可完成修改。 完成修改后重新使用第 1 步的方法进入苹果系统，在登入后可能会提示钥匙串密码是否修改等内容，我选择了修改成一致后，重复登录检查账户使用正常。 需要注意的是，上述方法仅应使用在合法授权的电脑上，请勿滥用！践行社会主义核心价值观，人人有责！ 版本说明参考文献 学知网.苹果笔记本进入BIOS设置教程[EB/OL].https://www.jmqz1000.com/dnzs/23488.html, 2020/08/24. 变更说明 1.0.0，2020/08/27 22:29:16，初始版本。 1.0.1，2020/08/28 18:11:26，重新组织语言，去除一些自以为是的废话。","categories":[{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"}],"tags":[{"name":"Apple","slug":"Apple","permalink":"https://faradays-studio.gitee.io/tags/Apple/"},{"name":"Macbook","slug":"Macbook","permalink":"https://faradays-studio.gitee.io/tags/Macbook/"},{"name":"MacOS","slug":"MacOS","permalink":"https://faradays-studio.gitee.io/tags/MacOS/"},{"name":"密码","slug":"密码","permalink":"https://faradays-studio.gitee.io/tags/%E5%AF%86%E7%A0%81/"},{"name":"操作系统","slug":"操作系统","permalink":"https://faradays-studio.gitee.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"PE","slug":"PE","permalink":"https://faradays-studio.gitee.io/tags/PE/"},{"name":"U盘","slug":"U盘","permalink":"https://faradays-studio.gitee.io/tags/U%E7%9B%98/"}]},{"title":"使用 Git 命令来管理 hexo 博客","slug":"使用Git来管理hexo","date":"2020-08-26T08:00:50.000Z","updated":"2021-02-14T13:35:43.766Z","comments":true,"path":"202008261600/","link":"","permalink":"https://faradays-studio.gitee.io/202008261600/","excerpt":"","text":"Git 命令集成 测试 GitHub 可访问性 ssh -T git@github.com 更新主分支（下载更新） D: &amp;&amp; D:\\faradays-studio.github\\faradays-studio.github.io &amp;&amp; git checkout 更新其他分支（下载更新） git checkout -b blog origin/bloggit checkout -t origin/blog 提交到本地 git commit -a -m u”pdate the website statement” 提交到GitHub git push origin master 基本用法说明 查看分支 git branch -a git branch -v git branch -r 查看最近的 commit 信息 git show HEAD 按 q 退出 git checkout -b &lt;分支名&gt; git checkout -b blog 从 服务器 下载更新到本地 由于 hexo 更新后，本地会版本落后，因此需要更新 git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; git pull origin master 或 git pull origin master:master git pull origin blog:blog 使用 git 管理主题的流程示意``` sh #克隆你fork出来的分支 $git clone &lt;远程Arepository&gt; #添加远程B repository标签 $git remote add &lt;远程B repository标签&gt; git@github.com:XXXX/ceph.git #从远程Brepository的master分支拉取最新objects合并到本地master分支 $git pull &lt;远程B厂库标签&gt; master:master #切换到要修改的分支上 $git checkout YYYY #在当前分支的基础上创建一个开发分支，并切换到该分支上，你将在该分支上coding $git branch develop; git checkout develop #在工作区coding coding...... #将修改保存到索引区 $git add . #将修改提交到本地分区 $git commit -a #将本地分支my_test提交到远程A repository的my_test分支上 $git push origin my_test:my_test ```hexo 博客删除部分 commit 的操作实践经过 2 天半的来回测试，终于删除了上传了隐藏文件 hid*.html 文件的提交。 出现 HEAD detached at 68e8065 等错误的解决方法： # 给 blog 起个 branch 名 blog_temp1 git branch blog_temp1 blog git branch -a # Head 指向实际使用的 branch，注意不是 origin/blog git checkout blog # 融合到当前 branch git merge blog_temp1 合并时存在问题，如果以本地为准 git add，以服务器为准则 git rm XXXX，然后 git commit 再重新执行合并 # 删除临时 branch git branch -d blog_temp1 删除特定 commit (# 由于 hexo 自身存在一个版本库，因此需要进行相应的处理) git log git rebase -i XXX # 将需要删除的最早的提交之前的一次提交做基础 将相关 commit 记录中的 pick 改为 drop，保存即实现本地删除。 git push origin blog -f # 强制提交本地版本到远程（实现远程删除） git status # 查看状态 git log --oneline git pull origin blog:blog git log --oneline cd D:\\WebSites\\faradays-studio.hexo\\.deploy_git 执行上述过程，如出现 `HEAD detached ` 等报错，注意分支名称实际为 master， 执行 hexo 同步至远程 具体的操作过程： # 从 GitHub 下拉取版本库，确保本地文件为最新 git pull origin blog:blog # 查看更新日志 git log 相关 log 文件使用 VI 的形式打开，因此可以按 shift + G 跳转到底，按 q 退出修改。 # 将需要删除的最早提交的前一次提交，设置为版本基础 git rebase -i 982c78fc82a2a3804233e9ff7ef315fc21dc0822 在弹出文件中，将会展示在该提交之后的每个提交信息 将相关 commit 记录中的 pick 改为 drop，保存即实现本地删除。 出现 `HEAD detached at 982c78f` 报警 # 查看当前分支情况 git branch -a # 将当前分支改名 git branch blog_temp1 blog # 解决由于删除造成的版本 merge 报警 git rm -r about git rm content.json git rebase --continue git commit git push origin blog -f # 合并分支 #git merge blog_temp1 # 重新对 Head 指向 branch（测试表明该步骤不能执行） # git checkout blog # 删除临时的版本 git branch -d blog_temp1 git log --oneline # git pull origin blog:blog 等命令无法对 hexo 的版本库进行更新，因此执行以下操作 # 删除 .deploy_git 文件夹，重新建立版本库理论可行。详见 https://github.com/hexojs/hexo-deployer-git 。 git rebase -i 982c78fc82a2a3804233e9ff7ef315fc21dc0822 # 查看状态 git status git rm -r about git rm content.json git rebase --continue git log git log --oneline #至此，各个版本完成更新，可以使用 hexo 重新生成一次，确保删除的文件被生成 hexo -d g # 查看本地版本日志 git log --oneline # 解决由于前边删除文件导致的版本文件数量不一致的问题 git pull -r # 下载网络更新到本地 git pull origin blog:blog # 检查更新情况后的版本日志 git log --oneline 参考文献 UniqueColor.git chekout分支遇到问题：need merge[EB/OL].https://www.cnblogs.com/UniqueColor/p/6594942.html, 2020/08/26. 奔跑的小龙码.git删除指定commit[EB/OL].https://www.cnblogs.com/lwcode6/p/11809973.html, 2020/08/26. 通过 add /rm 来指定本机处理措施，git commit -s，再 pull，再push Jack_Chao.Git 快速使用 之 冲突 merge 快速解决[EB/OL].https://www.jianshu.com/p/50ef88bda474, 2020/08/26. 星辰之力.git push &amp; git pull 推送/拉取分支[EB/OL].https://www.cnblogs.com/zhujiabin/p/9641305.html, 2020/08/27.","categories":[{"name":"我和hexo有个约会","slug":"我和hexo有个约会","permalink":"https://faradays-studio.gitee.io/categories/%E6%88%91%E5%92%8Chexo%E6%9C%89%E4%B8%AA%E7%BA%A6%E4%BC%9A/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://faradays-studio.gitee.io/tags/hexo/"},{"name":"git","slug":"git","permalink":"https://faradays-studio.gitee.io/tags/git/"},{"name":"faradays","slug":"faradays","permalink":"https://faradays-studio.gitee.io/tags/faradays/"}]},{"title":"Windows 批处理的字符运算（未完待续）","slug":"Windows批处理的字符运算经验","date":"2020-08-20T01:27:42.000Z","updated":"2020-08-20T01:27:42.000Z","comments":true,"path":"202008200927/","link":"","permalink":"https://faradays-studio.gitee.io/202008200927/","excerpt":"","text":"字符运算历来是编程中的重要内容，如何拼接字符，如何截取字符，如何判断字符是否存在，如何判断两个字符串是否相同，成为了编程任务中的重要环节。因此，我结合网络的资料和个人的实践经验来总结一下。 Windows 批处理中字符的基本常识 批处理中变量的赋值符号两侧不能包含空格，如 set str_date=&#39;20200820&#39;，这与很多编程规范是相悖的。 批处理中的字符可以不添加双引号，但是如果包含空格的话，必须使用引号，，如 set str_name=&quot;20200820 Windows 批处理的字符运算经验总结&quot;。 自定义变量使用 % 来包围来进行引用，即 %变量% ；而 Windows 内置变量（含文件路径变量扩展）则使用 % 符号来引导，即 %内置变量 。 截取字符串一般性的字符截取 基本语法： %**变量名**:~**起点位置**,**截取数量|终点位置**% 起点位置 ：如果为正数，那么就是从左往右截取，而如果为负数，那么就是说从右向左截取；不过无论为正还是为负，截取结果都是不包含处于 起点位置 的那个字符的。 截取数量|终点位置 ：如果为正数，那么就是单纯的 截取数量 ；如果为负数，那么应当表述为 终点位置 ，而且，与 起点位置 对应，截取结果也是不包含该负数所对应的字符的，即上述的 -5 对应的是终点位置为右侧第 6 个字符截止。 举例说明，如下： echo on set ifo=abcdefghijklmnopqrstuvwxyz0123456789 echo %ifo% echo. echo 截取前4个字符：%ifo:~0,4% echo 截取年度：%date:~0,4% echo. echo 截取最后2个字符：%ifo:~-2% echo 截取星期：%date:~-2% echo. echo 截取第一个到倒数第6个字符：%ifo:~0,-5% echo 截取日期（含分隔符）：%date:~0,-3% echo. echo 从第5个字符开始，截取2个字符：%ifo:~4,2% echo 截取月份：%date:~5,2% echo 截取天数：%date:~8,2% echo. echo 从倒数第14个字符开始，截取5个字符：%ifo:~-14,5% echo 截取秒数：%time:~3,2% echo. echo 当前时间是：%time% 即 %time:~0,2%点%time:~3,2%分%time:~6,2%秒%time:~9,2%厘秒 pause 当然，我最常用的就是对日期、时间等内置变量的操作。 文件路径字符的截取主要依靠 Windows 内置的扩展变量用法来进行。 执行 for /? 可以查看路径扩展的 举例说明，如下（注意，需要另存为 test.bat 文件形式执行）： @echo off echo 当前路径的完整字符串：%0 echo 当前路径的完整字符串（如被双引号包围，去除双引号）：%~0 echo 当前路径的所在分区：%~d0 echo 当前路径的目录：%~p0 echo 文件名：%~n0 echo 扩展名：%~x0 echo 文件属性：%~a0 echo 修改时间：%~t0 echo 文件大小：%~z0 pause 路径处理，往往都配合 for 函数进行操作。 未完待续… 版本说明变更日志 2020/08/20 10:49:23，创建文章。 参考索引 CharyGao.DOS命令（cmd）批处理：替换字符串、截取字符串、扩充字符串、获取字符串长度[EB/OL].https://www.cnblogs.com/Chary/p/No0000A4.html, 2020/08/20.","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://faradays-studio.gitee.io/tags/Windows/"},{"name":"批处理","slug":"批处理","permalink":"https://faradays-studio.gitee.io/tags/%E6%89%B9%E5%A4%84%E7%90%86/"},{"name":"字符运算","slug":"字符运算","permalink":"https://faradays-studio.gitee.io/tags/%E5%AD%97%E7%AC%A6%E8%BF%90%E7%AE%97/"}]},{"title":"Hello World（世界，你好）","slug":"世界，你好","date":"2020-08-08T16:00:00.000Z","updated":"2020-12-26T10:04:48.462Z","comments":true,"path":"202008090000/","link":"","permalink":"https://faradays-studio.gitee.io/202008090000/","excerpt":"","text":"世界，你好！我是一名低微到尘埃里的普通人，曾经幻想过成为一名科学家，为国家科技事业贡献力量，然后我并没有这样的超凡的智商；我成为了一名普通的工程师，我克服了很多很多的困难，在不同的岗位上也取得了一些成绩，然而，我的缺点和遇到的困难，仍然很多，有些时候，差点将我打倒了！ 同龄的同事，不少人获得了职务上的升迁，不少人获得了名誉上的进步，我也不想就这样放弃，不想放任自我，因此我也要在这里尝试发出我自己的声音，我要进步，我要追求卓越！ 世界，你好。社会，你好。我一直都很期盼见到明天的太阳，愿美好的生活终将来临！","categories":[{"name":"星星心事","slug":"星星心事","permalink":"https://faradays-studio.gitee.io/categories/%E6%98%9F%E6%98%9F%E5%BF%83%E4%BA%8B/"}],"tags":[{"name":"日志","slug":"日志","permalink":"https://faradays-studio.gitee.io/tags/%E6%97%A5%E5%BF%97/"},{"name":"你好","slug":"你好","permalink":"https://faradays-studio.gitee.io/tags/%E4%BD%A0%E5%A5%BD/"},{"name":"追求卓越","slug":"追求卓越","permalink":"https://faradays-studio.gitee.io/tags/%E8%BF%BD%E6%B1%82%E5%8D%93%E8%B6%8A/"}]},{"title":"Faradays' Studio 站点更新概要","slug":"chang-log","date":"2020-06-07T08:00:50.000Z","updated":"2022-03-07T11:49:37.284Z","comments":true,"path":"202006071600/","link":"","permalink":"https://faradays-studio.gitee.io/202006071600/","excerpt":"","text":"系统更新日志 2020/06/07 16:02:08，开始 hexo 建站学习和尝试安装、确定最终选用的环境版本。 2020/06/07 21:47:44，创建 hexo 站点，基于 MiHo 主题揉入 Ayer 部分元素定制博客主题；整合原有静态网站，并入站点中跳转。 2020/06/10 0:54:40，修改 URL 设置，修改《如何使用 svg.js 创建 svg 文档》文章内容为中文。 2020/06/10 21:50:16，参考网友方法，纠正网页点击时变成了下载的 Bug，主要原因是 permalink 末尾没有添加 /符号（ 最终修改为 permalink: :lang/:title/ ）。 2020/06/12 22:56:19，修改 post 模板增加封面默认页。 2020/07/19 21:02:13，投入了大量的时间研究主题的定制，初步决定个性化修改后的主题名为 Faradays 。 2020/08/07 00:01:17，修改 Faradays 主题，调整文章页打赏、分享、目录导航、作者等内容布局样式。 2020/08/18 22:23:18，博客升级至 v0.1.3，主题增加时间轴、全站字数统计等功能，完成原创字段、图标等一系列更新；正式建立 gitee+ github 双仓库。 2020/08/23 01:18:51，增加 gitalk评论、代码高亮、文章序号等功能，并调整原创显示样式、URL格式（去除语言字段）等。 2020/08/25 23:03:26，升级至 v0.1.5，开展独立页功能测试，增加多作者署名、文章页QQ联系博主、增加about页等功能，并调整了首页元素的 hover 样式、版权声明等内容。 2020/08/27 22:39:43，经过 5.66h 的尝试，删除部分不恰当的 commit，重新生成网址文件；对本地的 hexo 版本库和独立的 Git 文件库均进行了处理，确保版本一致、可用。 2020/08/28 22:59:29，升级至 v0.1.6，增加 sitemap、备用链接功能，调整署名、关键词设置，完成百度站长平台抓取 Gitee 主站的适配。 2020/08/29 20:13:01，升级到 v0.1.7，主要是 SEO 适配方面的改进。包括调整 sitemap 生成结果，同时部署到 Gitee 、 GitHub 两个站点；更新站点 logo ，调整文件头的作者、关键词、描述等方面的设置，调整页脚引用的 ref 参数等。 2020/08/29 23:56:38，纠正某文章图片链接填写方式不正确的问题；增加百度自动推送的脚本。 2020/08/30 11:20:03，增加页面加载计时、去除百度自动推送脚本，解决作者分隔符添加不当等问题。 2020/09/07 00:07:38，升级到 v0.2.0，实现主题的 layout 文件解耦升级、优化 IE 9+ 的兼容效果、增加夜间模式等重大功能升级，优化代码显示样式、首页/归档页/时间轴页内容居中、标签云、完善主题文档等功能。 2020/09/07 23:09:03，升级至 v0.2.1，调整手机模式下的元素显示效果和 FHD 分辨率下的居中的效果，确保手机模式下也能使用夜间模式切换功能。 2020/09/08 20:05:36，升级至 v0.2.2，修复主页和文章页在高分屏和手机屏下显示不佳问题。 2020/10/07 00:30:53，纠正 GitHub 的 sitemap 生成的 tag 、 category 站点地址不对应问题。 2020/10/08 22:17:01，升级至 v0.2.3，增加站点横幅（文章横幅）、独立页目录、自定义404页等功能，优化实现百度自动推送功能为可设置、多级无序列表的前导符号可差异化设置，修复跨页未连续编号、HTML生成代码生成不必要的换行、sitemap 部分地址不当等问题。 2020/10/12 20:51:32，升级至 v0.2.4，增加标题文本打字特效，恢复手机目录功能，调整手机模式下的表格、链接、分享图标和电脑模式下的目录等样式。 2021/01/07 22:50:31，升级至 v0.2.5，增加搜狗站长收录、hexo-generator-baidu-sitemap 同时生成双站点地图的功能，调整百度统计脚本自动读取网站ID、通过JavaScript自动设置横幅的展示时间、表格内文本对齐样式、sitemap权值等功能。 2021/02/03 21:00:58，升级至 v0.2.6，增加Bing站长收录、hexo-generator-baidu-sitemap 站点地图增加 tags 、 categories 网址。 2021/02/08 23:52:22，升级至 v0.2.7，增加 robots.txt ，实现主题文件配置主题色的功能，完善双站点判断及配置分离和部分布局细节。 2021/02/12 22:11:37，升级至 v0.2.8，增加 Bing 统计功能，纠正站点 ID 算法的不足（目前多站点分别统计的脚本生成功能仍不够完善，须下一步研究）。 2021/02/14 21:58:16，升级至 v0.2.9，增加 giteement 评论（测试无法正常登陆回调）、gitee站点评论也存储在github、时间轴页导航目录功能，调整gitalk 资源为本地版本以提高国内访问速率（可选）、highlight关闭hexo渲染而使用独立的js脚本以确保着色正确性（关闭hexo自身的语言检测功能将减少1s的文件加载时间）等功能。 2021/02/17 13:18:58，升级至 v0.2.10，主要调整手机模式的网页样式。 2021/03/06 02:17:18，升级至 v0.2.11，调整首页样式，不再显示文章分页清单；继续优化手机模式的存档页、时间轴页等样式；调整 typed.js 至本地加载。 Bing 收录真是快，而且全面。一个月不到， gitee 站点中文站已经收录 12 条、国际站已经收录 39 条了，意想不到！ 2021/03/23 21:01:00，升级至 v0.2.12，首页增加最后的3篇文章显示，恢复手机模式的侧边栏并调整其样式，调整手机模式的打赏样式。 2021/10/07 22:46:06，升级至 v0.2.13，首页的最后3篇文章增加超链接，修复网站初次切换夜间模式失效、页面横幅中日期转换受本地格式影响失0而失效等问题。 升级 typed 到 2.0.12版本，修复 isSite1 定义位置不当的问题。 参考文献 ﹏猴子请来的救兵.Hexo主题开发[EB/OL].https://www.cnblogs.com/yyhh/p/11058985.html, 2020/07/19. 文章介绍的主题开发的内容，对于定制 Faradays 主题起了最初的启发意义。 梅卫平.Hexo博客实现首页和子页面不同layout布局[EB/OL].https://my.oschina.net/u/3372900/blog/911534, 2020/07/19. 参考该文章，分离首页和文章页的样式。 MinHow.MiHo-主题安装和配置详情[EB/OL].https://blog.minhow.com/articles/blog/installation-configuration/, 2020/07/19. 网站主题基于 MiHo 修改，揉入了 Ayer、3-hexo 等主题的特色。在此，特别提出感谢！ 沈宇.Ayer中文说明[EB/OL].https://shen-yu.gitee.io/2019/ayer/, 2020/07/19. 网站主题参考了部分 Ayer 的设计思路。 MOxFIVE.Yelee —— 简而不减 Hexo 双栏博客主题[EB/OL].http://moxfive.xyz/yelee/, 2020/08/22. Tom-shushu.一款超好用的第三方评论插件--GITALK[EB/OL].https://www.cnblogs.com/Tom-shushu/p/10970526.html, 2020/08/22. 参考该文章完成 gitalk 配置。 Tommy Chen, HEXO官方文档.hexo 变量[EB/OL].https://hexo.io/zh-cn/docs/variables.html, 2020/08/22. 非常有意义的官方文章。 Tommy Chen, HEXO官方文档.hexo 辅助函数（Helpers）[EB/OL].https://hexo.io/zh-cn/docs/helpers, 2020/08/22. 非常有意义的官方文章。 菜鸟教程.Font Awesome 参考手册[EB/OL].https://www.runoob.com/font-awesome/fontawesome-reference.html, 2020/08/23. 参考调整部分图标。 杨玉杰.Hexo 主题 3-hexo[EB/OL].https://yelog.org/2017/03/07/3-hexo/, 2020/08/23. 作者也多年来进行了主题的研究，有空可以参照思考。 动力节点.CSS八种让人眼前一亮的HOVER效果[EB/OL].https://zhuanlan.zhihu.com/p/188620420, 2020/08/23. 参考完成了霓虹效果。 chalkit.修改hexo sitemap 生成插件中的链接模板[EB/OL].https://www.jianshu.com/p/7f7f81e3ab24, 2020/08/28. 参考配置形成两个站点分别使用的 sitemap 文件。 ha_weii.hexo文件参数及其相关说明[EB/OL].https://www.jianshu.com/p/d1dedae4d970, 2020/08/28. 该文章提到的主题配置文件 _config.yml 的参数含义，可以后期研究一下，也与阅读官方部分功能说明时形成印证效果。 kobe1700.hexo-theme-snippet[EB/OL].https://gitee.com/kobe1700/hexo-theme-snippet, 2020/08/29. 设置文章过期等做法可以参考 Houmin.Hexo NexT 添加多级相册功能[EB/OL].https://houmin.cc/posts/d487dd02/, 2020/08/29. 文章提出了设置多级相册的方法，很有意思。 胖逆的嘟嘟.hexo干货系列：（六）hexo提交搜索引擎（百度+谷歌）[EB/OL].https://www.cnblogs.com/tengj/p/5357879.html, 2020/08/29. 参照设置自动推送方法。 百度资源搜索平台.平台工具使用帮助-链接提交[EB/OL].https://ziyuan.baidu.com/college/courseinfo?id=267&amp;page=2, 2020/08/29. 文章提出，百度自动推送功能已暂停使用。 叶少翔.js统计页面加载时间[EB/OL].https://blog.csdn.net/jiangzunshao/article/details/53040785, 2020/08/30. 参照设置了了页面加载的时间计算脚本。 周思伟.hexo-theme-yilia-plus[EB/OL].https://github.com/JoeyBling/hexo-theme-yilia-plus, 2020/08/30. 这个主题关于组件的集成思路可以参考。 恶魔萝莉控.给博客添加夜间模式[EB/OL].https://nocilol.me/archives/code/add-night-mode-to-blog/, 2020/09/05. 参考这个设置了主题夜间模式的脚本。 crosschannel.cc.面向小白的Hexo添加暗色模式教程[EB/OL].https://crosschannel.cc/daily/hexo%E6%B7%BB%E5%8A%A0%E6%9A%97%E8%89%B2%E6%A8%A1%E5%BC%8F.html, 2020/09/05. 该文章提出了使用媒体查询的方式来切换夜间模式，可以参考，下一步研究。 小康.Hexo博客之butterfly主题优雅魔改系列（持续更新）[EB/OL].https://www.antmoe.com/posts/a811d614/index.html, 2020/09/05. 作者的魔改主题，有空可以研究。 阳光派Plus.hexo之Volantis添加暗黑模式[EB/OL].https://www.zyoushuo.cn/post/e8f5.html, 2020/09/05. 作者的切换模式的动画，很有特色。 菜鸟教程.HTML DOM getElementsByClassName() 方法[EB/OL].https://www.runoob.com/jsref/met-document-getelementsbyclassname.html, 2020/09/06. 通过该文章，学会对获取的元素进行长度处理，避免没有元素却执行 remove 的操作。 葵花点穴手.div onload事件[EB/OL].https://blog.csdn.net/skylzc/article/details/79436336, 2020/09/06. The onload event can only be used on the document(body) itself, frames, images, and scripts. In other words, it can be attached to only body and/or each external resource. The div is not an external resource and it’s loaded as part of the body, so the onload event doesn’t apply there.onload event it only supports with few tags like listed below: &lt;body&gt;, &lt;frame&gt;, &lt;iframe&gt;, &lt;img&gt;, &lt;input type=&quot;image&quot;&gt;, &lt;link&gt;, &lt;script&gt;, &lt;style&gt; .参考该文章，解决了灰暗模式的加载问题。 Mozilla.list-style-type[EB/OL].https://developer.mozilla.org/zh-CN/docs/Web/CSS/list-style-type, 2020/10/08. 多级列表前导符号、数字的 list-style-type 属性。 腾讯寻人.公益 404 页面介绍[EB/OL].https://www.qq.com/404/, 2020/10/08. wensonlee.表格自动换行，避免撑开[EB/OL].https://blog.csdn.net/wensonlee/article/details/83156892, 2020/10/09. 曾经沧海 云淡风轻.SiteMap 提交，并使用正确的方式提交给搜索引擎[EB/OL].https://www.cnblogs.com/yifenghong/p/4418063.html, 2021/01/03. _好好编程_.修改文章内链接样式 ｜ hexo[EB/OL].https://blog.csdn.net/qw8880000/article/details/80235648, 2021/02/08. Molunerfinn.hexo-theme-melody：一个为Hexo打造的简洁、漂亮、快速的主题[EB/OL].https://molunerfinn.com/hexo-theme-melody-doc/zh-Hans/, 2021/02/08. 这个主题写的挺好看，有空学习一下。 試毅-思伟.Hexo博客集成码云评论系统[EB/OL].https://zhousiwei.gitee.io/2019/07/25/Hexo%E5%8D%9A%E5%AE%A2%E9%9B%86%E6%88%90%E7%A0%81%E4%BA%91%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/, 2021/02/12. 不确定，反正我没成功；放弃了使用 giteement 评论功能。 搜狐公司.（畅言云评）PC端 通用代码接入[EB/OL].http://changyan.kuaizhan.com/static/help/, 2021/02/13. 魏蕊蕊@贝壳找房.tocbot源码解读[EB/OL].https://mp.weixin.qq.com/s/ZWYgh7j_AvbgDcrL2kTG5Q, 2021/02/13. tocbot插件主要通过标签id属性实现跳转，如果标签中没有id属性或者id中包含中文字符，无法跳转。 TRHX • 鲍勃.CSS 与其预处理语言 Sass、Less、Stylus 之间的转化[EB/OL].https://blog.csdn.net/qq_36759224/article/details/91492651, 2021/02/15. W3School.CSS white-space 属性[EB/OL].https://www.w3school.com.cn/cssref/pr_text_white-space.asp, 2021/02/17. 璀璨星空.Hexo分页设置的问题[EB/OL].http://jerry011235.github.io/2015/05/18/Hexo%E5%88%86%E9%A1%B5%E8%AE%BE%E7%BD%AE%E7%9A%84%E9%97%AE%E9%A2%98/, 2021/03/06.","categories":[{"name":"我和hexo有个约会","slug":"我和hexo有个约会","permalink":"https://faradays-studio.gitee.io/categories/%E6%88%91%E5%92%8Chexo%E6%9C%89%E4%B8%AA%E7%BA%A6%E4%BC%9A/"}],"tags":[{"name":"日志","slug":"日志","permalink":"https://faradays-studio.gitee.io/tags/%E6%97%A5%E5%BF%97/"},{"name":"hexo","slug":"hexo","permalink":"https://faradays-studio.gitee.io/tags/hexo/"},{"name":"hexo-theme-faradays","slug":"hexo-theme-faradays","permalink":"https://faradays-studio.gitee.io/tags/hexo-theme-faradays/"}]},{"title":"如何使用 svg.js 创建 svg 文档","slug":"如何使用svg.js创建svg文档","date":"2019-02-09T01:51:30.000Z","updated":"2019-02-10T13:51:52.000Z","comments":true,"path":"201902090951/","link":"","permalink":"https://faradays-studio.gitee.io/201902090951/","excerpt":"","text":"前段时间，我尝试了使用 svg.js 来创建 svg dom 文档时，并没有成功。经过反复多次的尝试，并网络检索了一些信息，初步确认为官方文档未及时更新，导致了编码错误。 使用 svg.js 遇到的问题举个例子，dom 文档 .html 的结构如下： &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Creating SVG with SVG.js&lt;/title&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt; &lt;script src=&quot;https://cdn.bootcss.com/svg.js/3.0.11/svg.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt; &lt;script&gt; // write down your javascript here.. &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 官方文档（见 https://svgjs.com/docs/3.0/getting-started/ ）对于 JavaScript 脚本环节的部分 &lt;script&gt;...&lt;/script&gt; 是这样写的： var draw = SVG(&#39;drawing&#39;).size(300, 300) var rect = draw.rect(100, 100).attr(&#123; fill: &#39;#f06&#39; &#125;) 上述脚本在 jsfiddle.net 网站中测试是无异常的，详见 https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz 。然而，无论我是在 IE 7.0 至 11.0，还是在 Chrome 58 内核的浏览器中，我的本地测试从未成功。因此，整整 2 天里，我都未能从试验的阴影中恢复过来，反反复复进行了无数次试验，均无果而终。 使用 svg.js 书写脚本和 DOM 的方法在无数次的一边尝试、一边网络搜索的过程中，我发现了以下可行的方法： 1. 方法 1 DOM 文档： &lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt; 脚本 1： var draw = SVG().addTo(&#39;#drawing&#39;).size(1024,200); 或采取以下脚本： 脚本 2： var draw = SVG().addTo(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 2. 方法 2 DOM 文档： &lt;div class=&quot;drawing&quot;&gt;&lt;/div&gt; 脚本 1： var draw = SVG().addTo(&#39;.drawing&#39;).size(1024,200); 或采取以下脚本： 脚本 2： var draw = SVG().addTo(&#39;.drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 3. 方法 3 DOM 文档： &lt;svg id=&quot;drawing&quot;&gt;&lt;/svg&gt; 脚本 1： var draw = SVG(&#39;#drawing&#39;).size(1024, 200); 或采取以下脚本： 脚本 2： var draw = SVG(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 收工完事！","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://faradays-studio.gitee.io/tags/JavaScript/"},{"name":"SVG","slug":"SVG","permalink":"https://faradays-studio.gitee.io/tags/SVG/"},{"name":"svg.js","slug":"svg-js","permalink":"https://faradays-studio.gitee.io/tags/svg-js/"}]},{"title":"How to creat svg document with svg.js","slug":"How-to-creat-svg-document-with-svg-js","date":"2019-02-08T01:00:30.000Z","updated":"2019-02-10T13:51:52.000Z","comments":true,"path":"201902080900/","link":"","permalink":"https://faradays-studio.gitee.io/201902080900/","excerpt":"","text":"A few days ago, I got stuck in the mud of creating a svg dom with svg.js. After many test and searching, I found out that someting is different from the official manual. The problem of using svg.jsFor example, we write some dom in .html like this: &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Creating SVG with SVG.js&lt;/title&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt; &lt;script src=&quot;https://cdn.bootcss.com/svg.js/3.0.11/svg.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt; &lt;script&gt; // write down your javascript here.. &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; The official manual (refer to https://svgjs.com/docs/3.0/getting-started/) said that &lt;script&gt;...&lt;/script&gt; part like this: var draw = SVG(&#39;drawing&#39;).size(300, 300) var rect = draw.rect(100, 100).attr(&#123; fill: &#39;#f06&#39; &#125;) The script above pass through on jsfiddle.net test (refer to https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz ). However, it doesn’t work on my case, no matter running on my MSIE 7.0 to 11.0 or Chrome 58. I felt so depressed that even could not got sleep for two whole days. The way to write svg.js script and DOMAfter many tests and searching, I found out that these code running: 1. Way 1: DOM: &lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt; Script 1: var draw = SVG().addTo(&#39;#drawing&#39;).size(1024,200); or Script 2: var draw = SVG().addTo(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 2. Way 2: DOM: &lt;div class=&quot;drawing&quot;&gt;&lt;/div&gt; Script 1: var draw = SVG().addTo(&#39;.drawing&#39;).size(1024,200); or Script 2: var draw = SVG().addTo(&#39;.drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 3. Way 3: DOM: &lt;svg id=&quot;drawing&quot;&gt;&lt;/svg&gt; Script 1: var draw = SVG(&#39;#drawing&#39;).size(1024, 200); or Script 2: var draw = SVG(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); Done!","categories":[{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://faradays-studio.gitee.io/tags/JavaScript/"},{"name":"SVG","slug":"SVG","permalink":"https://faradays-studio.gitee.io/tags/SVG/"},{"name":"svg.js","slug":"svg-js","permalink":"https://faradays-studio.gitee.io/tags/svg-js/"}]}],"categories":[{"name":"工作中的魔法","slug":"工作中的魔法","permalink":"https://faradays-studio.gitee.io/categories/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%AD%94%E6%B3%95/"},{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/categories/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"},{"name":"编程笔记","slug":"编程笔记","permalink":"https://faradays-studio.gitee.io/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"},{"name":"办事指南","slug":"办事指南","permalink":"https://faradays-studio.gitee.io/categories/%E5%8A%9E%E4%BA%8B%E6%8C%87%E5%8D%97/"},{"name":"坐井观天","slug":"坐井观天","permalink":"https://faradays-studio.gitee.io/categories/%E5%9D%90%E4%BA%95%E8%A7%82%E5%A4%A9/"},{"name":"星星心事","slug":"星星心事","permalink":"https://faradays-studio.gitee.io/categories/%E6%98%9F%E6%98%9F%E5%BF%83%E4%BA%8B/"},{"name":"我和hexo有个约会","slug":"我和hexo有个约会","permalink":"https://faradays-studio.gitee.io/categories/%E6%88%91%E5%92%8Chexo%E6%9C%89%E4%B8%AA%E7%BA%A6%E4%BC%9A/"}],"tags":[{"name":"正态分布","slug":"正态分布","permalink":"https://faradays-studio.gitee.io/tags/%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83/"},{"name":"Q-Q图","slug":"Q-Q图","permalink":"https://faradays-studio.gitee.io/tags/Q-Q%E5%9B%BE/"},{"name":"中位数","slug":"中位数","permalink":"https://faradays-studio.gitee.io/tags/%E4%B8%AD%E4%BD%8D%E6%95%B0/"},{"name":"Excel","slug":"Excel","permalink":"https://faradays-studio.gitee.io/tags/Excel/"},{"name":"散点图","slug":"散点图","permalink":"https://faradays-studio.gitee.io/tags/%E6%95%A3%E7%82%B9%E5%9B%BE/"},{"name":"华为","slug":"华为","permalink":"https://faradays-studio.gitee.io/tags/%E5%8D%8E%E4%B8%BA/"},{"name":"手机","slug":"手机","permalink":"https://faradays-studio.gitee.io/tags/%E6%89%8B%E6%9C%BA/"},{"name":"克隆","slug":"克隆","permalink":"https://faradays-studio.gitee.io/tags/%E5%85%8B%E9%9A%86/"},{"name":"导入","slug":"导入","permalink":"https://faradays-studio.gitee.io/tags/%E5%AF%BC%E5%85%A5/"},{"name":"导出","slug":"导出","permalink":"https://faradays-studio.gitee.io/tags/%E5%AF%BC%E5%87%BA/"},{"name":"QQ同步助手","slug":"QQ同步助手","permalink":"https://faradays-studio.gitee.io/tags/QQ%E5%90%8C%E6%AD%A5%E5%8A%A9%E6%89%8B/"},{"name":"shell","slug":"shell","permalink":"https://faradays-studio.gitee.io/tags/shell/"},{"name":"Linux","slug":"Linux","permalink":"https://faradays-studio.gitee.io/tags/Linux/"},{"name":"CentOS","slug":"CentOS","permalink":"https://faradays-studio.gitee.io/tags/CentOS/"},{"name":"iptables","slug":"iptables","permalink":"https://faradays-studio.gitee.io/tags/iptables/"},{"name":"防火墙","slug":"防火墙","permalink":"https://faradays-studio.gitee.io/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"},{"name":"chattr","slug":"chattr","permalink":"https://faradays-studio.gitee.io/tags/chattr/"},{"name":"锁定","slug":"锁定","permalink":"https://faradays-studio.gitee.io/tags/%E9%94%81%E5%AE%9A/"},{"name":"csh","slug":"csh","permalink":"https://faradays-studio.gitee.io/tags/csh/"},{"name":"Solaris","slug":"Solaris","permalink":"https://faradays-studio.gitee.io/tags/Solaris/"},{"name":"IP","slug":"IP","permalink":"https://faradays-studio.gitee.io/tags/IP/"},{"name":"远程","slug":"远程","permalink":"https://faradays-studio.gitee.io/tags/%E8%BF%9C%E7%A8%8B/"},{"name":"限制","slug":"限制","permalink":"https://faradays-studio.gitee.io/tags/%E9%99%90%E5%88%B6/"},{"name":"查询","slug":"查询","permalink":"https://faradays-studio.gitee.io/tags/%E6%9F%A5%E8%AF%A2/"},{"name":"Django","slug":"Django","permalink":"https://faradays-studio.gitee.io/tags/Django/"},{"name":"all","slug":"all","permalink":"https://faradays-studio.gitee.io/tags/all/"},{"name":"filter","slug":"filter","permalink":"https://faradays-studio.gitee.io/tags/filter/"},{"name":"exclude","slug":"exclude","permalink":"https://faradays-studio.gitee.io/tags/exclude/"},{"name":"数据库","slug":"数据库","permalink":"https://faradays-studio.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"Python","slug":"Python","permalink":"https://faradays-studio.gitee.io/tags/Python/"},{"name":"WordCloud","slug":"WordCloud","permalink":"https://faradays-studio.gitee.io/tags/WordCloud/"},{"name":"词云图","slug":"词云图","permalink":"https://faradays-studio.gitee.io/tags/%E8%AF%8D%E4%BA%91%E5%9B%BE/"},{"name":"pandas","slug":"pandas","permalink":"https://faradays-studio.gitee.io/tags/pandas/"},{"name":"Jieba","slug":"Jieba","permalink":"https://faradays-studio.gitee.io/tags/Jieba/"},{"name":"词频","slug":"词频","permalink":"https://faradays-studio.gitee.io/tags/%E8%AF%8D%E9%A2%91/"},{"name":"分词","slug":"分词","permalink":"https://faradays-studio.gitee.io/tags/%E5%88%86%E8%AF%8D/"},{"name":"Windows","slug":"Windows","permalink":"https://faradays-studio.gitee.io/tags/Windows/"},{"name":"批处理","slug":"批处理","permalink":"https://faradays-studio.gitee.io/tags/%E6%89%B9%E5%A4%84%E7%90%86/"},{"name":"bat","slug":"bat","permalink":"https://faradays-studio.gitee.io/tags/bat/"},{"name":"脚本","slug":"脚本","permalink":"https://faradays-studio.gitee.io/tags/%E8%84%9A%E6%9C%AC/"},{"name":"软著","slug":"软著","permalink":"https://faradays-studio.gitee.io/tags/%E8%BD%AF%E8%91%97/"},{"name":"代码","slug":"代码","permalink":"https://faradays-studio.gitee.io/tags/%E4%BB%A3%E7%A0%81/"},{"name":"bash","slug":"bash","permalink":"https://faradays-studio.gitee.io/tags/bash/"},{"name":"专利","slug":"专利","permalink":"https://faradays-studio.gitee.io/tags/%E4%B8%93%E5%88%A9/"},{"name":"方法","slug":"方法","permalink":"https://faradays-studio.gitee.io/tags/%E6%96%B9%E6%B3%95/"},{"name":"安装","slug":"安装","permalink":"https://faradays-studio.gitee.io/tags/%E5%AE%89%E8%A3%85/"},{"name":"配置","slug":"配置","permalink":"https://faradays-studio.gitee.io/tags/%E9%85%8D%E7%BD%AE/"},{"name":"authenticator","slug":"authenticator","permalink":"https://faradays-studio.gitee.io/tags/authenticator/"},{"name":"google","slug":"google","permalink":"https://faradays-studio.gitee.io/tags/google/"},{"name":"双因子","slug":"双因子","permalink":"https://faradays-studio.gitee.io/tags/%E5%8F%8C%E5%9B%A0%E5%AD%90/"},{"name":"网络安全","slug":"网络安全","permalink":"https://faradays-studio.gitee.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"},{"name":"编译","slug":"编译","permalink":"https://faradays-studio.gitee.io/tags/%E7%BC%96%E8%AF%91/"},{"name":"tmux","slug":"tmux","permalink":"https://faradays-studio.gitee.io/tags/tmux/"},{"name":"aria2","slug":"aria2","permalink":"https://faradays-studio.gitee.io/tags/aria2/"},{"name":"fzf","slug":"fzf","permalink":"https://faradays-studio.gitee.io/tags/fzf/"},{"name":"ag","slug":"ag","permalink":"https://faradays-studio.gitee.io/tags/ag/"},{"name":"zsh","slug":"zsh","permalink":"https://faradays-studio.gitee.io/tags/zsh/"},{"name":"电脑爱好者","slug":"电脑爱好者","permalink":"https://faradays-studio.gitee.io/tags/%E7%94%B5%E8%84%91%E7%88%B1%E5%A5%BD%E8%80%85/"},{"name":"sqlite","slug":"sqlite","permalink":"https://faradays-studio.gitee.io/tags/sqlite/"},{"name":"GCC","slug":"GCC","permalink":"https://faradays-studio.gitee.io/tags/GCC/"},{"name":"国内源","slug":"国内源","permalink":"https://faradays-studio.gitee.io/tags/%E5%9B%BD%E5%86%85%E6%BA%90/"},{"name":"MySQL","slug":"MySQL","permalink":"https://faradays-studio.gitee.io/tags/MySQL/"},{"name":"权限","slug":"权限","permalink":"https://faradays-studio.gitee.io/tags/%E6%9D%83%E9%99%90/"},{"name":"多条件查询","slug":"多条件查询","permalink":"https://faradays-studio.gitee.io/tags/%E5%A4%9A%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/"},{"name":"vim","slug":"vim","permalink":"https://faradays-studio.gitee.io/tags/vim/"},{"name":"grep","slug":"grep","permalink":"https://faradays-studio.gitee.io/tags/grep/"},{"name":"论文","slug":"论文","permalink":"https://faradays-studio.gitee.io/tags/%E8%AE%BA%E6%96%87/"},{"name":"科研","slug":"科研","permalink":"https://faradays-studio.gitee.io/tags/%E7%A7%91%E7%A0%94/"},{"name":"冷板凳","slug":"冷板凳","permalink":"https://faradays-studio.gitee.io/tags/%E5%86%B7%E6%9D%BF%E5%87%B3/"},{"name":"苦","slug":"苦","permalink":"https://faradays-studio.gitee.io/tags/%E8%8B%A6/"},{"name":"随笔","slug":"随笔","permalink":"https://faradays-studio.gitee.io/tags/%E9%9A%8F%E7%AC%94/"},{"name":"2021","slug":"2021","permalink":"https://faradays-studio.gitee.io/tags/2021/"},{"name":"yum","slug":"yum","permalink":"https://faradays-studio.gitee.io/tags/yum/"},{"name":"加速","slug":"加速","permalink":"https://faradays-studio.gitee.io/tags/%E5%8A%A0%E9%80%9F/"},{"name":"下载","slug":"下载","permalink":"https://faradays-studio.gitee.io/tags/%E4%B8%8B%E8%BD%BD/"},{"name":"pip","slug":"pip","permalink":"https://faradays-studio.gitee.io/tags/pip/"},{"name":"VirtualBox","slug":"VirtualBox","permalink":"https://faradays-studio.gitee.io/tags/VirtualBox/"},{"name":"虚拟机","slug":"虚拟机","permalink":"https://faradays-studio.gitee.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"},{"name":"压缩","slug":"压缩","permalink":"https://faradays-studio.gitee.io/tags/%E5%8E%8B%E7%BC%A9/"},{"name":"zerofree","slug":"zerofree","permalink":"https://faradays-studio.gitee.io/tags/zerofree/"},{"name":"成功","slug":"成功","permalink":"https://faradays-studio.gitee.io/tags/%E6%88%90%E5%8A%9F/"},{"name":"关键","slug":"关键","permalink":"https://faradays-studio.gitee.io/tags/%E5%85%B3%E9%94%AE/"},{"name":"领导","slug":"领导","permalink":"https://faradays-studio.gitee.io/tags/%E9%A2%86%E5%AF%BC/"},{"name":"奋斗","slug":"奋斗","permalink":"https://faradays-studio.gitee.io/tags/%E5%A5%8B%E6%96%97/"},{"name":"总结","slug":"总结","permalink":"https://faradays-studio.gitee.io/tags/%E6%80%BB%E7%BB%93/"},{"name":"语法","slug":"语法","permalink":"https://faradays-studio.gitee.io/tags/%E8%AF%AD%E6%B3%95/"},{"name":"判断","slug":"判断","permalink":"https://faradays-studio.gitee.io/tags/%E5%88%A4%E6%96%AD/"},{"name":"表达式","slug":"表达式","permalink":"https://faradays-studio.gitee.io/tags/%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"while","slug":"while","permalink":"https://faradays-studio.gitee.io/tags/while/"},{"name":"for","slug":"for","permalink":"https://faradays-studio.gitee.io/tags/for/"},{"name":"if","slug":"if","permalink":"https://faradays-studio.gitee.io/tags/if/"},{"name":"Word","slug":"Word","permalink":"https://faradays-studio.gitee.io/tags/Word/"},{"name":"Office","slug":"Office","permalink":"https://faradays-studio.gitee.io/tags/Office/"},{"name":"脚注","slug":"脚注","permalink":"https://faradays-studio.gitee.io/tags/%E8%84%9A%E6%B3%A8/"},{"name":"分栏","slug":"分栏","permalink":"https://faradays-studio.gitee.io/tags/%E5%88%86%E6%A0%8F/"},{"name":"分隔符","slug":"分隔符","permalink":"https://faradays-studio.gitee.io/tags/%E5%88%86%E9%9A%94%E7%AC%A6/"},{"name":"变量","slug":"变量","permalink":"https://faradays-studio.gitee.io/tags/%E5%8F%98%E9%87%8F/"},{"name":"$","slug":"","permalink":"https://faradays-studio.gitee.io/tags/"},{"name":"Arch","slug":"Arch","permalink":"https://faradays-studio.gitee.io/tags/Arch/"},{"name":"Manjaro","slug":"Manjaro","permalink":"https://faradays-studio.gitee.io/tags/Manjaro/"},{"name":"pacman","slug":"pacman","permalink":"https://faradays-studio.gitee.io/tags/pacman/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://faradays-studio.gitee.io/tags/JavaScript/"},{"name":"jQuery","slug":"jQuery","permalink":"https://faradays-studio.gitee.io/tags/jQuery/"},{"name":"影评","slug":"影评","permalink":"https://faradays-studio.gitee.io/tags/%E5%BD%B1%E8%AF%84/"},{"name":"Margin Call","slug":"Margin-Call","permalink":"https://faradays-studio.gitee.io/tags/Margin-Call/"},{"name":"商海通牒","slug":"商海通牒","permalink":"https://faradays-studio.gitee.io/tags/%E5%95%86%E6%B5%B7%E9%80%9A%E7%89%92/"},{"name":"printf","slug":"printf","permalink":"https://faradays-studio.gitee.io/tags/printf/"},{"name":"格式化","slug":"格式化","permalink":"https://faradays-studio.gitee.io/tags/%E6%A0%BC%E5%BC%8F%E5%8C%96/"},{"name":"2020","slug":"2020","permalink":"https://faradays-studio.gitee.io/tags/2020/"},{"name":"Apple","slug":"Apple","permalink":"https://faradays-studio.gitee.io/tags/Apple/"},{"name":"Macbook","slug":"Macbook","permalink":"https://faradays-studio.gitee.io/tags/Macbook/"},{"name":"MacOS","slug":"MacOS","permalink":"https://faradays-studio.gitee.io/tags/MacOS/"},{"name":"密码","slug":"密码","permalink":"https://faradays-studio.gitee.io/tags/%E5%AF%86%E7%A0%81/"},{"name":"操作系统","slug":"操作系统","permalink":"https://faradays-studio.gitee.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"PE","slug":"PE","permalink":"https://faradays-studio.gitee.io/tags/PE/"},{"name":"U盘","slug":"U盘","permalink":"https://faradays-studio.gitee.io/tags/U%E7%9B%98/"},{"name":"hexo","slug":"hexo","permalink":"https://faradays-studio.gitee.io/tags/hexo/"},{"name":"git","slug":"git","permalink":"https://faradays-studio.gitee.io/tags/git/"},{"name":"faradays","slug":"faradays","permalink":"https://faradays-studio.gitee.io/tags/faradays/"},{"name":"字符运算","slug":"字符运算","permalink":"https://faradays-studio.gitee.io/tags/%E5%AD%97%E7%AC%A6%E8%BF%90%E7%AE%97/"},{"name":"日志","slug":"日志","permalink":"https://faradays-studio.gitee.io/tags/%E6%97%A5%E5%BF%97/"},{"name":"你好","slug":"你好","permalink":"https://faradays-studio.gitee.io/tags/%E4%BD%A0%E5%A5%BD/"},{"name":"追求卓越","slug":"追求卓越","permalink":"https://faradays-studio.gitee.io/tags/%E8%BF%BD%E6%B1%82%E5%8D%93%E8%B6%8A/"},{"name":"hexo-theme-faradays","slug":"hexo-theme-faradays","permalink":"https://faradays-studio.gitee.io/tags/hexo-theme-faradays/"},{"name":"SVG","slug":"SVG","permalink":"https://faradays-studio.gitee.io/tags/SVG/"},{"name":"svg.js","slug":"svg-js","permalink":"https://faradays-studio.gitee.io/tags/svg-js/"}]}
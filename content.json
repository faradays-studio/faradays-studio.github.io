{"meta":{"title":"Blog of Faradays' Studio","subtitle":"照见五蕴皆空，度一切苦厄。","description":"自信人生二百里，会当击水三千里！","author":"John Doe","url":"https://faradays-studio.github.io","root":"/"},"pages":[{"title":"TimeLine","date":"2020-08-12T15:19:40.000Z","updated":"2020-08-16T01:22:19.241Z","comments":true,"path":"timeline/index.html","permalink":"https://faradays-studio.github.io/timeline/index.html","excerpt":"","text":"ʱ����"}],"posts":[{"title":"Windows 批处理的字符运算","slug":"5-Windows-批处理的字符运算经验","date":"2020-08-20T01:27:42.000Z","updated":"2020-08-20T01:27:42.000Z","comments":true,"path":"202008200927/","link":"","permalink":"https://faradays-studio.github.io/202008200927/","excerpt":"","text":"字符运算历来是编程中的重要内容，如何拼接字符，如何截取字符，如何判断字符是否存在，如何判断两个字符串是否相同，成为了编程任务中的重要环节。因此，我结合网络的资料和个人的实践经验来总结一下。 Windows 批处理中字符的基本常识 批处理中变量的赋值符号两侧不能包含空格，如 set str_date=&#39;20200820&#39;，这与很多编程规范是相悖的。 批处理中的字符可以不添加双引号，但是如果包含空格的话，必须使用引号，，如 set str_name=&quot;20200820 Windows 批处理的字符运算经验总结&quot;。 自定义变量使用 % 来包围来进行引用，即 %变量% ；而 Windows 内置变量（含文件路径变量扩展）则使用 % 符号来引导，即 %内置变量 。 截取字符串一般性的字符截取 基本语法： %**变量名**:~**起点位置**,**截取数量|终点位置**% 起点位置 ：如果为正数，那么就是从左往右截取，而如果为负数，那么就是说从右向左截取；不过无论为正还是为负，截取结果都是不包含处于 起点位置 的那个字符的。 截取数量|终点位置 ：如果为正数，那么就是单纯的 截取数量 ；如果为负数，那么应当表述为 终点位置 ，而且，与 起点位置 对应，截取结果也是不包含该负数所对应的字符的，即上述的 -5 对应的是终点位置为右侧第 6 个字符截止。 举例说明，如下： echo on set ifo=abcdefghijklmnopqrstuvwxyz0123456789 echo %ifo% echo. echo 截取前4个字符：%ifo:~0,4% echo 截取年度：%date:~0,4% echo. echo 截取最后2个字符：%ifo:~-2% echo 截取星期：%date:~-2% echo. echo 截取第一个到倒数第6个字符：%ifo:~0,-5% echo 截取日期（含分隔符）：%date:~0,-3% echo. echo 从第5个字符开始，截取2个字符：%ifo:~4,2% echo 截取月份：%date:~5,2% echo 截取天数：%date:~8,2% echo. echo 从倒数第14个字符开始，截取5个字符：%ifo:~-14,5% echo 截取秒数：%time:~3,2% echo. echo 当前时间是：%time% 即 %time:~0,2%点%time:~3,2%分%time:~6,2%秒%time:~9,2%厘秒 pause 当然，我最常用的就是对日期、时间等内置变量的操作。 文件路径字符的截取主要依靠 Windows 内置的扩展变量用法来进行。 执行 for /? 可以查看路径扩展的 举例说明，如下（注意，需要另存为 test.bat 文件形式执行）： @echo off echo 当前路径的完整字符串：%0 echo 当前路径的完整字符串（如被双引号包围，去除双引号）：%~0 echo 当前路径的所在分区：%~d0 echo 当前路径的目录：%~p0 echo 文件名：%~n0 echo 扩展名：%~x0 echo 文件属性：%~a0 echo 修改时间：%~t0 echo 文件大小：%~z0 pause 路径处理，往往都配合 for 函数进行操作。 版本说明变更日志 2020/08/20 10:49:23，初始版本。 参考索引 CharyGao.DOS命令（cmd）批处理：替换字符串、截取字符串、扩充字符串、获取字符串长度[EB/OL].https://www.cnblogs.com/Chary/p/No0000A4.html, 2020/08/20.","categories":[{"name":"编程","slug":"编程","permalink":"https://faradays-studio.github.io/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://faradays-studio.github.io/tags/Windows/"},{"name":"批处理","slug":"批处理","permalink":"https://faradays-studio.github.io/tags/%E6%89%B9%E5%A4%84%E7%90%86/"},{"name":"字符运算","slug":"字符运算","permalink":"https://faradays-studio.github.io/tags/%E5%AD%97%E7%AC%A6%E8%BF%90%E7%AE%97/"}]},{"title":"Hello World","slug":"0 hello-world","date":"2020-08-09T12:29:04.724Z","updated":"2020-08-20T01:34:32.823Z","comments":true,"path":"202008092029/","link":"","permalink":"https://faradays-studio.github.io/202008092029/","excerpt":"","text":"追求卓越！","categories":[{"name":"Faradays' Studio","slug":"Faradays-Studio","permalink":"https://faradays-studio.github.io/categories/Faradays-Studio/"}],"tags":[]},{"title":"Hello World","slug":"4-hello-world","date":"2020-06-07T12:43:14.873Z","updated":"2020-08-20T01:33:49.173Z","comments":true,"path":"202006072043/","link":"","permalink":"https://faradays-studio.github.io/202006072043/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"Faradays' Studio","slug":"Faradays-Studio","permalink":"https://faradays-studio.github.io/categories/Faradays-Studio/"}],"tags":[]},{"title":"更新日志","slug":"1 chang-log","date":"2020-06-07T08:00:50.000Z","updated":"2020-08-22T01:19:48.956Z","comments":true,"path":"202006071600/","link":"","permalink":"https://faradays-studio.github.io/202006071600/","excerpt":"","text":"TO-DO 配置评论系统，实现文章留言； 解决网页加载缓慢，且链接跳转错误问题； 由于 change-log 页访问正常且多次对照近期修改的参数确认无误，初步判断为 Markdown 文件渲染存在错误！2020/04/20 00:41:34，借助 https://maxiang.io/ 网页编辑器解决一个文章的显示问题，但其他文章仍无法访问，有待检查处理。 2020-4-21 22:55:29，切换主题为 landscape 后，仍然无法通过链接访问其他文章，但是查看页面中文章已正常生成。 2020-4-21 23:09:12，修改 “D:\\WebSites\\faradays-studio.hexo_config.yml” 中的 URL 配置，结果发现全部文件均可展示！初步认为，使用 id 或 时间方式显示链接，可能存在问题。 Markdown 文件添加脚本引用，并添加计数功能。 系统更新日志 2020/04/19 16:02:08，创建《更新日志》； 2020/04/19 21:47:44，整合原有静态网站，并入站点中可链接跳转。 2020/04/22 0:54:40，修改 URL 设置，修改《如何使用 svg.js 创建 svg 文档》文章内容为中文。 2020/04/22 21:50:16 参考网友方法，纠正网页点击时变成了下载的 Bug，主要原因是 permalink 末尾没有添加 /符号，最终修改为 permalink: :lang/:title/ 。 设置主题为 ayer ，初步测试可用。 2020/04/25 22:56:19，修改为 miho 主题，修改 post 模板增加封面默认页。 2020/07/19 21:02:13，修改 miho 主题，重命名为 Faradays 主题。 2020/08/07 00:01:17，修改 Faradays 主题，调整文章页打赏、分享、目录导航、作者等内容布局样式。 2020/08/18 22:23:18，博客升级至 v0.1.3，主题增加时间轴、全站字数统计等功能，完成原创字段、图标等一系列更新。 参考文献 猴子请来的救兵.Hexo主题开发[EB/OL].https://www.cnblogs.com/yyhh/p/11058985.html, 2020/07/19. 梅卫平.Hexo博客实现首页和子页面不同layout布局[EB/OL].https://my.oschina.net/u/3372900/blog/911534, 2020/07/19. MinHow.MiHo-主题安装和配置详情[EB/OL].https://blog.minhow.com/articles/blog/installation-configuration/, 2020/07/19. 沈宇.Ayer中文说明[EB/OL].https://shen-yu.gitee.io/2019/ayer/, 2020/07/19. MOxFIVE.Yelee —— 简而不减 Hexo 双栏博客主题[EB/OL].http://moxfive.xyz/yelee/, 2020/08/22.","categories":[{"name":"Faradays' Studio","slug":"Faradays-Studio","permalink":"https://faradays-studio.github.io/categories/Faradays-Studio/"}],"tags":[{"name":"日志","slug":"日志","permalink":"https://faradays-studio.github.io/tags/%E6%97%A5%E5%BF%97/"}]},{"title":"如何使用 svg.js 创建 svg 文档","slug":"3 How-to-creat-svg-document-with-svg-js","date":"2019-02-09T01:51:30.000Z","updated":"2019-02-10T13:51:52.000Z","comments":true,"path":"201902090951/","link":"","permalink":"https://faradays-studio.github.io/201902090951/","excerpt":"","text":"前段时间，我尝试了使用 svg.js 来创建 svg dom 文档时，并没有成功。经过反复多次的尝试，并网络检索了一些信息，初步确认为官方文档未及时更新，导致了编码错误。 使用 svg.js 遇到的问题举个例子，dom 文档 .html 的结构如下： &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Creating SVG with SVG.js&lt;/title&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt; &lt;script src=&quot;https://cdn.bootcss.com/svg.js/3.0.11/svg.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt; &lt;script&gt; // write down your javascript here.. &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 官方文档（见 https://svgjs.com/docs/3.0/getting-started/ ）对于 JavaScript 脚本环节的部分 &lt;script&gt;...&lt;/script&gt; 是这样写的： var draw = SVG(&#39;drawing&#39;).size(300, 300) var rect = draw.rect(100, 100).attr({ fill: &#39;#f06&#39; }) 上述脚本在 jsfiddle.net 网站中测试是无异常的，详见 https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz 。然而，无论我是在 IE 7.0 至 11.0，还是在 Chrome 58 内核的浏览器中，我的本地测试从未成功。因此，整整 2 天里，我都未能从试验的阴影中恢复过来，反反复复进行了无数次试验，均无果而终。 使用 svg.js 书写脚本和 DOM 的方法在无数次的一边尝试、一边网络搜索的过程中，我发现了以下可行的方法： 1. 方法 1 DOM 文档： &lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt; 脚本 1： var draw = SVG().addTo(&#39;#drawing&#39;).size(1024,200); 或采取以下脚本： 脚本 2： var draw = SVG().addTo(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 2. 方法 2 DOM 文档： &lt;div class=&quot;drawing&quot;&gt;&lt;/div&gt; 脚本 1： var draw = SVG().addTo(&#39;.drawing&#39;).size(1024,200); 或采取以下脚本： 脚本 2： var draw = SVG().addTo(&#39;.drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 3. 方法 3 DOM 文档： &lt;svg id=&quot;drawing&quot;&gt;&lt;/svg&gt; 脚本 1： var draw = SVG(&#39;#drawing&#39;).size(1024, 200); 或采取以下脚本： 脚本 2： var draw = SVG(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 收工完事！","categories":[{"name":"编程","slug":"编程","permalink":"https://faradays-studio.github.io/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://faradays-studio.github.io/tags/JavaScript/"},{"name":"SVG","slug":"SVG","permalink":"https://faradays-studio.github.io/tags/SVG/"}]},{"title":"How to creat svg document with svg.js","slug":"2 How-to-creat-svg-document-with-svg-js","date":"2019-02-08T01:00:30.000Z","updated":"2019-02-10T13:51:52.000Z","comments":true,"path":"201902080900/","link":"","permalink":"https://faradays-studio.github.io/201902080900/","excerpt":"","text":"A few days ago, I got stuck in the mud of creating a svg dom with svg.js. After many test and searching, I found out that someting is different from the official manual. The problem of using svg.jsFor example, we write some dom in .html like this: &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Creating SVG with SVG.js&lt;/title&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt; &lt;script src=&quot;https://cdn.bootcss.com/svg.js/3.0.11/svg.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt; &lt;script&gt; // write down your javascript here.. &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; The official manual (refer to https://svgjs.com/docs/3.0/getting-started/) said that &lt;script&gt;...&lt;/script&gt; part like this: var draw = SVG(&#39;drawing&#39;).size(300, 300) var rect = draw.rect(100, 100).attr({ fill: &#39;#f06&#39; }) The script above pass through on jsfiddle.net test (refer to https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz ). However, it doesn’t work on my case, no matter running on my MSIE 7.0 to 11.0 or Chrome 58. I felt so depressed that even could not got sleep for two whole days. The way to write svg.js script and DOMAfter many tests and searching, I found out that these code running: 1. Way 1: DOM: &lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt; Script 1: var draw = SVG().addTo(&#39;#drawing&#39;).size(1024,200); or Script 2: var draw = SVG().addTo(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 2. Way 2: DOM: &lt;div class=&quot;drawing&quot;&gt;&lt;/div&gt; Script 1: var draw = SVG().addTo(&#39;.drawing&#39;).size(1024,200); or Script 2: var draw = SVG().addTo(&#39;.drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); 3. Way 3: DOM: &lt;svg id=&quot;drawing&quot;&gt;&lt;/svg&gt; Script 1: var draw = SVG(&#39;#drawing&#39;).size(1024, 200); or Script 2: var draw = SVG(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;); Done!","categories":[{"name":"English","slug":"English","permalink":"https://faradays-studio.github.io/categories/English/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://faradays-studio.github.io/tags/JavaScript/"},{"name":"SVG","slug":"SVG","permalink":"https://faradays-studio.github.io/tags/SVG/"}]}],"categories":[{"name":"编程","slug":"编程","permalink":"https://faradays-studio.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"Faradays' Studio","slug":"Faradays-Studio","permalink":"https://faradays-studio.github.io/categories/Faradays-Studio/"},{"name":"English","slug":"English","permalink":"https://faradays-studio.github.io/categories/English/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://faradays-studio.github.io/tags/Windows/"},{"name":"批处理","slug":"批处理","permalink":"https://faradays-studio.github.io/tags/%E6%89%B9%E5%A4%84%E7%90%86/"},{"name":"字符运算","slug":"字符运算","permalink":"https://faradays-studio.github.io/tags/%E5%AD%97%E7%AC%A6%E8%BF%90%E7%AE%97/"},{"name":"日志","slug":"日志","permalink":"https://faradays-studio.github.io/tags/%E6%97%A5%E5%BF%97/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://faradays-studio.github.io/tags/JavaScript/"},{"name":"SVG","slug":"SVG","permalink":"https://faradays-studio.github.io/tags/SVG/"}]}
<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>How to creat svg document with svg.js</title>
    <url>/201902080900/</url>
    <content><![CDATA[<p>A  few days ago, I got stuck in the mud of creating a svg dom with svg.js. After many test and searching, I found out that someting is different from the official  manual.</p>
<h2 id="The-problem-of-using-svg-js"><a href="#The-problem-of-using-svg-js" class="headerlink" title="The problem of using svg.js"></a>The problem of using svg.js</h2><p><strong>For example, we write some dom in <some_page>.html like this:</strong></p>
<pre><code class="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Creating SVG with SVG.js&lt;/title&gt;
&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;
&lt;script src=&quot;https://cdn.bootcss.com/svg.js/3.0.11/svg.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt;
&lt;script&gt;
  // write down your javascript here..
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>The official  manual (refer to <a href="https://svgjs.com/docs/3.0/getting-started/">https://svgjs.com/docs/3.0/getting-started/</a>) said that <code>&lt;script&gt;...&lt;/script&gt;</code>  part like this:</p>
<pre><code class="javascript">var draw = SVG(&#39;drawing&#39;).size(300, 300)
var rect = draw.rect(100, 100).attr(&#123; fill: &#39;#f06&#39; &#125;)</code></pre>
<p>The script above pass through on jsfiddle.net test (refer to <a href="https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz">https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz</a> ). However, it doesn’t work on my case, no matter running on my MSIE 7.0 to 11.0 or Chrome 58. I felt so depressed that even could not got sleep for two whole days.</p>
<h2 id="The-way-to-write-svg-js-script-and-DOM"><a href="#The-way-to-write-svg-js-script-and-DOM" class="headerlink" title="The way to write svg.js script and DOM"></a>The way to write svg.js script and DOM</h2><p>After many tests and searching, I found out that these code running: </p>
<h3 id="1-Way-1"><a href="#1-Way-1" class="headerlink" title="1. Way 1:"></a>1. Way 1:</h3><p>   DOM: <code>&lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt;</code> </p>
<p>   Script 1: <code>var draw = SVG().addTo(&#39;#drawing&#39;).size(1024,200);</code> </p>
<p>   or </p>
<p>   Script 2: <code>var draw = SVG().addTo(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<h3 id="2-Way-2"><a href="#2-Way-2" class="headerlink" title="2. Way 2:"></a>2. Way 2:</h3><p>   DOM: <code>&lt;div class=&quot;drawing&quot;&gt;&lt;/div&gt;</code></p>
<p>   Script 1: <code>var draw = SVG().addTo(&#39;.drawing&#39;).size(1024,200);</code> </p>
<p>   or </p>
<p>   Script 2: <code>var draw = SVG().addTo(&#39;.drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<h3 id="3-Way-3"><a href="#3-Way-3" class="headerlink" title="3. Way 3: "></a>3. Way 3: <br/></h3><p>   DOM: <code>&lt;svg id=&quot;drawing&quot;&gt;&lt;/svg&gt;</code> </p>
<p>   Script 1: <code>var draw = SVG(&#39;#drawing&#39;).size(1024, 200);</code></p>
<p>   or</p>
<p>   Script 2: <code>var draw = SVG(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<p>Done!</p>
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>SVG</tag>
        <tag>svg.js</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用 svg.js 创建 svg 文档</title>
    <url>/201902090951/</url>
    <content><![CDATA[<p>前段时间，我尝试了使用 svg.js 来创建 svg dom 文档时，并没有成功。经过反复多次的尝试，并网络检索了一些信息，初步确认为官方文档未及时更新，导致了编码错误。</p>
<h2 id="使用-svg-js-遇到的问题"><a href="#使用-svg-js-遇到的问题" class="headerlink" title="使用 svg.js 遇到的问题"></a>使用 svg.js 遇到的问题</h2><p><strong>举个例子，dom 文档 <some_page>.html 的结构如下：</strong></p>
<pre><code class="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Creating SVG with SVG.js&lt;/title&gt;
&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;
&lt;script src=&quot;https://cdn.bootcss.com/svg.js/3.0.11/svg.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt;
&lt;script&gt;
  // write down your javascript here..
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>官方文档（见 <a href="https://svgjs.com/docs/3.0/getting-started/">https://svgjs.com/docs/3.0/getting-started/</a> ）对于 JavaScript 脚本环节的部分 <code>&lt;script&gt;...&lt;/script&gt;</code> 是这样写的：</p>
<pre><code class="javascript">var draw = SVG(&#39;drawing&#39;).size(300, 300)
var rect = draw.rect(100, 100).attr(&#123; fill: &#39;#f06&#39; &#125;)</code></pre>
<p>上述脚本在 jsfiddle.net 网站中测试是无异常的，详见 <a href="https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz">https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz</a> 。然而，无论我是在 IE 7.0 至 11.0，还是在 Chrome 58 内核的浏览器中，我的本地测试从未成功。因此，整整 2 天里，我都未能从试验的阴影中恢复过来，反反复复进行了无数次试验，均无果而终。</p>
<h2 id="使用-svg-js-书写脚本和-DOM-的方法"><a href="#使用-svg-js-书写脚本和-DOM-的方法" class="headerlink" title="使用 svg.js 书写脚本和 DOM 的方法"></a>使用 svg.js 书写脚本和 DOM 的方法</h2><p>在无数次的一边尝试、一边网络搜索的过程中，我发现了以下可行的方法：</p>
<h3 id="1-方法-1"><a href="#1-方法-1" class="headerlink" title="1. 方法 1"></a>1. 方法 1</h3><p>   DOM 文档： <code>&lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt;</code> </p>
<p>   脚本 1： <code>var draw = SVG().addTo(&#39;#drawing&#39;).size(1024,200);</code> </p>
<p>   或采取以下脚本： </p>
<p>   脚本 2： <code>var draw = SVG().addTo(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<h3 id="2-方法-2"><a href="#2-方法-2" class="headerlink" title="2. 方法 2"></a>2. 方法 2</h3><p>   DOM 文档： <code>&lt;div class=&quot;drawing&quot;&gt;&lt;/div&gt;</code></p>
<p>   脚本 1： <code>var draw = SVG().addTo(&#39;.drawing&#39;).size(1024,200);</code> </p>
<p>   或采取以下脚本： </p>
<p>   脚本 2： <code>var draw = SVG().addTo(&#39;.drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<h3 id="3-方法-3"><a href="#3-方法-3" class="headerlink" title="3. 方法 3"></a>3. 方法 3</h3><p>   DOM 文档： <code>&lt;svg id=&quot;drawing&quot;&gt;&lt;/svg&gt;</code> </p>
<p>   脚本 1： <code>var draw = SVG(&#39;#drawing&#39;).size(1024, 200);</code></p>
<p>   或采取以下脚本：</p>
<p>   脚本 2： <code>var draw = SVG(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<p>收工完事！</p>
]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>SVG</tag>
        <tag>svg.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Faradays&#39; Studio 站点更新概要</title>
    <url>/202006071600/</url>
    <content><![CDATA[<h2 id="系统更新日志"><a href="#系统更新日志" class="headerlink" title="系统更新日志"></a>系统更新日志</h2><ol>
<li><p>2020/06/07 16:02:08，开始 hexo 建站学习和尝试安装、确定最终选用的环境版本。</p>
</li>
<li><p>2020/06/07 21:47:44，创建 hexo 站点，基于 <a href="https://github.com/WongMinHo/hexo-theme-miho">MiHo</a> 主题揉入 <a href="https://github.com/Shen-Yu/hexo-theme-ayer">Ayer</a>  部分元素定制博客主题；整合原有静态网站，并入站点中跳转。</p>
</li>
<li><p>2020/06/10 0:54:40，修改 URL 设置，修改《如何使用 svg.js 创建 svg 文档》文章内容为中文。</p>
</li>
<li><p>2020/06/10 21:50:16，参考网友方法，纠正网页点击时变成了下载的 Bug，主要原因是 permalink 末尾没有添加 <code>/</code>符号（ <del>最终修改为 <code>permalink: :lang/:title/</code></del> ）。</p>
</li>
<li><p>2020/06/12 22:56:19，修改 post 模板增加封面默认页。</p>
</li>
<li><p>2020/07/19 21:02:13，投入了大量的时间研究主题的定制，初步决定个性化修改后的主题名为 <strong>Faradays</strong> 。</p>
</li>
<li><p>2020/08/07 00:01:17，修改 Faradays 主题，调整文章页打赏、分享、目录导航、作者等内容布局样式。</p>
</li>
<li><p>2020/08/18 22:23:18，博客升级至 v0.1.3，主题增加时间轴、全站字数统计等功能，完成原创字段、图标等一系列更新；正式建立 gitee+ github 双仓库。</p>
</li>
<li><p>2020/08/23 01:18:51，增加 gitalk评论、代码高亮、文章序号等功能，并调整原创显示样式、URL格式（去除语言字段）等。</p>
</li>
<li><p>2020/08/25 23:03:26，升级至 v0.1.5，开展独立页功能测试，增加多作者署名、文章页QQ联系博主、增加about页等功能，并调整了首页元素的 hover 样式、版权声明等内容。</p>
</li>
<li><p>2020/08/27 22:39:43，经过 5.66h 的尝试，删除部分不恰当的 commit，重新生成网址文件；对本地的 hexo 版本库和独立的 Git 文件库均进行了处理，确保版本一致、可用。</p>
</li>
<li><p>2020/08/28 22:59:29，升级至 v0.1.6，增加 sitemap、备用链接功能，调整署名、关键词设置，完成百度站长平台抓取 Gitee 主站的适配。</p>
</li>
<li><p>2020/08/29 20:13:01，升级到 v0.1.7，主要是 SEO 适配方面的改进。包括调整 sitemap 生成结果，同时部署到 Gitee 、 GitHub 两个站点；更新站点 logo ，调整文件头的作者、关键词、描述等方面的设置，调整页脚引用的 ref 参数等。</p>
</li>
<li><p>2020/08/29 23:56:38，纠正某文章图片链接填写方式不正确的问题；增加百度自动推送的脚本。</p>
</li>
<li><p>2020/08/30 11:20:03，增加页面加载计时、去除百度自动推送脚本，解决作者分隔符添加不当等问题。</p>
</li>
<li><p>2020/09/07 00:07:38，升级到 v0.2.0，实现主题的 layout 文件解耦升级、优化 IE 9+ 的兼容效果、增加夜间模式等重大功能升级，优化代码显示样式、首页/归档页/时间轴页内容居中、标签云、完善主题文档等功能。</p>
</li>
<li><p>2020/09/07 23:09:03，升级至 v0.2.1，调整手机模式下的元素显示效果和 FHD 分辨率下的居中的效果，确保手机模式下也能使用夜间模式切换功能。</p>
</li>
<li><p>2020/09/08 20:05:36，升级至 v0.2.2，修复主页和文章页在高分屏和手机屏下显示不佳问题。</p>
</li>
<li><p>2020/10/07 00:30:53，纠正 GitHub 的 sitemap 生成的 tag 、 category 站点地址不对应问题。</p>
</li>
<li><p>2020/10/08 22:17:01，升级至 v0.2.3，增加站点横幅（文章横幅）、独立页目录、自定义404页等功能，优化实现百度自动推送功能为可设置、多级无序列表的前导符号可差异化设置，修复跨页未连续编号、HTML生成代码生成不必要的换行、sitemap 部分地址不当等问题。</p>
</li>
<li><p>2020/10/12 20:51:32，升级至 v0.2.4，增加标题文本打字特效，恢复手机目录功能，调整手机模式下的表格、链接、分享图标和电脑模式下的目录等样式。</p>
</li>
<li><p>2021/01/07 22:50:31，升级至 v0.2.5，增加搜狗站长收录、<code>hexo-generator-baidu-sitemap</code>  同时生成双站点地图的功能，调整百度统计脚本自动读取网站ID、通过JavaScript自动设置横幅的展示时间、表格内文本对齐样式、sitemap权值等功能。</p>
</li>
<li><p>2021/02/03 21:00:58，升级至 v0.2.6，增加Bing站长收录、<code>hexo-generator-baidu-sitemap</code>  站点地图增加 tags 、 categories 网址。</p>
</li>
<li><p>2021/02/08 23:52:22，升级至 v0.2.7，增加 robots.txt ，实现主题文件配置主题色的功能，完善双站点判断及配置分离和部分布局细节。</p>
</li>
<li><p>2021/02/12 22:11:37，升级至 v0.2.8，增加 Bing 统计功能，纠正站点 ID 算法的不足（<strong>目前多站点分别统计的脚本生成功能仍不够完善，须下一步研究</strong>）。</p>
</li>
<li><p>2021/02/14 21:58:16，升级至 v0.2.9，增加 <del>giteement 评论（测试无法正常登陆回调）</del>、gitee站点评论也存储在github、时间轴页导航目录功能，调整gitalk 资源为本地版本以提高国内访问速率（可选）、highlight关闭hexo渲染而使用独立的js脚本以确保着色正确性（关闭hexo自身的语言检测功能将减少1s的文件加载时间）等功能。</p>
</li>
<li><p>2021/02/17 13:18:58，升级至 v0.2.10，主要调整手机模式的网页样式。</p>
</li>
<li><p>2021/03/06 02:17:18，升级至 v0.2.11，调整首页样式，不再显示文章分页清单；继续优化手机模式的存档页、时间轴页等样式；调整 typed.js 至本地加载。</p>
</li>
</ol>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p>﹏猴子请来的救兵.<code>Hexo主题开发</code>[EB/OL].<a href="https://www.cnblogs.com/yyhh/p/11058985.html">https://www.cnblogs.com/yyhh/p/11058985.html</a>, 2020/07/19.</p>
<blockquote>
<p>文章介绍的主题开发的内容，对于定制 Faradays 主题起了最初的启发意义。</p>
</blockquote>
</li>
<li><p>梅卫平.<code>Hexo博客实现首页和子页面不同layout布局</code>[EB/OL].<a href="https://my.oschina.net/u/3372900/blog/911534">https://my.oschina.net/u/3372900/blog/911534</a>, 2020/07/19.</p>
<blockquote>
<p>参考该文章，分离首页和文章页的样式。</p>
</blockquote>
</li>
<li><p>MinHow.<code>MiHo-主题安装和配置详情</code>[EB/OL].<a href="https://blog.minhow.com/articles/blog/installation-configuration/">https://blog.minhow.com/articles/blog/installation-configuration/</a>, 2020/07/19.</p>
<blockquote>
<p>网站主题基于 MiHo 修改，揉入了 Ayer、3-hexo 等主题的特色。在此，特别提出感谢！</p>
</blockquote>
</li>
<li><p>沈宇.<code>Ayer中文说明</code>[EB/OL].<a href="https://shen-yu.gitee.io/2019/ayer/">https://shen-yu.gitee.io/2019/ayer/</a>, 2020/07/19.</p>
<blockquote>
<p>网站主题参考了部分 Ayer 的设计思路。</p>
</blockquote>
</li>
<li><p>MOxFIVE.<code>Yelee —— 简而不减 Hexo 双栏博客主题</code>[EB/OL].<a href="http://moxfive.xyz/yelee/">http://moxfive.xyz/yelee/</a>, 2020/08/22.</p>
</li>
<li><p>Tom-shushu.<code>一款超好用的第三方评论插件--GITALK</code>[EB/OL].<a href="https://www.cnblogs.com/Tom-shushu/p/10970526.html">https://www.cnblogs.com/Tom-shushu/p/10970526.html</a>, 2020/08/22.</p>
<blockquote>
<p>参考该文章完成 gitalk 配置。</p>
</blockquote>
</li>
<li><p>Tommy Chen, HEXO官方文档.<code>hexo 变量</code>[EB/OL].<a href="https://hexo.io/zh-cn/docs/variables.html">https://hexo.io/zh-cn/docs/variables.html</a>, 2020/08/22.</p>
<blockquote>
<p>非常有意义的官方文章。</p>
</blockquote>
</li>
<li><p>Tommy Chen, HEXO官方文档.<code>hexo 辅助函数（Helpers）</code>[EB/OL].<a href="https://hexo.io/zh-cn/docs/helpers">https://hexo.io/zh-cn/docs/helpers</a>, 2020/08/22.</p>
<blockquote>
<p>非常有意义的官方文章。</p>
</blockquote>
</li>
<li><p>菜鸟教程.<code>Font Awesome 参考手册</code>[EB/OL].<a href="https://www.runoob.com/font-awesome/fontawesome-reference.html">https://www.runoob.com/font-awesome/fontawesome-reference.html</a>, 2020/08/23.</p>
<blockquote>
<p>参考调整部分图标。</p>
</blockquote>
</li>
<li><p><del>杨玉杰.<code>Hexo 主题 3-hexo</code>[EB/OL].<a href="https://yelog.org/2017/03/07/3-hexo/">https://yelog.org/2017/03/07/3-hexo/</a>, 2020/08/23.</del></p>
<blockquote>
<p>作者也多年来进行了主题的研究，有空可以参照思考。</p>
</blockquote>
</li>
<li><p>动力节点.<code>CSS八种让人眼前一亮的HOVER效果</code>[EB/OL].<a href="https://zhuanlan.zhihu.com/p/188620420">https://zhuanlan.zhihu.com/p/188620420</a>, 2020/08/23.</p>
<blockquote>
<p>参考完成了霓虹效果。</p>
</blockquote>
</li>
<li><p>chalkit.<code>修改hexo sitemap 生成插件中的链接模板</code>[EB/OL].<a href="https://www.jianshu.com/p/7f7f81e3ab24">https://www.jianshu.com/p/7f7f81e3ab24</a>, 2020/08/28.</p>
<blockquote>
<p>参考配置形成两个站点分别使用的 sitemap 文件。</p>
</blockquote>
</li>
<li><p>ha_weii.<code>hexo文件参数及其相关说明</code>[EB/OL].<a href="https://www.jianshu.com/p/d1dedae4d970">https://www.jianshu.com/p/d1dedae4d970</a>, 2020/08/28.</p>
<blockquote>
<p>该文章提到的主题配置文件 <code>_config.yml</code> 的参数含义，可以后期研究一下，也与阅读官方部分功能说明时形成印证效果。</p>
</blockquote>
</li>
<li><p><del>kobe1700.<code>hexo-theme-snippet</code>[EB/OL].<a href="https://gitee.com/kobe1700/hexo-theme-snippet">https://gitee.com/kobe1700/hexo-theme-snippet</a>, 2020/08/29.</del></p>
<blockquote>
<p>设置文章过期等做法可以参考</p>
</blockquote>
</li>
<li><p><del>Houmin.<code>Hexo NexT 添加多级相册功能</code>[EB/OL].<a href="https://houmin.cc/posts/d487dd02/">https://houmin.cc/posts/d487dd02/</a>, 2020/08/29.</del></p>
<blockquote>
<p>文章提出了设置多级相册的方法，很有意思。</p>
</blockquote>
</li>
<li><p>胖逆的嘟嘟.<code>hexo干货系列：（六）hexo提交搜索引擎（百度+谷歌）</code>[EB/OL].<a href="https://www.cnblogs.com/tengj/p/5357879.html">https://www.cnblogs.com/tengj/p/5357879.html</a>, 2020/08/29.</p>
<blockquote>
<p>参照设置自动推送方法。</p>
</blockquote>
</li>
<li><p>百度资源搜索平台.<code>平台工具使用帮助-链接提交</code>[EB/OL].<a href="https://ziyuan.baidu.com/college/courseinfo?id=267&amp;page=2">https://ziyuan.baidu.com/college/courseinfo?id=267&amp;page=2</a>, 2020/08/29.</p>
<blockquote>
<p>文章提出，百度自动推送功能已暂停使用。</p>
</blockquote>
</li>
<li><p>叶少翔.<code>js统计页面加载时间</code>[EB/OL].<a href="https://blog.csdn.net/jiangzunshao/article/details/53040785">https://blog.csdn.net/jiangzunshao/article/details/53040785</a>, 2020/08/30.</p>
<blockquote>
<p>参照设置了了页面加载的时间计算脚本。</p>
</blockquote>
</li>
<li><p>周思伟.<code>hexo-theme-yilia-plus</code>[EB/OL].<a href="https://github.com/JoeyBling/hexo-theme-yilia-plus">https://github.com/JoeyBling/hexo-theme-yilia-plus</a>, 2020/08/30.</p>
<blockquote>
<p>这个主题关于组件的集成思路可以参考。</p>
</blockquote>
</li>
<li><p>恶魔萝莉控.<code>给博客添加夜间模式</code>[EB/OL].<a href="https://nocilol.me/archives/code/add-night-mode-to-blog/">https://nocilol.me/archives/code/add-night-mode-to-blog/</a>, 2020/09/05.</p>
<blockquote>
<p>参考这个设置了主题夜间模式的脚本。</p>
</blockquote>
</li>
<li><p><del>crosschannel.cc.<code>面向小白的Hexo添加暗色模式教程</code>[EB/OL].<a href="https://crosschannel.cc/daily/hexo%E6%B7%BB%E5%8A%A0%E6%9A%97%E8%89%B2%E6%A8%A1%E5%BC%8F.html">https://crosschannel.cc/daily/hexo%E6%B7%BB%E5%8A%A0%E6%9A%97%E8%89%B2%E6%A8%A1%E5%BC%8F.html</a>, 2020/09/05.</del></p>
<blockquote>
<p>该文章提出了使用媒体查询的方式来切换夜间模式，可以参考，下一步研究。</p>
</blockquote>
</li>
<li><p><del>小康.<code>Hexo博客之butterfly主题优雅魔改系列（持续更新）</code>[EB/OL].<a href="https://www.antmoe.com/posts/a811d614/index.html">https://www.antmoe.com/posts/a811d614/index.html</a>, 2020/09/05.</del></p>
<blockquote>
<p>作者的魔改主题，有空可以研究。</p>
</blockquote>
</li>
<li><p><del>阳光派Plus.<code>hexo之Volantis添加暗黑模式</code>[EB/OL].<a href="https://www.zyoushuo.cn/post/e8f5.html">https://www.zyoushuo.cn/post/e8f5.html</a>, 2020/09/05.</del></p>
<blockquote>
<p>　作者的切换模式的动画，很有特色。</p>
</blockquote>
</li>
<li><p>菜鸟教程.<code>HTML DOM getElementsByClassName() 方法</code>[EB/OL].<a href="https://www.runoob.com/jsref/met-document-getelementsbyclassname.html">https://www.runoob.com/jsref/met-document-getelementsbyclassname.html</a>, 2020/09/06.</p>
<blockquote>
<p>通过该文章，学会对获取的元素进行长度处理，避免没有元素却执行 remove 的操作。</p>
</blockquote>
</li>
<li><p>葵花点穴手.<code>div onload事件</code>[EB/OL].<a href="https://blog.csdn.net/skylzc/article/details/79436336">https://blog.csdn.net/skylzc/article/details/79436336</a>, 2020/09/06.</p>
<blockquote>
<p>The onload event can only be used on the document(body) itself, frames, images, and scripts. In other words, it can be attached to only body and/or each external resource. The div is not an external resource and it’s loaded as part of the body, so the onload event doesn’t apply there.<br>onload event it only supports with few tags like listed below: <code>&lt;body&gt;, &lt;frame&gt;, &lt;iframe&gt;, &lt;img&gt;, &lt;input type=&quot;image&quot;&gt;, &lt;link&gt;, &lt;script&gt;, &lt;style&gt;</code> .<br>参考该文章，解决了灰暗模式的加载问题。</p>
</blockquote>
</li>
<li><p>Mozilla.<code>list-style-type</code>[EB/OL].<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/list-style-type">https://developer.mozilla.org/zh-CN/docs/Web/CSS/list-style-type</a>, 2020/10/08.</p>
<blockquote>
<p>多级列表前导符号、数字的 list-style-type 属性。</p>
</blockquote>
</li>
<li><p>腾讯寻人.<code>公益 404 页面介绍</code>[EB/OL].<a href="https://www.qq.com/404/">https://www.qq.com/404/</a>, 2020/10/08.</p>
</li>
<li><p>wensonlee.<code>表格自动换行，避免撑开</code>[EB/OL].<a href="https://blog.csdn.net/wensonlee/article/details/83156892">https://blog.csdn.net/wensonlee/article/details/83156892</a>, 2020/10/09.</p>
</li>
<li><p>曾经沧海　云淡风轻.<code>SiteMap 提交，并使用正确的方式提交给搜索引擎</code>[EB/OL].<a href="https://www.cnblogs.com/yifenghong/p/4418063.html">https://www.cnblogs.com/yifenghong/p/4418063.html</a>, 2021/01/03.</p>
</li>
<li><p><del>_好好编程_.<code>修改文章内链接样式 ｜ hexo</code>[EB/OL].<a href="https://blog.csdn.net/qw8880000/article/details/80235648">https://blog.csdn.net/qw8880000/article/details/80235648</a>, 2021/02/08.</del></p>
</li>
<li><p><del>Molunerfinn.<code>hexo-theme-melody：一个为Hexo打造的简洁、漂亮、快速的主题</code>[EB/OL].<a href="https://molunerfinn.com/hexo-theme-melody-doc/zh-Hans/">https://molunerfinn.com/hexo-theme-melody-doc/zh-Hans/</a>, 2021/02/08.</del></p>
<blockquote>
<p>这个主题写的挺好看，有空学习一下。</p>
</blockquote>
</li>
<li><p><del>試毅-思伟.<code>Hexo博客集成码云评论系统</code>[EB/OL].<a href="https://zhousiwei.gitee.io/2019/07/25/Hexo%E5%8D%9A%E5%AE%A2%E9%9B%86%E6%88%90%E7%A0%81%E4%BA%91%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/">https://zhousiwei.gitee.io/2019/07/25/Hexo%E5%8D%9A%E5%AE%A2%E9%9B%86%E6%88%90%E7%A0%81%E4%BA%91%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</a>, 2021/02/12.</del></p>
<blockquote>
<p>不确定，反正我没成功；放弃了使用 giteement 评论功能。</p>
</blockquote>
</li>
<li><p>搜狐公司.<code>（畅言云评）PC端 通用代码接入</code>[EB/OL].<a href="http://changyan.kuaizhan.com/static/help/">http://changyan.kuaizhan.com/static/help/</a>, 2021/02/13.</p>
</li>
<li><p>魏蕊蕊@贝壳找房.<code>tocbot源码解读</code>[EB/OL].<a href="https://mp.weixin.qq.com/s/ZWYgh7j_AvbgDcrL2kTG5Q">https://mp.weixin.qq.com/s/ZWYgh7j_AvbgDcrL2kTG5Q</a>, 2021/02/13.</p>
<blockquote>
<p>tocbot插件主要通过标签id属性实现跳转，如果标签中没有id属性或者id中包含中文字符，无法跳转。</p>
</blockquote>
</li>
<li><p>TRHX • 鲍勃.<code>CSS 与其预处理语言 Sass、Less、Stylus 之间的转化</code>[EB/OL].<a href="https://blog.csdn.net/qq_36759224/article/details/91492651">https://blog.csdn.net/qq_36759224/article/details/91492651</a>, 2021/02/15.</p>
</li>
<li><p>W3School.<code>CSS white-space 属性</code>[EB/OL].<a href="https://www.w3school.com.cn/cssref/pr_text_white-space.asp">https://www.w3school.com.cn/cssref/pr_text_white-space.asp</a>, 2021/02/17.</p>
</li>
<li><p>璀璨星空.<code>Hexo分页设置的问题</code>[EB/OL].<a href="http://jerry011235.github.io/2015/05/18/Hexo%E5%88%86%E9%A1%B5%E8%AE%BE%E7%BD%AE%E7%9A%84%E9%97%AE%E9%A2%98/">http://jerry011235.github.io/2015/05/18/Hexo%E5%88%86%E9%A1%B5%E8%AE%BE%E7%BD%AE%E7%9A%84%E9%97%AE%E9%A2%98/</a>, 2021/03/06.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>我和hexo有个约会</category>
      </categories>
      <tags>
        <tag>日志</tag>
        <tag>hexo</tag>
        <tag>hexo-theme-faradays</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World（世界，你好）</title>
    <url>/202008090000/</url>
    <content><![CDATA[<p>世界，你好！我是一名低微到尘埃里的普通人，曾经幻想过成为一名科学家，为国家科技事业贡献力量，然后我并没有这样的超凡的智商；我成为了一名普通的工程师，我克服了很多很多的困难，在不同的岗位上也取得了一些成绩，然而，我的缺点和遇到的困难，仍然很多，有些时候，差点将我打倒了！</p>
<p>同龄的同事，不少人获得了职务上的升迁，不少人获得了名誉上的进步，我也不想就这样放弃，不想放任自我，因此我也要在这里尝试发出我自己的声音，我要进步，我要追求卓越！</p>
<p>世界，你好。社会，你好。我一直都很期盼见到明天的太阳，愿美好的生活终将来临！</p>
]]></content>
      <categories>
        <category>星星心事</category>
      </categories>
      <tags>
        <tag>日志</tag>
        <tag>你好</tag>
        <tag>追求卓越</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 批处理的字符运算（未完待续）</title>
    <url>/202008200927/</url>
    <content><![CDATA[<p>字符运算历来是编程中的重要内容，如何拼接字符，如何截取字符，如何判断字符是否存在，如何判断两个字符串是否相同，成为了编程任务中的重要环节。因此，我结合网络的资料和个人的实践经验来总结一下。</p>
<h2 id="Windows-批处理中字符的基本常识"><a href="#Windows-批处理中字符的基本常识" class="headerlink" title="Windows 批处理中字符的基本常识"></a>Windows 批处理中字符的基本常识</h2><ol>
<li><p>批处理中变量的赋值符号两侧不能包含空格，如 <code>set str_date=&#39;20200820&#39;</code>，这与很多编程规范是相悖的。</p>
</li>
<li><p>批处理中的字符可以不添加双引号，但是如果包含空格的话，必须使用引号，，如 <code>set str_name=&quot;20200820 Windows 批处理的字符运算经验总结&quot;</code>。</p>
</li>
<li><p>自定义变量使用 % 来包围来进行引用，即 <code>%变量%</code> ；而 Windows 内置变量（含文件路径变量扩展）则使用 % 符号来引导，即 <code>%内置变量</code> 。</p>
</li>
</ol>
<h2 id="截取字符串"><a href="#截取字符串" class="headerlink" title="截取字符串"></a>截取字符串</h2><h3 id="一般性的字符截取"><a href="#一般性的字符截取" class="headerlink" title="一般性的字符截取"></a>一般性的字符截取</h3><ol>
<li>基本语法： <code>%**变量名**:~**起点位置**,**截取数量|终点位置**%</code></li>
</ol>
<p><strong>起点位置</strong> ：如果为正数，那么就是从左往右截取，而如果为负数，那么就是说从右向左截取；不过无论为正还是为负，截取结果都是不包含处于 <strong>起点位置</strong> 的那个字符的。</p>
<p><strong>截取数量|终点位置</strong> ：如果为正数，那么就是单纯的 <strong>截取数量</strong> ；如果为负数，那么应当表述为 <strong>终点位置</strong> ，而且，与 <strong>起点位置</strong> 对应，截取结果也是不包含该负数所对应的字符的，即上述的 -5 对应的是终点位置为右侧第 6 个字符截止。</p>
<p>举例说明，如下：</p>
<pre><code class="dos">echo on
set ifo=abcdefghijklmnopqrstuvwxyz0123456789
echo %ifo%
echo.
echo 截取前4个字符：%ifo:~0,4%
echo 截取年度：%date:~0,4%
echo.
echo 截取最后2个字符：%ifo:~-2%
echo 截取星期：%date:~-2%
echo.
echo 截取第一个到倒数第6个字符：%ifo:~0,-5%
echo 截取日期（含分隔符）：%date:~0,-3%
echo.
echo 从第5个字符开始，截取2个字符：%ifo:~4,2%
echo 截取月份：%date:~5,2%
echo 截取天数：%date:~8,2%
echo.
echo 从倒数第14个字符开始，截取5个字符：%ifo:~-14,5%
echo 截取秒数：%time:~3,2%
echo.
echo 当前时间是：%time% 即 %time:~0,2%点%time:~3,2%分%time:~6,2%秒%time:~9,2%厘秒
pause</code></pre>
<p>当然，我最常用的就是对日期、时间等内置变量的操作。</p>
<h3 id="文件路径字符的截取"><a href="#文件路径字符的截取" class="headerlink" title="文件路径字符的截取"></a>文件路径字符的截取</h3><p>主要依靠 Windows 内置的扩展变量用法来进行。</p>
<p>执行 <code>for /?</code> 可以查看路径扩展的</p>
<p>举例说明，如下（注意，需要另存为 test.bat 文件形式执行）：</p>
<pre><code class="powershell">@echo off
echo 当前路径的完整字符串：%0
echo 当前路径的完整字符串（如被双引号包围，去除双引号）：%~0
echo 当前路径的所在分区：%~d0
echo 当前路径的目录：%~p0
echo 文件名：%~n0
echo 扩展名：%~x0
echo 文件属性：%~a0
echo 修改时间：%~t0
echo 文件大小：%~z0
pause</code></pre>
<p>路径处理，往往都配合 for 函数进行操作。</p>
<p><strong>未完待续…</strong></p>
<h2 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h2><h3 id="变更日志"><a href="#变更日志" class="headerlink" title="变更日志"></a>变更日志</h3><ol>
<li>2020/08/20 10:49:23，创建文章。</li>
</ol>
<h3 id="参考索引"><a href="#参考索引" class="headerlink" title="参考索引"></a>参考索引</h3><ol>
<li><strong>CharyGao</strong>.<code>DOS命令（cmd）批处理：替换字符串、截取字符串、扩充字符串、获取字符串长度</code>[EB/OL].<a href="https://www.cnblogs.com/Chary/p/No0000A4.html">https://www.cnblogs.com/Chary/p/No0000A4.html</a>, 2020/08/20.</li>
</ol>
]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>批处理</tag>
        <tag>字符运算</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Git 命令来管理 hexo 博客</title>
    <url>/202008261600/</url>
    <content><![CDATA[<h2 id="Git-命令集成"><a href="#Git-命令集成" class="headerlink" title="Git 命令集成"></a>Git 命令集成</h2><p><img src="/static/img/git.jpg" alt="Git基本使用方法示意图"></p>
<ol>
<li><p>测试 GitHub 可访问性</p>
<blockquote>
<p>ssh -T <a href="mailto:git@github.com">git@github.com</a></p>
</blockquote>
</li>
<li><p>更新主分支（下载更新）</p>
<blockquote>
<p>D:   &amp;&amp;   D:\faradays-studio.github\faradays-studio.github.io   &amp;&amp;    git checkout</p>
</blockquote>
</li>
<li><p>更新其他分支（下载更新）</p>
<blockquote>
<p>git checkout -b blog origin/blog<br>git checkout -t      origin/blog</p>
</blockquote>
</li>
<li><p>提交到本地</p>
<blockquote>
<p>git commit -a -m u”pdate the website statement”</p>
</blockquote>
</li>
<li><p>提交到GitHub</p>
<blockquote>
<p>git push origin master</p>
</blockquote>
</li>
<li><p>基本用法说明</p>
</li>
</ol>
<ul>
<li><p>查看分支<br>  git branch -a<br>  git branch -v<br>  git branch -r</p>
</li>
<li><p>查看最近的 commit 信息<br>  git show HEAD</p>
<pre><code>  按 q 退出</code></pre></li>
<li><p>git checkout -b &lt;分支名&gt;<br>  git checkout -b blog</p>
</li>
<li><p>从 服务器 下载更新到本地<br>  由于 hexo 更新后，本地会版本落后，因此需要更新<br>  git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;<br>  git pull origin master</p>
<pre><code>  或 git pull origin master:master</code></pre><p>  git pull origin blog:blog</p>
</li>
</ul>
<h3 id="使用-git-管理主题的流程示意"><a href="#使用-git-管理主题的流程示意" class="headerlink" title="使用 git 管理主题的流程示意"></a>使用 git 管理主题的流程示意</h3><pre><code>``` sh
#克隆你fork出来的分支
$git clone &lt;远程Arepository&gt;

#添加远程B repository标签
$git remote add &lt;远程B repository标签&gt; git@github.com:XXXX/ceph.git

#从远程Brepository的master分支拉取最新objects合并到本地master分支
$git pull &lt;远程B厂库标签&gt; master:master

#切换到要修改的分支上
$git checkout YYYY

#在当前分支的基础上创建一个开发分支，并切换到该分支上，你将在该分支上coding
$git branch develop; git checkout develop

#在工作区coding
coding...... 

#将修改保存到索引区
$git add .

#将修改提交到本地分区
$git commit -a

#将本地分支my_test提交到远程A repository的my_test分支上
$git push origin my_test:my_test
```</code></pre><h3 id="hexo-博客删除部分-commit-的操作实践"><a href="#hexo-博客删除部分-commit-的操作实践" class="headerlink" title="hexo 博客删除部分 commit 的操作实践"></a>hexo 博客删除部分 commit 的操作实践</h3><p>经过 2 天半的来回测试，终于删除了上传了隐藏文件 <code>hid*.html</code> 文件的提交。</p>
<ol>
<li><p>出现 <code>HEAD detached at 68e8065</code> 等错误的解决方法：</p>
<pre><code class="sh"> # 给 blog 起个 branch 名 blog_temp1
 git branch blog_temp1 blog
 git branch -a
 # Head 指向实际使用的 branch，注意不是 origin/blog
 git checkout blog
 # 融合到当前 branch
 git merge blog_temp1
     合并时存在问题，如果以本地为准 git  add，以服务器为准则 git  rm XXXX，然后 git commit
     再重新执行合并
 # 删除临时 branch
 git branch -d blog_temp1</code></pre>
</li>
<li><p>删除特定 commit (# 由于 hexo 自身存在一个版本库，因此需要进行相应的处理)</p>
<pre><code class="sh"> git log  
 git rebase -i XXX       # 将需要删除的最早的提交之前的一次提交做基础 
     将相关 commit 记录中的 pick 改为 drop，保存即实现本地删除。
 git push origin blog -f    # 强制提交本地版本到远程（实现远程删除）
 git status       # 查看状态
 git log --oneline
 git pull origin blog:blog
 git log --oneline

 cd D:\WebSites\faradays-studio.hexo\.deploy_git
 执行上述过程，如出现 `HEAD detached ` 等报错，注意分支名称实际为 master，
 执行 hexo 同步至远程</code></pre>
</li>
<li><p>具体的操作过程：</p>
<pre><code class="sh"> # 从 GitHub 下拉取版本库，确保本地文件为最新
 git pull origin blog:blog
 # 查看更新日志
 git log
     相关 log 文件使用 VI 的形式打开，因此可以按 shift + G 跳转到底，按 q 退出修改。
 # 将需要删除的最早提交的前一次提交，设置为版本基础
 git rebase -i 982c78fc82a2a3804233e9ff7ef315fc21dc0822
     在弹出文件中，将会展示在该提交之后的每个提交信息
     将相关 commit 记录中的 pick 改为 drop，保存即实现本地删除。
     出现 `HEAD detached at 982c78f` 报警

     # 查看当前分支情况
     git branch -a
     # 将当前分支改名
     git branch blog_temp1 blog
     # 解决由于删除造成的版本 merge 报警
     git rm -r about
     git rm content.json
     git rebase --continue
     git commit
     git push origin blog -f

     # 合并分支
     #git merge blog_temp1
     # 重新对 Head 指向 branch（测试表明该步骤不能执行）
     # git checkout blog
     # 删除临时的版本
     git branch -d blog_temp1
 git log --oneline

 # git pull origin blog:blog 等命令无法对 hexo 的版本库进行更新，因此执行以下操作
 # 删除 .deploy_git 文件夹，重新建立版本库理论可行。详见 https://github.com/hexojs/hexo-deployer-git 。
 git rebase -i 982c78fc82a2a3804233e9ff7ef315fc21dc0822
 # 查看状态
 git status
 git rm -r about
 git rm content.json
 git rebase --continue
 git log
 git log --oneline

 #至此，各个版本完成更新，可以使用 hexo 重新生成一次，确保删除的文件被生成
 hexo -d g

 # 查看本地版本日志
 git log --oneline
 # 解决由于前边删除文件导致的版本文件数量不一致的问题
 git pull -r
 # 下载网络更新到本地
 git pull origin blog:blog
 # 检查更新情况后的版本日志
 git log --oneline</code></pre>
</li>
</ol>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p>UniqueColor.<code>git chekout分支遇到问题：need merge</code>[EB/OL].<a href="https://www.cnblogs.com/UniqueColor/p/6594942.html">https://www.cnblogs.com/UniqueColor/p/6594942.html</a>, 2020/08/26.</p>
</li>
<li><p>奔跑的小龙码.<code>git删除指定commit</code>[EB/OL].<a href="https://www.cnblogs.com/lwcode6/p/11809973.html">https://www.cnblogs.com/lwcode6/p/11809973.html</a>, 2020/08/26.</p>
<blockquote>
<p>通过 add /rm 来指定本机处理措施，git commit -s，再 pull，再push</p>
</blockquote>
</li>
<li><p>Jack_Chao.<code>Git 快速使用 之 冲突 merge 快速解决</code>[EB/OL].<a href="https://www.jianshu.com/p/50ef88bda474">https://www.jianshu.com/p/50ef88bda474</a>, 2020/08/26.</p>
</li>
<li><p>星辰之力.<code>git push &amp; git pull 推送/拉取分支</code>[EB/OL].<a href="https://www.cnblogs.com/zhujiabin/p/9641305.html">https://www.cnblogs.com/zhujiabin/p/9641305.html</a>, 2020/08/27.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>我和hexo有个约会</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>git</tag>
        <tag>faradays</tag>
      </tags>
  </entry>
  <entry>
    <title>苹果 Macbook Pro 笔记本从 U 盘启动以及重置开机密码的方法</title>
    <url>/202008272141/</url>
    <content><![CDATA[<p>前几天，有位老领导委托我对其苹果 Macbook Pro 2018 笔记本进行优化处理。由于网上的资料比较零散、挂一漏万，因此我也来总结一下操作经验。</p>
<h2 id="配置-U盘启动或者切换系统的方法"><a href="#配置-U盘启动或者切换系统的方法" class="headerlink" title="配置 U盘启动或者切换系统的方法"></a>配置 U盘启动或者切换系统的方法</h2><ul>
<li><p>Macbook 没有 BISO 等设置，所谓的进入 U盘 PE 或者切换双系统的方法是：按住 <kbd>Option</kbd> 键，然后按电源键开机，那么就会出现一个类似于 Windows 启动项的界面，从而用于实现改变启动方式的效果。</p>
<p>  <img src="/static/img/Macbook-%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%95%8C%E9%9D%A2-20200824.jpg" alt="Macbook启动项界面-HHJ"></p>
</li>
</ul>
<blockquote>
<p>苹果电脑安装 Windows 系统，一般都是通过 Boot Camp 等软件来实现。对于双系统的主机，也可以在 Windows 系统中输入 <strong>“恢复”</strong> 找到相应的菜单进入切换启动盘的功能，不过具体功能我没有完整测试。</p>
</blockquote>
<blockquote>
<p>有意思的是，进入 MacOS 的启动方式选择界面后，如果接入 U盘 PE，那么也能很快识别出来；跟我之前在 BISO 里边配置 U盘启动需要提前接入还是有明显差别的。</p>
</blockquote>
<h2 id="Macbook-重置密码的方法"><a href="#Macbook-重置密码的方法" class="headerlink" title="Macbook 重置密码的方法"></a>Macbook 重置密码的方法</h2><p>结合网络资料测试了一下，操作流程如下：</p>
<ol>
<li><p>按住 <kbd>Option</kbd> 键，然后按电源键开机；</p>
</li>
<li><p>按方向键选择 Macintosh （苹果） 系统，按 <kbd>Command</kbd> + <kbd>r</kbd> 后自动进入系统恢复界面；</p>
</li>
<li><p>在经历进度条界面一会后，选择界面的操作语言后，出现以下界面，执行菜单命令 <code>使用工具</code>→<code>终端</code> ，弹出终端界面：</p>
<p> <img src="/static/img/Macbook-%E7%BB%B4%E6%8A%A4%E7%BB%88%E7%AB%AF-20200824.jpg" alt="Macbook系统恢复界面-HHJ"></p>
</li>
<li><p>在终端中执行 <code>resetpassword</code> ，在弹窗中选择需要重置的用户名，并填入新密码，然后存储到系统即可完成修改。</p>
<p> <img src="/static/img/Macbook-%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81%E7%A4%BA%E6%84%8F%E5%9B%BE-20200824.jpg" alt="Macbook重置密码示意图-HHJ"></p>
</li>
<li><p>完成修改后重新使用第 1 步的方法进入苹果系统，在登入后可能会提示钥匙串密码是否修改等内容，我选择了修改成一致后，重复登录检查账户使用正常。</p>
</li>
</ol>
<blockquote>
<p>需要注意的是，上述方法仅应使用在合法授权的电脑上，请勿滥用！践行社会主义核心价值观，人人有责！</p>
</blockquote>
<h2 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h2><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ol>
<li>学知网.<code>苹果笔记本进入BIOS设置教程</code>[EB/OL].<a href="https://www.jmqz1000.com/dnzs/23488.html">https://www.jmqz1000.com/dnzs/23488.html</a>, 2020/08/24.</li>
</ol>
<h3 id="变更说明"><a href="#变更说明" class="headerlink" title="变更说明"></a>变更说明</h3><ul>
<li><p>1.0.0，2020/08/27 22:29:16，初始版本。</p>
</li>
<li><p>1.0.1，2020/08/28 18:11:26，重新组织语言，去除一些自以为是的废话。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>电脑爱好者</category>
      </categories>
      <tags>
        <tag>Apple</tag>
        <tag>Macbook</tag>
        <tag>MacOS</tag>
        <tag>密码</tag>
        <tag>操作系统</tag>
        <tag>PE</tag>
        <tag>U盘</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年随笔</title>
    <url>/202009022111/</url>
    <content><![CDATA[<h3 id="2020-09-02，明月"><a href="#2020-09-02，明月" class="headerlink" title="2020/09/02，明月"></a>2020/09/02，明月</h3><p>凌晨将寝，看见一轮明月从百叶窗的缝隙中漏了出来。江天一色无纤尘，皎皎空中孤月轮，我想起来了我的老父亲，突然好一阵心酸。</p>
<p>这世界就这一轮明月，父亲看到的明月，和我看到的是不是一样的呢？我无从得知，但是我知道他清澈的心底，应该也和这明月一样，明朗、简洁、孤独的挂在那里！我现在正在重构的 hexo 主题，是否也能和它一样明朗呢？</p>
<h3 id="2020-09-11，疲倦"><a href="#2020-09-11，疲倦" class="headerlink" title="2020/09/11，疲倦"></a>2020/09/11，疲倦</h3><p>今天颇为疲倦，那是种种摧残对生活热爱的力量。</p>
<p>生活无望的摧残有之。生活压力太大，家庭收入有限，总是有种种债务要还，明明金额也不多，可是月月都是勉勉强强，总有一种秦琼卖马、穷途末路的感觉，既担不起风险去谋份新工作拼出路，也割舍不了那些缠缠绵绵的家庭责任。</p>
<p>与人相处的困顿有之。我总以为自己是个文人，家国情怀、儿女情长；然而也不知道如何面对糟糠之妻，是勉励还是鞭策，是举案齐眉还是听之任之；也不知道如何面对幼年儿女，是宠爱还是严厉，是陪伴成长还是执鞭指导。看过不少教育理论和案例，也曾以自身做过很多试验，终究是了了，每一个方向都言之凿凿，然而都不曾看得到光明。一人独行的孤独，布满了天空。</p>
<p>报国无门的失望有之。①得不到应有的回报：在单位里，也曾以一己之力，年年月月坚持，做了很多别人不想做、不能做的事情，但体制之下，来回调动，兜兜转转，始终只是棋子一枚。不少人长袖善舞、坑蒙拐骗，却获得了多次升迁，改善了生活，而我被所谓的工作需要等原因排除在外，常常需要为家庭的每月的账单发愁很久。②官僚主义严重。对于自己，每一次努力改变工作局面，总有领导劝你多克服一下困难，总是有人说你不知道在忙什么；对于企业，有些人，总能罔顾年年亏损，形式主义，人浮于事，人满为患的会议永远在开着，落实工作的，永远都只有那么少数的几个人；好多人都拈轻怕重、装模作样，写计划时高瞻远瞩、侃侃而谈，谈落实时左右掣肘、漠视困难，没有人关心日常应该怎么做提升效率、没有人有魄力面对上级的考核压力，更没有人具有规章制度里边要求的那些工作能力，制度永远只是规范下级、杀鸡儆猴的玩物……我甚至不知道，我10多年来孜孜不倦地工作，到底有没有意义了？！我自小家里生活困顿，多次获得了学校的贫困补助和一些周边人的帮助，曾发誓要报效祖国、造福社会；然而，在年复一年的人治环境下，我几乎丧失去了再挣扎的动力。</p>
<p>人，活的疲惫，不是因为事情太难做，而是因为适应社会不是一个容易的事情！</p>
<h3 id="2020-09-26，迷茫"><a href="#2020-09-26，迷茫" class="headerlink" title="2020/09/26，迷茫"></a>2020/09/26，迷茫</h3><p>昨日，在公司某部门那里被批评项目文件写的不清不楚。我的内容别人看不明白，因此需要修改；这本来也没啥，偏偏别人要告诉我他不是搞这个专业的，这让人有点难受。</p>
<p>法国作家 John Collier 说过，If Youth Knew, If Age Could。我自己理解的意思就是，如果年轻人经验丰富，那么就不会栽在人情世故和盲目自大上；如果老年人能力充沛、能闯善干，那么就不会、也不必利用特权来设置那么多莫名其妙的规则来限制或阻挡事物的发展。</p>
<p>就事论事而言，我也直接参与不少重要的基础事务，天天都在赶任务似的。那天的项目申请书和可行性研究报告都是一天之内匆匆写就的，而且要花费一大笔钱，涉及不少未知的研究和探索，怎么可能足够完善、足够清晰到一个非专业人员能够在几分钟内读懂、并作出投资决策呢！所以，对于这些身居要位、日常看报的中老年专家，我是有看法的：他们平时或做好好先生、或好为人师，对领导阿谀奉承，对基层装腔作势；给我这样的基层打工仔造成种种混乱也是难免的——他们作为从我这样的基础工种提拔上去的技术管理人员，平时不指导和帮助我们，不率先垂范，却要求下层人员有所作为、还要遵守一堆只有下层人员才需要遵守的规则，真可谓“何不食肉糜”的典范！</p>
<p>我一度迷茫，想去纠正他的每一个专业术语上的错误，想引经据典，想据理力争到底…然而，一念之间，竟放弃了这个念头——我们参与日常事务，希望企业兴旺、国家繁荣，那是我们自己主动参与实现的，不是等来的；如果我们再退却了，旁观了，又何来希望？！</p>
<p>是我自己一厢情愿的幻想罢了。我指望着的人——他们早已被生活和工作刺破了梦想、也与高官厚禄无望，我竟希望他们能够礼贤下士、推陈出新？！那也太为难人了！试想，又有几个人不曾怀揣着“仗剑走天涯”的梦想，却偏偏在现实社会中得到遍体鳞伤、至今怕蛇咬？他们不正和我现在一样吗——总以为自己技术业绩很突出就能傲视群雄，甚至学着别人的腔调说“生态就是被你们这些人搞坏的”，然后无所作为地、等待着别人来改善生态环境。可是我做的就够了吗？我低微到了尘埃里，可也有人说自己更低微，期盼着我不要在工作中给他们挑刺，帮他们协调解决哪些超出了能力的怪事吗？</p>
<p>算了，做自己能做的事吧！希望明天会好一点，希望“日行一善，积善成德；日行一善，功满三千”，时间自有定论。</p>
]]></content>
      <categories>
        <category>星星心事</category>
      </categories>
      <tags>
        <tag>2020</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Shell 中使用 printf 格式化输出语句</title>
    <url>/202009292008/</url>
    <content><![CDATA[<p>在使用 shell 编程的过程，难免要进行内容输出，我们一般情况下都使用 <code>echo</code> 命令进行输出，如 <code>echo &quot;Hello, World&quot;</code> ，不过功能比较有限；如果需要高级的格式化功能控制，那么应当使用 <code>printf</code> 命令。</p>
<pre><code>printf 由 POSIX 标准所定义，是C语言 `printf()` 库函数的一个有限的变形（在语法上也有些不同），是 echo 命令的增强版。
printf 不像 echo 那样会自动换行，必须显式添加换行符 `\n` 。</code></pre><h2 id="语法说明"><a href="#语法说明" class="headerlink" title="语法说明"></a>语法说明</h2><h3 id="printf-命令的语法"><a href="#printf-命令的语法" class="headerlink" title="printf 命令的语法"></a>printf 命令的语法</h3><pre><code>printf   &#123;format-string1 format-string2...&#125;   [arguments1 arguments2...]</code></pre><ol>
<li><p><code>format-string</code> 为格式控制字符串（可以没有引号，但最好加上，单引号、双引号均可；多个格式字符使用空格进行分隔），按 <strong>%[标志][输出最小宽度][.精度][长度]类型</strong> 格式书写：</p>
<ul>
<li><p>标志：即正负号或进制符号的设定</p>
<table>
<thead>
<tr>
<th>标 志</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>-</td>
<td>结果左对齐，右边填空格</td>
</tr>
<tr>
<td>+</td>
<td>输出符号(正号或负号)</td>
</tr>
<tr>
<td>空格</td>
<td>输出值为正时冠以空格，为负时冠以负号</td>
</tr>
<tr>
<td>#</td>
<td>对c、s、d、u类无影响； 对o类，在输出时加前缀o； 对x类，在输出时加前缀0x； 对e、g、f 类当结果有小数时才给出小数点。</td>
</tr>
</tbody></table>
</li>
<li><p>输出最小宽度：用十进制整数来表示输出的最少位数。若实际位数多于定义的宽度，则按实际位数输出，若实际位数少于定义的宽度则补以 <strong>空格</strong> 或 <code>0</code>。</p>
</li>
<li><p>精度：以 <code>.</code> 开头，后跟十进制整数。本项的意义是：如果输出数字，则表示小数的位数；如果输出的是字符，则表示输出字符的个数；若实际位数大于所定义的精度数，则截去超过的部分。</p>
</li>
<li><p>长度：格式符分为h、l两种， <code>h</code> 表示按短整型量输出，<code>l</code> 表示按长整型量输出。</p>
</li>
<li><p>类型：即输出数据的变量类型设定</p>
<table>
<thead>
<tr>
<th>格式字符</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>d</td>
<td>以十进制形式输出带符号整数(正数不输出符号)</td>
</tr>
<tr>
<td>o</td>
<td>以八进制形式输出无符号整数(不输出前缀0)</td>
</tr>
<tr>
<td>x,X</td>
<td>以十六进制形式输出无符号整数(不输出前缀Ox)</td>
</tr>
<tr>
<td>u</td>
<td>以十进制形式输出无符号整数</td>
</tr>
<tr>
<td>f</td>
<td>以小数形式输出单、双精度实数</td>
</tr>
<tr>
<td>e,E</td>
<td>以指数形式输出单、双精度实数</td>
</tr>
<tr>
<td>g,G</td>
<td>以%f或%e中较短的输出宽度输出单、双精度实数</td>
</tr>
<tr>
<td>c</td>
<td>输出单个字符</td>
</tr>
<tr>
<td>s</td>
<td>输出字符串</td>
</tr>
</tbody></table>
</li>
<li><p>举例</p>
<ul>
<li><code>%d</code> 表示按十进制整型输出；</li>
<li><code>%ld</code> 表示按十进制长整型输出；</li>
<li><code>%c</code> 表示按字符型输出等。</li>
</ul>
</li>
</ul>
</li>
<li><p><code>arguments</code> 为参数列表（多个参数使用空格分隔，不用逗号；若 <code>arguments</code> 多于 <code>format-string</code> 时，<code>format-string</code> 将自动重用）。</p>
<blockquote>
<p>参数来自于前序程序段，也就是需要格式化输出的变量。</p>
</blockquote>
</li>
</ol>
<h3 id="printf-命令的转义序列"><a href="#printf-命令的转义序列" class="headerlink" title="printf 命令的转义序列"></a>printf 命令的转义序列</h3><p>由于部分控制字符并不含在变量（参数）中，也无法使用格式控制符导入，比如变量之间的连接符等等，因此需要使用转义字符来完善格式化功能。最常见的就是增加换行符和制表符等，如 <code>printf &quot;Hello, Shell\n&quot;</code> 。</p>
<table>
<thead>
<tr>
<th align="left">序列</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">\a</td>
<td align="left">警告字符，通常为 ASCII 的 BEL 字符</td>
</tr>
<tr>
<td align="left">\b</td>
<td align="left">后退</td>
</tr>
<tr>
<td align="left">\c</td>
<td align="left">抑制（不显示）输出结果中任何结尾的换行字符（只在 %b 格式指示符控制下的参数字符串中有效），而且，任何留在参数里的字符、任何接下来的参数以及任何留在格式字符串中的字符，都被忽略</td>
</tr>
<tr>
<td align="left">\f</td>
<td align="left">换页（formfeed）</td>
</tr>
<tr>
<td align="left">\n</td>
<td align="left">换行</td>
</tr>
<tr>
<td align="left">\r</td>
<td align="left">回车（Carriage return）</td>
</tr>
<tr>
<td align="left">\t</td>
<td align="left">水平制表符</td>
</tr>
<tr>
<td align="left">\v</td>
<td align="left">垂直制表符</td>
</tr>
<tr>
<td align="left">\</td>
<td align="left">一个字面上的反斜杠字符</td>
</tr>
<tr>
<td align="left">\ddd</td>
<td align="left">表示 1 到 3 位数八进制值的字符。仅在格式字符串中有效</td>
</tr>
<tr>
<td align="left">\0ddd</td>
<td align="left">表示 1 到 3 位的八进制值字符</td>
</tr>
</tbody></table>
<h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><ol>
<li><p>示例1（shell 示例）</p>
<pre><code class="sh"> #!/bin/bash
 # author: david faraday
 # created: 2020/10/05 17:05:13

 # format-string为双引号
 printf &quot;%d %s\n&quot; 1 &quot;abc&quot;

 # 单引号与双引号效果一样 
 printf &#39;%d %s\n&#39; 1 &quot;abc&quot; 

 # 没有引号也可以输出
 printf %s abcdef

 # 格式只指定了一个参数，但多出的参数仍然会按照该格式输出，format-string 被重用
 printf %s abc def

 printf &quot;%s\n&quot; abc def

 printf &quot;%s %s %s\n&quot; a b c d e f g h i j

 # 如果没有 arguments，那么 %s 用NULL代替，%d 用 0 代替
 printf &quot;%s and %d \n&quot; </code></pre>
<p> 上述输出结果为：</p>
<pre><code class="shell"> 1 abc
 1 abc
 abcdefabcdefabc
 def
 a b c
 d e f
 g h i
 j  
 and 0</code></pre>
</li>
</ol>
<ol start="2">
<li><p>示例2：表格化输出</p>
<pre><code class="sh"> #!/bin/bash
 # author: david faraday
 # created: 2020/10/05 17:15:25

 printf &quot;%-10s %-8s %-4s\n&quot; 姓名 性别 体重kg  
 printf &quot;%-10s %-8s %-4.2f\n&quot; 郭靖 男 66.1234 
 printf &quot;%-10s %-8s %-4.2f\n&quot; 杨过 男 48.6543 
 printf &quot;%-10s %-8s %-4.2f\n&quot; 郭芙 女 47.9876 </code></pre>
<blockquote>
<p><code>%-10s</code> 指一个宽度为 10 个字符（ <code>-</code> 表示左对齐，没有则表示右对齐），任何字符都会被显示在 10 个字符宽的字符内，如果不足则自动以空格填充，超过也会将内容全部显示出来。<br><code>%-4.2f</code> 指格式化为小数，其中 <code>.2</code> 指保留 2 位小数。</p>
</blockquote>
<p> 执行脚本，输出结果如下所示：</p>
<pre><code class="xls"> 姓名     性别   体重kg
 郭靖     男      66.12
 杨过     男      48.65
 郭芙     女      47.99</code></pre>
</li>
</ol>
<ol start="3">
<li><p>示例（C 语言示例）</p>
<pre><code class="C"> #include &lt;stdio.h&gt;
 int main(void)&#123;
     int i=8;
     printf(&quot;The raw value: i=%d\n&quot;, i);
     printf(&quot;++i=%d \n++i=%d \n--i=%d \n--i=%d\n&quot;,++i,++i,--i,--i);
     return 0;
 &#125;</code></pre>
<p> 运行结果：</p>
<pre><code> The raw value: i=8
 ++i=8
 ++i=7
 --i=6
 --i=7</code></pre></li>
</ol>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h3><ul>
<li>1.0.0，2020/10/05 21:51:03，初始版本。</li>
</ul>
<h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ol>
<li><p>w3cschool编程狮.<code>Shell printf 命令</code>[EB/OL].<a href="https://www.w3cschool.cn/linux/linux-shell-printf.html">https://www.w3cschool.cn/linux/linux-shell-printf.html</a>, 2020/09/29.</p>
</li>
<li><p>C语言中文网.<code>shell printf命令：格式化输出语句</code>[EB/OL].<a href="http://c.biancheng.net/cpp/view/1499.html">http://c.biancheng.net/cpp/view/1499.html</a>, 2020/09/29.</p>
</li>
<li><p>C语言中文网.<code>C语言格式输出函数printf()详解</code>[EB/OL].<a href="http://c.biancheng.net/cpp/html/33.html">http://c.biancheng.net/cpp/html/33.html</a>, 2020/10/05.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>printf</tag>
        <tag>格式化</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>评《Margin Call》：高个不挑担，世上永无光</title>
    <url>/202010021008/</url>
    <content><![CDATA[<blockquote>
<p>直到落幕，我才意识到 《Margin Call》（商海通牒） 已经结束，可是对它的感悟我才刚刚开始…</p>
</blockquote>
<ul>
<li>剧本 ☆☆☆☆</li>
<li>场景 ☆☆☆☆</li>
<li>演绎 ☆☆☆☆</li>
<li>综合 ☆☆☆☆</li>
</ul>
<h2 id="剧情摘要"><a href="#剧情摘要" class="headerlink" title="剧情摘要"></a>剧情摘要</h2><p>整个故事不复杂：一家公司正在大幅裁员，领导 Sam 带头鼓掌并发表了鼓舞人心的讲话，员工们纷纷加班至深夜；努力工作的新员工 Peter 在别人下班去娱乐的时候，发现了公司风险模型预测到未来走势将大幅下跌，光是一层楼 25% 的亏损将超过公司的市值，立即汇报领导 Will ，领导也汇报他的领导 Sam，最后二把手贾德·科恩也在凌晨 2 点乘坐直升机来到公司，并决策抛售公司资产、及时止损。</p>
<p>整部电影一直都没有正面展开商业斗争的波谲云诡（bō jué yún guǐ），而是大量了使用了各种背景阐述，各种侧面语言动作渲染。电影的节奏一直比较缓慢，没有快步奔跑的员工，也没有大幅的悲伤情绪，即使大结局了，既没有看到行业动荡的场景，也没有被阴谋拖入破产骗局的投资人纷纷跳楼的场景；只见暗淡的月色底下，与会者深锁的眉头、凝重的表情，晦涩难懂、含糊不清的经营风险陈述，与员工们纸醉金迷的生活、老板来去直升机、投资人高大上言论形成鲜明的对比。</p>
<p>Eric Dale （艾力克·戴尔）负责风险管理部门，工作了 19 年的员工，秋毫不觉就被即时辞退了。他希望在离职时将工作交接清楚，可是无论是人力资源部门主管还是自己的直属领导 Will Emerson，都没有人搭理他；在电梯门关闭之际，他将做了一半工作的资料U盘给了赶来告别的新员工 Peter，然后到了楼下工作手机就被公司关停了。</p>
<p>发生问题后公司想请他说清楚以及对数据进行保密时，公司才发现已经联系不上他了，只能等到凌晨他妻子打来电话说他在家了，公司才决定去他家里找他、用每小时 17 万多美元的代价来要求他对公司的风险秘密予以保守一天。</p>
<h2 id="社会感悟"><a href="#社会感悟" class="headerlink" title="社会感悟"></a>社会感悟</h2><h3 id="个人利益至上，屠龙少年终成恶龙"><a href="#个人利益至上，屠龙少年终成恶龙" class="headerlink" title="个人利益至上，屠龙少年终成恶龙"></a>个人利益至上，屠龙少年终成恶龙</h3><p>尽管行业性的经济危机将至，但只有一个镜头表现了 2008 年经济大动荡的可怕的之处——因年入 25 万美元而自豪不已的小员工 Seth （赛斯·布雷格曼）面对即将辞退的困境，在卫生间里边痛哭失声，他十多分钟前还镇定自若地说，OK！</p>
<p>公司的领导人 Sam 尽管工作了 34 年，积累了大量的财富，作为人性未泯的领导者，他依然无法放弃对利益的追逐。</p>
<p>他是靠公司体制成功的领导者。他入职早，高高在上，做出英明的决策，英明地裁员、果断地抛售资产，然而公司的主要利润都是那些小员工辛辛苦苦赚来的，他甚至不知道的如何看明白预示着公司未来的曲线怎么看、指标是什么，他也记不住下层员工的名字，但是不影响他拿着公司基层无法企及、难以想象的高薪。他的狗生病了，每天都要花费一千美元治病，他太过于悲伤甚至于不觉得80%的下属被辞退了能怎么样，毕竟他早已从长期的人员流动中变得麻木不仁了！</p>
<p>他来自基层，也拼搏过，因此他同情弱者、忧心行业，良心未泯。 Sam 的手下员工，不乏能力卓著的年轻人，比如说火箭科学家 Peter（彼得·苏利文）；也有出身不凡的得力下属，比如说桥梁工程师 Eric。因此，当二把手要求他出售资产时，他考虑到了对行业的影响以及年轻人的未来，他质疑何为老板毫无选择，他拒绝聆听风险评估，他嚎叫老板让开，他一次又一次地拒绝了二把手的要求，直到杰瑞开出了天价的报酬。</p>
<p>他是利益追逐的一员，当首席风险评估分析师 Sarah（莎拉·罗伯森）等其他部门的人员被二把手说服后，他也自甘堕落，即使明知严重违反良知与诚信，明知 3/7 的人员还将被裁决，他仍然镇定自若地完成了所有下属的工作安排——在一天之内完成风险资产的全部抛售，那么是打六五折也可以。跟他的下属 Will 一样，渴望保留人性，但无法拒绝金钱利益的侵蚀—— Will 站在楼顶做出跳楼的假动作，他颤动地看着深渊，最终还是说“not today”，并向下属员工轻描淡写地描述了去年收入的 250 万美元是如何轻而易举地全部花完的！</p>
<h3 id="遍身罗绮者，不是养蚕人"><a href="#遍身罗绮者，不是养蚕人" class="headerlink" title="遍身罗绮者，不是养蚕人"></a>遍身罗绮者，不是养蚕人</h3><blockquote>
<p>评估员塞斯问长官威尔，这次的危机会给平常人带来的影响？</p>
<p>威尔这样说：这些普通人，他们想要的生活就是香车豪宅，但是他们根本负担不起。这就是为什么我们这么重要，我们是他们豪华生活的根本原因。我们用手指在他们天平的一端压了一下，我们抽走手指，那时候才是真正的公平社会，但是他们马上就会不干。他们想要我们给的东西，但是又喜欢假装不知道这些东西是怎么来的。他们装伪君子比我强多了，去他们的吧！</p>
</blockquote>
<p>尽管二把手很年轻，但是手段非常老到，他左右拉拢员工，用尽方法；他信口开河，满是利益，让人毫无拒绝的可能性。是的，无论是 Sam 还是 Jerry，尽管技术能力平平，但是都心狠手辣，善于言谈，洞察人心，这是他们驱动那些比他们更有技术手段的人为他们卖命赚钱！</p>
<p>更绝的是，最后的老大 John（约翰·图尔德），更是老手中的老手，他左一句你可以 <strong>保留</strong> 股份与分红，右一句 <strong>及时止损比整年焦头烂额更好</strong> 的深入分析，直接将 Sam 说服了。将相本无种，奈何无论人数如何变化，富贵与贫贱的比例永远不变，无论时间过去多长，名利的游戏将永存不朽，历史中的一次次经济危机游戏给了我们无限的启迪：</p>
<blockquote>
<p>1637年、1797年、1819年、1837年、1857年、1884年、1901年、1907年、1929年、1937年、1974年、1987年、1992年、1997年、2000年、还有这次，不管我们叫它什么，一样的缘故，一次又一次，我们挡都挡不住，我们还想阻止它，控制它，甚至放慢它，我们的本性一丁点都没变，我们仅仅是随机应变，如果对了就赚一大笔，如果错了就被晾到一边，这个世界上过去会有，将来也会有，同样比例的赢家和输家，得意洋洋者和垂头丧气者，撑的撑死，饿的饿死，今天像我们这样的人也许前所未有的多，但是那个比例，原封未动。</p>
</blockquote>
<p>历史总是存在输家和赢家，至此， Sam 完全被征服；他已毫不在乎之前是如何如何地一次次的痛苦挣扎， 唯余 “我只是不想事情发展到如此操蛋的地步！” 的感叹给观众去慢慢品味！</p>
<p>夜晚， Sam 回到前妻的房前，埋葬了自己深爱的狗，也埋葬了自己的良心。</p>
<p>从来都没有屠龙的英雄，有的都是最终都会皮毛并带角的怪兽！<strong>公平</strong>、<strong>平等</strong>一直都在头部玩家的口中，从来都不曾真正广泛存在过：古今中外，资本逐利，2% 的头部资本家拥有绝对控股的资源，也许一部分人分到了羹汤成为了人上人，但始终不可能让广大底层人员享受到福利，从来如此，社会主义建设之路何其远哉！</p>
]]></content>
      <categories>
        <category>坐井观天</category>
      </categories>
      <tags>
        <tag>影评</tag>
        <tag>Margin Call</tag>
        <tag>商海通牒</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery 用法入门</title>
    <url>/202010052246/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>虽然已经 2020 年了，但是，对于非专业编程人士来说，使用 jQuery 仍然是一个不错的选择的。因为它是一个希望用户 <strong>写的少，做的多</strong> 的 JavaScript 库，并得到了广泛的使用。它具有以下功能：</p>
<ul>
<li>HTML 元素选取</li>
<li>HTML 元素操作</li>
<li>CSS 操作</li>
<li>HTML 事件函数</li>
<li>JavaScript 特效和动画</li>
<li>HTML DOM 遍历和修改</li>
<li>AJAX</li>
<li>Utilities</li>
</ul>
<blockquote>
<p>我并非是职业写程序的，既没有完整的时间去学习，也没有那样的环境让我学习；只是偶尔由于工作需要使用编程工具，因此 jQuery 帮我快速地完成了网站菜单、网站 UI 等其他工具没有帮我完成的事情。因此即使在大量的批评意见之下，我仍然愿意为 jQuery 代言。</p>
</blockquote>
<h3 id="jQuery版本"><a href="#jQuery版本" class="headerlink" title="jQuery版本"></a>jQuery版本</h3><ol>
<li><p><strong>1.xx</strong> 的版兼容 IE 6/7/8，官方只做 BUG 维护，功能不再新增。最终版本：1.12.4 (2016年5月20日)</p>
</li>
<li><p><strong>2.xx</strong> 版本不兼容 IE 6/7/8，官方只做 BUG 维护，功能不再新增。</p>
</li>
<li><p><strong>3.xx</strong> 版本不兼容 IE 6/7/8，只支持最新的浏览器。并且很多老的jQuery插件不支持 3.x 版。目前该版本是官方主要更新维护的版本。</p>
</li>
</ol>
<blockquote>
<p>压缩版（mini,js）与未压缩版本的功能一致，区别只在于文件大小</p>
</blockquote>
<h3 id="引用-jQuery-到-HTML"><a href="#引用-jQuery-到-HTML" class="headerlink" title="引用 jQuery 到 HTML"></a>引用 jQuery 到 HTML</h3><p>在网页中引入 jQuery 库的方法有很多种，简单总结如下：</p>
<ol>
<li><p>本地引用</p>
<pre><code class="HTML"> &lt;head&gt;
     &lt;script src=&quot;jquery-1.10.2.min.js&quot;&gt;&lt;/script&gt;
 &lt;/head&gt;</code></pre>
<blockquote>
<p>JavaScript 是 HTML5 以及所有现代浏览器中的默认脚本语言！因此没有必要在 <code>&lt;script&gt;</code> 标签中使用 <code>type=&quot;text/javascript&quot;</code> 了。</p>
</blockquote>
</li>
<li><p>CDN 引用</p>
<pre><code class="language"> &lt;head&gt;
     &lt;script src=&quot;https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js&quot;&gt;&lt;/script&gt;

     &lt;script src=&quot;https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&quot;&gt;&lt;/script&gt;

     &lt;script src=&quot;https://upcdn.b0.upaiyun.com/libs/jquery/jquery-2.0.2.min.js&quot;&gt;&lt;/script&gt;

     &lt;script src=&quot;https://lib.sinaapp.com/js/jquery/2.0.2/jquery-2.0.2.min.js&quot;&gt;&lt;/script&gt;

     &lt;script src=&quot;https://ajax.aspnetcdn.com/ajax/jquery/jquery-1.9.0.min.js&quot;&gt;&lt;/script&gt;
 &lt;/head&gt;</code></pre>
<blockquote>
<p><strong>使用 CDN 的原因</strong><br>许多用户在访问其他站点时，已经从百度、又拍云、新浪、谷歌或微软加载过 jQuery。所以结果是，当他们访问您的站点时，会从缓存中加载 jQuery，这样可以减少加载时间。同时，大多数 CDN 都可以确保当用户向其请求文件时，会从离用户最近的服务器上返回响应，这样也可以提高加载速度。</p>
</blockquote>
</li>
</ol>
<h2 id="jQuery-的语法"><a href="#jQuery-的语法" class="headerlink" title="jQuery 的语法"></a>jQuery 的语法</h2><h3 id="jQuery-库的引用字符"><a href="#jQuery-库的引用字符" class="headerlink" title="jQuery 库的引用字符"></a>jQuery 库的引用字符</h3><p>当然要在 JavaScript 语句中指明使用的是 jQuery 库，否则网页怎么知道呢？用法有两种：</p>
<ul>
<li>最常见： <strong>$</strong> ，如 <code>$(&quot;#ID值&quot;);</code> ；</li>
<li>最安全： <strong>jQuery</strong> ，如 <code>jQuery(&quot;#ID值&quot;);</code> 。</li>
</ul>
<p>这两种我都用过，不过网上最常见的是第一种用法，后续也采用这种表述，字面上简洁一些。</p>
<h3 id="入口函数"><a href="#入口函数" class="headerlink" title="入口函数"></a>入口函数</h3><p>为了确保 JavaScript 脚本能够正确执行，建议 jQuery 的编写如下：</p>
<pre><code class="html">&lt;script&gt;
    $(function()&#123;

       // 开始写 jQuery 代码...

    &#125;);
&lt;/script&gt;</code></pre>
<blockquote>
<p>这是为了防止文档在完全加载（就绪）之前运行 jQuery 代码，即在 DOM 加载完成后才可以对 DOM 进行操作。<br>上述方法可以对多个脚本片段进行加载。</p>
</blockquote>
<h3 id="语法公式"><a href="#语法公式" class="headerlink" title="语法公式"></a>语法公式</h3><pre><code>$(selector).action()</code></pre><ul>
<li><p>选择符（selector）：需要 “查询”和”查找” HTML 元素</p>
</li>
<li><p>action()：执行对元素的操作</p>
<pre><code class="js">  $(this).hide() - 隐藏当前元素

  $(&quot;p&quot;).hide() - 隐藏所有 &lt;p&gt; 元素

  $(&quot;p.test&quot;).hide() - 隐藏所有 class=&quot;test&quot; 的 &lt;p&gt; 元素

  $(&quot;#test&quot;).hide() - 隐藏 id=&quot;test&quot; 的元素</code></pre>
</li>
</ul>
<h3 id="jQuery-选择器"><a href="#jQuery-选择器" class="headerlink" title="jQuery 选择器"></a>jQuery 选择器</h3><p>jQuery 选择器允许您对 HTML 元素组或单个元素进行操作。它基于已经存在的 CSS 选择器，实现对元素的 id、类、类型、属性、属性值等 “查找”（或选择）HTML 元素的功能。</p>
<ol>
<li><p>选择器的基本用法</p>
<pre><code class="js"> //id选择器
 $(&quot;#ID值&quot;);

 //标签选择器
 $(&#39;tagName&#39;);

 //class类选择器
 $(&#39;.className&#39;);

 //交集选择器,选择两个条件同时成立的标签
 $(&#39;div.c1&#39;); //选择class=c1的div标签

 //并集选择器，选择满足以下条件中任意一个的所有标签
 $(&#39;#d,.c1,p&#39;); //选择id=d的标签，具有class=c1的标签，标签是p的标签。

 //所有元素选择器
 $(&#39;*&#39;); //选择所有的标签</code></pre>
</li>
<li><p>多层匹配选择</p>
<p> jQuery 的选择器不仅可以选择一个层级的元素，还可以像串珠子一样依次选择多个层级的元素，化简代码的处理逻辑，主要方法如下：</p>
<pre><code class="js"> //后代选择器
 $(&#39;a b&#39;); //处于a标签级别下的所有b标签，用空格分开。

 //子类选择器
 $(&#39;a&gt;b&#39;); //处于a标签级别下一级别的所有b标签。

 //毗邻单一弟弟选择器
 $(&#39;a+b&#39;); //与a标签同一级别的紧挨着a标签的b标签。

 //毗邻多个弟弟选择器
 $(&#39;a~b&#39;); //与a标签同一级别的位于a标签之后的所有b标签。</code></pre>
</li>
<li><p>精确筛选元素</p>
<p> 嗯，jQuery 还可以精确地筛选第 1 个、最后 1 个等元素，相当方便，如下：</p>
<table>
<thead>
<tr>
<th align="left">选择器</th>
<th align="left">实例</th>
<th align="left">选取</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-first.html">:first</a></td>
<td align="left">$(“p:first”)</td>
<td align="left">第一个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-last.html">:last</a></td>
<td align="left">$(“p:last”)</td>
<td align="left">最后一个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-even.html">:even</a></td>
<td align="left">$(“tr:even”)</td>
<td align="left">所有偶数 <code>&lt;tr&gt;</code> 元素，索引值从 0 开始，第一个元素是偶数 (0)，第二个元素是奇数 (1)，以此类推。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-odd.html">:odd</a></td>
<td align="left">$(“tr:odd”)</td>
<td align="left">所有奇数 <code>&lt;tr&gt;</code> 元素，索引值从 0 开始，第一个元素是偶数 (0)，第二个元素是奇数 (1)，以此类推。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/jq-sel-firstchild.html">:first-child</a></td>
<td align="left">$(“p:first-child”)</td>
<td align="left">属于其父元素的第一个子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-firstoftype.html">:first-of-type</a></td>
<td align="left">$(“p:first-of-type”)</td>
<td align="left">属于其父元素的第一个 <code>&lt;p&gt;</code> 元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-lastchild.html">:last-child</a></td>
<td align="left">$(“p:last-child”)</td>
<td align="left">属于其父元素的最后一个子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-lastoftype.html">:last-of-type</a></td>
<td align="left">$(“p:last-of-type”)</td>
<td align="left">属于其父元素的最后一个 <code>&lt;p&gt;</code> 元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-nthchild.html">:nth-child(<em>n</em>)</a></td>
<td align="left">$(“p:nth-child(2)”)</td>
<td align="left">属于其父元素的第二个子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-nthlastchild.html">:nth-last-child(<em>n</em>)</a></td>
<td align="left">$(“p:nth-last-child(2)”)</td>
<td align="left">属于其父元素的第二个子元素的所有 <code>&lt;p&gt;</code> 元素，从最后一个子元素开始计数</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-nthoftype.html">:nth-of-type(<em>n</em>)</a></td>
<td align="left">$(“p:nth-of-type(2)”)</td>
<td align="left">属于其父元素的第二个 <code>&lt;p&gt;</code> 元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-nthlastoftype.html">:nth-last-of-type(<em>n</em>)</a></td>
<td align="left">$(“p:nth-last-of-type(2)”)</td>
<td align="left">属于其父元素的第二个 <code>&lt;p&gt;</code> 元素的所有 <code>&lt;p&gt;</code> 元素，从最后一个子元素开始计数</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-onlychild.html">:only-child</a></td>
<td align="left">$(“p:only-child”)</td>
<td align="left">属于其父元素的唯一子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-onlyoftype.html">:only-of-type</a></td>
<td align="left">$(“p:only-of-type”)</td>
<td align="left">属于其父元素的特定类型的唯一子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
</tbody></table>
</li>
<li><p>当然，如果涉及上下层级之间的关系切换，那就需要在选择器的基础上使用筛选方法了。</p>
<table>
<thead>
<tr>
<th align="left">选择器</th>
<th align="left">实例</th>
<th align="left">选取</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-parent-child.html">parent &gt; child</a></td>
<td align="left">$(“div &gt; p”)</td>
<td align="left"><code>&lt;div&gt;</code> 元素的直接子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-parent-descendant.html">parent descendant</a></td>
<td align="left">$(“div p”)</td>
<td align="left"><code>&lt;div&gt;</code> 元素的后代的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-previous-next.html">element + next</a></td>
<td align="left">$(“div + p”)</td>
<td align="left">每个 <code>&lt;div&gt;</code> 元素相邻的下一个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-previous-siblings.html">element ~ siblings</a></td>
<td align="left">$(“div ~ p”)</td>
<td align="left"><code>&lt;div&gt;</code> 元素同级的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
</tbody></table>
</li>
<li><p>表单的筛选</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>$(“:text”);</td>
<td>找出type=”text”(文本)的input标签</td>
</tr>
<tr>
<td>$(“:password”);</td>
<td>找出type=”password”（密码）的input标签</td>
</tr>
<tr>
<td>$(“:file”);</td>
<td>找出type=”file”（文件）的input标签</td>
</tr>
<tr>
<td>$(“:radio”);</td>
<td>找出type=”radio”（单选框）的input标签</td>
</tr>
<tr>
<td>$(“:checkbox”);</td>
<td>找出type=”checkbox”（多选框）的input标签</td>
</tr>
<tr>
<td>$(“:submit”);</td>
<td>找出type=”submit”的input标签</td>
</tr>
<tr>
<td>$(“:reset”);</td>
<td>找出type=”reset”的input标签</td>
</tr>
<tr>
<td>$(“:button”);</td>
<td>找出type=”button”的input标签</td>
</tr>
</tbody></table>
</li>
</ol>
<blockquote>
<p>注意：$(“:text”)与$(“input:text”);结果相同</p>
</blockquote>
<ol start="6">
<li><p>表单对象的属性</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>$(“input:enabled”);</td>
<td>找出属性为enabled（可用）的input标签</td>
</tr>
<tr>
<td>$(“input:disabled”);</td>
<td>找出属性为disabled（不可用）的input标签</td>
</tr>
<tr>
<td>$(“input:checked”);</td>
<td>找出属性为checked（显示默认选择）的input标签</td>
</tr>
<tr>
<td>$(“:selected”);</td>
<td>找出属性为selected（显示默认选择）的option标签</td>
</tr>
</tbody></table>
</li>
</ol>
<h3 id="jQuery-的方法"><a href="#jQuery-的方法" class="headerlink" title="jQuery 的方法"></a>jQuery 的方法</h3><p>jQuery 方法涉及到事件的操作方法、元素的筛选方法以及元素的动态效果等等。由于该部分内容较为复杂，此处不再展开，详询参考文献 <a href="#refer-anchor-4"><sup>6-12</sup></a> 相关部分。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p>张三帅.<code>jQuery</code>[EB/OL].<a href="https://www.cnblogs.com/mingkong-z/articles/9131866.html">https://www.cnblogs.com/mingkong-z/articles/9131866.html</a>, 2020/10/05.</p>
</li>
<li><p>老佐.<code>JavaScript 及 jQuery 常用dom操作方法</code>[EB/OL].<a href="https://www.cnblogs.com/html5css3js/p/4550666.html">https://www.cnblogs.com/html5css3js/p/4550666.html</a>, 2020/10/05.</p>
</li>
<li><p>hemin.<code>jQuery 1.12.1 速查表</code>[EB/OL].<a href="http://hemin.cn/jq/">http://hemin.cn/jq/</a>, 2020/10/05.</p>
</li>
<li><p>minoz.<code>JQuery字符串的操作</code>[EB/OL].<a href="https://www.cnblogs.com/minozMin/p/8328028.html">https://www.cnblogs.com/minozMin/p/8328028.html</a>, 2020/10/05.</p>
</li>
</ol>
<div id="refer-anchor-4"></div>

<ol start="5">
<li>菜鸟教程.<code>jQuery 安装</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-install.html">https://www.runoob.com/jquery/jquery-install.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-5"></div>

<ol start="6">
<li>菜鸟教程.<code>jQuery 选择器</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-selectors.html">https://www.runoob.com/jquery/jquery-ref-selectors.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-6"></div>

<ol start="7">
<li>菜鸟教程.<code>jQuery 事件方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-events.html">https://www.runoob.com/jquery/jquery-ref-events.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-7"></div>

<ol start="8">
<li>菜鸟教程.<code>jQuery 效果方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-effects.html">https://www.runoob.com/jquery/jquery-ref-effects.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-8"></div>

<ol start="9">
<li>菜鸟教程.<code>jQuery HTML / CSS 方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-html.html">https://www.runoob.com/jquery/jquery-ref-html.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-9"></div>

<ol start="10">
<li>菜鸟教程.<code>jQuery 遍历 方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-traversing.html">https://www.runoob.com/jquery/jquery-ref-traversing.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-10"></div>

<ol start="11">
<li>菜鸟教程.<code>jQuery AJAX 方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-ajax.html">https://www.runoob.com/jquery/jquery-ref-ajax.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-11"></div>

<ol start="12">
<li>菜鸟教程.<code>jQuery 杂项方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-misc.html">https://www.runoob.com/jquery/jquery-ref-misc.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-12"></div>





]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>pacman 包管理器的用法概述</title>
    <url>/202011221004/</url>
    <content><![CDATA[<p>pacman 是 Arch/Manjaro Linux 下的包管理软件。它将一个简单的二进制包格式和易用的构建系统结合了起来。不管软件包是来自官方的 Arch 库还是用户自己创建， pacman 都能方便得管理。</p>
<h2 id="pacman-基本用法"><a href="#pacman-基本用法" class="headerlink" title="pacman 基本用法"></a><code>pacman</code> 基本用法</h2><h3 id="h-查看帮助"><a href="#h-查看帮助" class="headerlink" title="-h 查看帮助"></a><code>-h</code> 查看帮助</h3><p><strong>pacman <code>&#123;-h --help&#125;</code></strong></p>
<h3 id="V-查看版本"><a href="#V-查看版本" class="headerlink" title="-V 查看版本"></a><code>-V</code> 查看版本</h3><p><strong>pacman <code>&#123;-V --version&#125;</code></strong></p>
<h3 id="D-管理数据库选项"><a href="#D-管理数据库选项" class="headerlink" title="-D 管理数据库选项"></a><code>-D</code> 管理数据库选项</h3><p><strong>pacman <code>&#123;-D --database&#125;</code>    <code>&lt;选项&gt;</code>     <code>&lt;软件包&gt;</code></strong></p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th>含义</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td align="left">–asdeps</td>
<td>标记为非单独指定安装的软件包</td>
<td></td>
</tr>
<tr>
<td align="left">–asexplicit</td>
<td>标记为单独指定安装的软件包</td>
<td></td>
</tr>
<tr>
<td align="left">–config &lt;路径&gt;</td>
<td>指定另外的配置文件</td>
<td></td>
</tr>
<tr>
<td align="left">–logfile &lt;路径&gt;</td>
<td>指定另外的日志文件</td>
<td></td>
</tr>
<tr>
<td align="left">–noconfirm</td>
<td>不询问确认</td>
<td></td>
</tr>
<tr>
<td align="left">–noprogressbar</td>
<td>下载文件时不显示进度条</td>
<td></td>
</tr>
<tr>
<td align="left">–noscriptlet</td>
<td>不执行安装小脚本</td>
<td></td>
</tr>
<tr>
<td align="left">-v, –verbose</td>
<td>循环执行</td>
<td></td>
</tr>
<tr>
<td align="left">–debug</td>
<td>显示除错信息</td>
<td></td>
</tr>
<tr>
<td align="left">-r, –root &lt;路径&gt;</td>
<td>指定另外的安装根目录</td>
<td></td>
</tr>
<tr>
<td align="left">-b, –dbpath &lt;路径&gt;</td>
<td>指定另外的数据库位置</td>
<td></td>
</tr>
<tr>
<td align="left">–cachedir &lt;目录&gt;</td>
<td>指定另外的软件包缓存位置</td>
<td></td>
</tr>
<tr>
<td align="left">–arch &lt;架构&gt;</td>
<td>设定另外的架构</td>
<td></td>
</tr>
</tbody></table>
<h3 id="Q-查询安装包"><a href="#Q-查询安装包" class="headerlink" title="-Q 查询安装包"></a><code>-Q</code> 查询安装包</h3><p><strong>pacman <code>&#123;-Q --query&#125;</code>    <code>[选项]</code>    <code>[软件包]</code></strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>-c, –changelog</td>
<td>查看某软件包的更新日志</td>
<td></td>
</tr>
<tr>
<td>-d, –deps</td>
<td>列出所有作为依赖关系安装的软件包 [过滤器]</td>
<td></td>
</tr>
<tr>
<td>-e, –explicit</td>
<td>列出所有单独指定安装的软件包 [过滤器]</td>
<td></td>
</tr>
<tr>
<td>-g, –groups</td>
<td>查看某软件包组所属的所有软件包</td>
<td></td>
</tr>
<tr>
<td>-i, –info</td>
<td>查看软件包信息</td>
<td><code>-ii</code>查看备份文件</td>
</tr>
<tr>
<td>-k, –check</td>
<td>检查该软件包拥有的文件是否存在</td>
<td></td>
</tr>
<tr>
<td>-l, –list</td>
<td>列出被查询软件包的内容</td>
<td></td>
</tr>
<tr>
<td>-m, –foreign</td>
<td>列出没有在同步数据库时找到的已安装软件包 [过滤器]</td>
<td></td>
</tr>
<tr>
<td>-o, –owns &lt;文件&gt;</td>
<td>查询哪个软件包拥有 &lt;文件&gt;</td>
<td></td>
</tr>
<tr>
<td>-p, –file &lt;软件包&gt;</td>
<td>从某个软件包而不是数据库查询</td>
<td></td>
</tr>
<tr>
<td>-s, –search<regex></td>
<td>搜寻符合指定字符串的已安装本地的软件包</td>
<td></td>
</tr>
<tr>
<td>-t, –unrequired</td>
<td>列出所有不被其他软件包要求的软件包 [过滤器]</td>
<td></td>
</tr>
<tr>
<td>-u, –upgrades</td>
<td>列出所有可升级的软件包 [过滤器]</td>
<td></td>
</tr>
<tr>
<td>-q, –quiet</td>
<td>在查询或搜索时显示较少的信息</td>
<td></td>
</tr>
<tr>
<td>–config &lt;路径&gt;</td>
<td>指定另外的配置文件</td>
<td></td>
</tr>
<tr>
<td>–logfile &lt;路径&gt;</td>
<td>指定另外的日志文件</td>
<td></td>
</tr>
<tr>
<td>–noconfirm</td>
<td>不询问确认</td>
<td></td>
</tr>
<tr>
<td>–noprogressbar</td>
<td>下载文件时不显示进度条</td>
<td></td>
</tr>
<tr>
<td>–noscriptlet</td>
<td>不执行安装小脚本</td>
<td></td>
</tr>
<tr>
<td>-v, –verbose</td>
<td>循环执行</td>
<td></td>
</tr>
<tr>
<td>–debug</td>
<td>显示除错信息</td>
<td></td>
</tr>
<tr>
<td>-r, –root &lt;路径&gt;</td>
<td>指定另外的安装根目录</td>
<td></td>
</tr>
<tr>
<td>-b, –dbpath &lt;路径&gt;</td>
<td>指定另外的数据库位置</td>
<td></td>
</tr>
<tr>
<td>–cachedir &lt;目录&gt;</td>
<td>指定另外的软件包缓存位置</td>
<td></td>
</tr>
<tr>
<td>–arch &lt;架构&gt;</td>
<td>设定另外的架构</td>
<td></td>
</tr>
</tbody></table>
<h3 id="R-删除安装包"><a href="#R-删除安装包" class="headerlink" title="-R 删除安装包"></a><code>-R</code> 删除安装包</h3><p><strong>pacman <code>&#123;-R --remove&#125;</code>   <code>[选项]</code>     <code>&lt;软件包&gt;</code></strong></p>
<table>
<thead>
<tr>
<th><strong>选项</strong></th>
<th><strong>定义</strong></th>
<th><strong>备注</strong></th>
</tr>
</thead>
<tbody><tr>
<td>-c, –cascade</td>
<td>删除软件包及所有的依赖于此的软件包</td>
<td></td>
</tr>
<tr>
<td>-d, –nodeps</td>
<td>略过依赖关系检查</td>
<td></td>
</tr>
<tr>
<td>-k, –dbonly</td>
<td>只删除数据库记录，不删除文件</td>
<td></td>
</tr>
<tr>
<td>-n, –nosave</td>
<td>同时删除配置文件</td>
<td></td>
</tr>
<tr>
<td>-s, –recursive</td>
<td>同时删除(不会破坏其他软件包的) 依赖关系</td>
<td><code>-ss</code>·也包括单独指定安装的依赖关系</td>
</tr>
<tr>
<td>-u, –unneeded</td>
<td>同时删除不需要的(且不会破坏其他软件包的) 依赖关系</td>
<td></td>
</tr>
<tr>
<td>–print</td>
<td>仅打印目标而不执行操作</td>
<td></td>
</tr>
<tr>
<td>–print-format</td>
<td>&lt;字符串&gt;指定如何打印目标</td>
<td></td>
</tr>
<tr>
<td>–config  &lt;路径&gt;</td>
<td>指定另外的配置文件</td>
<td></td>
</tr>
<tr>
<td>–logfile  &lt;路径&gt;</td>
<td>指定另外的日志文件</td>
<td></td>
</tr>
<tr>
<td>–noconfirm</td>
<td>不询问确认</td>
<td></td>
</tr>
<tr>
<td>–noprogressbar</td>
<td>下载文件时不显示进度条</td>
<td></td>
</tr>
<tr>
<td>–noscriptlet</td>
<td>不执行安装小脚本</td>
<td></td>
</tr>
<tr>
<td>-v, –verbose</td>
<td>循环执行</td>
<td></td>
</tr>
<tr>
<td>–debug</td>
<td>显示除错信息</td>
<td></td>
</tr>
<tr>
<td>-r, –root  &lt;路径&gt;</td>
<td>指定另外的安装根目录</td>
<td></td>
</tr>
<tr>
<td>-b, –dbpath  &lt;路径&gt;</td>
<td>指定另外的数据库位置</td>
<td></td>
</tr>
<tr>
<td>–cachedir  &lt;目录&gt;</td>
<td>指定另外的软件包缓存位置</td>
<td></td>
</tr>
<tr>
<td>–arch &lt;架构&gt;</td>
<td>设定另外的架构</td>
<td></td>
</tr>
</tbody></table>
<h3 id="S-安装安装包"><a href="#S-安装安装包" class="headerlink" title="-S 安装安装包"></a><code>-S</code> 安装安装包</h3><p><strong>pacman <code>&#123;-S --sync&#125;</code>     <code>[选项]</code>     <code>[软件包]</code></strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>–asdeps</td>
<td>作为非单独指定安装的软件包安装</td>
<td></td>
</tr>
<tr>
<td>–asexplicit</td>
<td>作为单独指定安装的软件包安装</td>
<td></td>
</tr>
<tr>
<td>-c, –clean</td>
<td>从缓存目录中删除旧软件包</td>
<td><code>-cc</code>清除所有</td>
</tr>
<tr>
<td>-d, –nodeps</td>
<td>略过依赖关系检查</td>
<td></td>
</tr>
<tr>
<td>-f,  –force</td>
<td>强制安装，覆盖存在冲突的文件</td>
<td></td>
</tr>
<tr>
<td>-g, –groups</td>
<td>查看某软件包组所属的所有软件包</td>
<td></td>
</tr>
<tr>
<td>-i, –info</td>
<td>查看软件包信息</td>
<td></td>
</tr>
<tr>
<td>-l, –list &lt;软件库&gt;</td>
<td>查看在该软件库中的软件包清单</td>
<td></td>
</tr>
<tr>
<td>-s, –search &lt;regex表达式&gt;</td>
<td>按照指定字符串查询远端软件库</td>
<td></td>
</tr>
<tr>
<td>-u, –sysupgrade</td>
<td>升级所有已安装的软件包</td>
<td><code>-uu</code>可启用降级</td>
</tr>
<tr>
<td>-w, –downloadonly</td>
<td>下载但不安装/升级软件包</td>
<td></td>
</tr>
<tr>
<td>-y, –refresh</td>
<td>从服务器下载新的软件包数据库</td>
<td></td>
</tr>
<tr>
<td>–needed</td>
<td>不重新安装已经为最新的软件包</td>
<td></td>
</tr>
<tr>
<td>–ignore &lt;软件包&gt;</td>
<td>升级时忽略某个软件包 (可多次使用)</td>
<td></td>
</tr>
<tr>
<td>–ignoregroup</td>
<td>&lt;软件包组&gt;升级时忽略某个软件包组 (可多次使用)</td>
<td></td>
</tr>
<tr>
<td>–print</td>
<td>仅打印目标而不执行操作</td>
<td></td>
</tr>
<tr>
<td>–print-format</td>
<td>&lt;字符串&gt;指定如何打印目标</td>
<td></td>
</tr>
<tr>
<td>-q, –quiet</td>
<td>在查询或搜索时显示较少的信息</td>
<td></td>
</tr>
<tr>
<td>–config &lt;路径&gt;</td>
<td>指定另外的配置文件</td>
<td></td>
</tr>
<tr>
<td>–logfile &lt;路径&gt;</td>
<td>指定另外的日志文件</td>
<td></td>
</tr>
<tr>
<td>–noconfirm</td>
<td>不询问确认</td>
<td></td>
</tr>
<tr>
<td>–noprogressbar</td>
<td>下载文件时不显示进度条</td>
<td></td>
</tr>
<tr>
<td>–noscriptlet</td>
<td>不执行安装小脚本</td>
<td></td>
</tr>
<tr>
<td>-v, –verbose</td>
<td>循环执行</td>
<td></td>
</tr>
<tr>
<td>–debug</td>
<td>显示除错信息</td>
<td></td>
</tr>
<tr>
<td>-r, –root &lt;路径&gt;</td>
<td>指定另外的安装根目录</td>
<td></td>
</tr>
<tr>
<td>-b, –dbpath &lt;路径&gt;</td>
<td>指定另外的数据库位置</td>
<td></td>
</tr>
<tr>
<td>–cachedir &lt;目录&gt;</td>
<td>指定另外的软件包缓存位置</td>
<td></td>
</tr>
<tr>
<td>–arch &lt;架构&gt;</td>
<td>设定另外的架构</td>
<td></td>
</tr>
</tbody></table>
<h3 id="U-更新安装包"><a href="#U-更新安装包" class="headerlink" title="-U 更新安装包"></a><code>-U</code> 更新安装包</h3><p><strong>pacman <code>&#123;-U --upgrade&#125;</code>     <code>[选项]</code>     <code>&lt;文件&gt;</code></strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>–asdeps</td>
<td>作为非单独指定安装的软件包安装</td>
<td></td>
</tr>
<tr>
<td>–asexplicit</td>
<td>作为单独指定安装的软件包安装</td>
<td></td>
</tr>
<tr>
<td>-d, –nodeps</td>
<td>略过依赖关系检查</td>
<td></td>
</tr>
<tr>
<td>-f, –force</td>
<td>强制安装，覆盖存在冲突的文件</td>
<td></td>
</tr>
<tr>
<td>-k, –dbonly</td>
<td>添加数据库记录，不安装或保持现存文件</td>
<td></td>
</tr>
<tr>
<td>–print</td>
<td>仅打印目标而不执行操作</td>
<td></td>
</tr>
<tr>
<td>–print-format &lt;字符串&gt;</td>
<td>指定如何打印目标</td>
<td></td>
</tr>
<tr>
<td>–config &lt;路径&gt;</td>
<td>指定另外的配置文件</td>
<td></td>
</tr>
<tr>
<td>–logfile &lt;路径&gt;</td>
<td>指定另外的日志文件</td>
<td></td>
</tr>
<tr>
<td>–noconfirm</td>
<td>不询问确认</td>
<td></td>
</tr>
<tr>
<td>–noprogressbar</td>
<td>下载文件时不显示进度条</td>
<td></td>
</tr>
<tr>
<td>–noscriptlet</td>
<td>不执行安装小脚本</td>
<td></td>
</tr>
<tr>
<td>-v, –verbose</td>
<td>循环执行</td>
<td></td>
</tr>
<tr>
<td>–debug</td>
<td>显示除错信息</td>
<td></td>
</tr>
<tr>
<td>-r, –root &lt;路径&gt;</td>
<td>指定另外的安装根目录</td>
<td></td>
</tr>
<tr>
<td>-b, –dbpath &lt;路径&gt;</td>
<td>指定另外的数据库位置</td>
<td></td>
</tr>
<tr>
<td>–cachedir &lt;目录&gt;</td>
<td>指定另外的软件包缓存位置</td>
<td></td>
</tr>
<tr>
<td>–arch &lt;架构&gt;</td>
<td>设定另外的架构</td>
<td></td>
</tr>
</tbody></table>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li>乌托邦2号.<code>pacman用法</code>[EB/OL].<a href="https://blog.csdn.net/taiyang1987912/article/details/41253533">https://blog.csdn.net/taiyang1987912/article/details/41253533</a>, 2020/11/22.</li>
</ol>
]]></content>
      <categories>
        <category>电脑爱好者</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Arch</tag>
        <tag>Manjaro</tag>
        <tag>pacman</tag>
      </tags>
  </entry>
  <entry>
    <title>csh 、 bash 的基础语法对照：变量</title>
    <url>/202012201125/</url>
    <content><![CDATA[<p>bash是现在很多Linux的发行版中默认的shell，它来自于 BSD Unix，语法非常类似于C语言，所以通常有 C/C++ 编程背景的开发人员最喜欢使用。不过我在工作中，一个主要系统的默认 shell 却是 csh 。因此我总结一下两种 shell 的语法特点。</p>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h3><table>
<thead>
<tr>
<th>项目</th>
<th>bash</th>
<th>csh</th>
</tr>
</thead>
<tbody><tr>
<td>变量定义</td>
<td><code>var 变量名称=&quot;变量Value&quot;</code></td>
<td><code>set var</code></td>
</tr>
<tr>
<td>变量引用</td>
<td><code>$var</code><br/><code>$&#123;var&#125;</code></td>
<td><code>$var</code><br/><code>$&#123;var&#125;</code></td>
</tr>
<tr>
<td>内置用法</td>
<td></td>
<td><code>$%x</code> 表示变量的值的长度<br/><code>$?x</code> 来判断变量x是否设置，如设置则为1，否则为0。</td>
</tr>
<tr>
<td>示例</td>
<td><code>a=&quot;abc&quot;</code> <br><code>echo $a</code></td>
<td><code>set x = 7</code> <br/><code>echo $x</code></td>
</tr>
<tr>
<td>注意事项</td>
<td><code>=</code> 的两边不能有空格，否则shell解释成名称和命令参数。<br/>bash变量默认都是字符串类型的。</td>
<td>使用 <code>setenv var value</code> 方式可以定义环境变量，所有子 shell 继承其变量值</td>
</tr>
</tbody></table>
<blockquote>
<ul>
<li>Bash 变量名区分大小写，HOME和home是两个不同的变量。</li>
<li>字母、数字和下划线字符组成。</li>
<li>第一个字符必须是一个字母或一个下划线，不能是数字。</li>
<li>不允许出现空格和标点符号。如果变量的值包含空格，则必须将值放在引号中。</li>
<li>如果变量不存在，Bash 不会报错，而会输出空字符。</li>
</ul>
</blockquote>
<p>同一行定义多个变量或执行多个语句，必须使用分号 <code>;</code> 分隔。</p>
<h3 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h3><ul>
<li><code>env</code>命令或<code>printenv</code>命令，可以显示所有环境变量；而且命令后面的变量名，不用加前缀$。如 <code>printenv PATH</code> 等同于 <code>echo $PATH</code>。</li>
<li><code>set</code> 命令可以显示所有变量（包括环境变量和自定义变量），以及所有的 Bash 函数。</li>
</ul>
<table>
<thead>
<tr>
<th>变量</th>
<th>定义</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td><code>$BASH</code></td>
<td>Bash 程序的路径</td>
<td></td>
</tr>
<tr>
<td><code>$BASH_VERSION</code></td>
<td>系统Bash 版本号</td>
<td></td>
</tr>
<tr>
<td><code>$EUID</code></td>
<td>“有效” 用户 ID</td>
<td></td>
</tr>
<tr>
<td><code>$UID</code></td>
<td>用户 ID</td>
<td><code>$UID</code> 是一个只读变量，不能在命令行或者脚本中修改它，在 /etc/passwd 文件中定义。</td>
</tr>
<tr>
<td><code>$GROUPS</code></td>
<td>用户组名</td>
<td>在 /etc/passwd 文件中定义。</td>
</tr>
<tr>
<td><code>$HOME</code></td>
<td>用户主目录</td>
<td>在 /etc/passwd 文件中定义。</td>
</tr>
<tr>
<td><code>$PWD</code></td>
<td>工作目录(当前目录)</td>
<td>这与内置命令 <code>pwd</code> 的作用相同。</td>
</tr>
<tr>
<td><code>$HOSTNAME</code></td>
<td>主机名</td>
<td></td>
</tr>
<tr>
<td><code>$IFS</code></td>
<td>内部域分隔符</td>
<td><code>$IFS</code> 默认为空白(空格, 制表符,和换行符)，可以通过赋值改变。 <code>$*</code> 就是使用的 <code>$IFS</code> 的第一个字符来分隔位置参数的。</td>
</tr>
<tr>
<td><code>$PATH</code></td>
<td>可执行文件的搜索路径</td>
<td></td>
</tr>
<tr>
<td><code>$PS1</code></td>
<td>主提示符</td>
<td>普通用户默认提示符是 <code>$</code>，超级用户（root 用户）默认提示符是 <code>#</code>。</td>
</tr>
<tr>
<td><code>$PS2</code></td>
<td>第二提示符</td>
<td>默认值为 <code>&gt;</code></td>
</tr>
<tr>
<td><code>$PS4</code></td>
<td>第二提示符</td>
<td>使用 <code>-x</code> 选项来调用脚本时，这个提示符会出现在每行输出的开头，默认为 <code>+</code></td>
</tr>
</tbody></table>
<ul>
<li>在 GNU 指令中，如果单独使用 <code>-</code> 符号，不加任何该加的文件名称时，代表 <strong>标准输入</strong> 的意思。<ul>
<li><code>cat -</code>：<ul>
<li><code>cat - &gt; test.txt</code> 表示在屏幕里输入什么，都会在test.txt中输出。</li>
<li><code>(cd /source/directory &amp;&amp; tar cf - . ) | (cd /dest/directory &amp;&amp; tar xpvf -)</code> ：压缩/source/directory下的文件，输出作为下一个命令的输入；更改当前目录到/dest/directory，解压文件</li>
</ul>
</li>
<li><code>tar xpvf -</code>：标准输入读取资料并解压</li>
<li><code>cd -</code>：切换到上次的工作目录</li>
</ul>
</li>
</ul>
<h3 id="函数的参数变量"><a href="#函数的参数变量" class="headerlink" title="函数的参数变量"></a>函数的参数变量</h3><table>
<thead>
<tr>
<th>变量</th>
<th>定义</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td><code>$0</code></td>
<td>脚本的名称</td>
<td></td>
</tr>
<tr>
<td><code>$1</code>, <code>$2</code>,…,<code>$&#123;n&#125;</code></td>
<td><strong>位置</strong> 参数</td>
<td>当 <strong>n&gt; 9</strong> 时，必须使用花括号 <code>&#123;&#125;</code> 包围数字 n。</td>
</tr>
<tr>
<td><code>$#</code></td>
<td>位置参数的个数</td>
<td></td>
</tr>
<tr>
<td><code>$*</code>, <code>$@</code></td>
<td>位置参数数组</td>
<td><code>&quot;$*&quot;</code> 表示的是所有参数拼接成一个<strong>字符串</strong>，与 <code>$*</code>、<code>&quot;$@&quot;</code>、<code>$@</code> 表达的<strong>数组</strong>概念是不同的。</td>
</tr>
<tr>
<td><code>$!</code></td>
<td>运行在后台的 <strong>最后一个</strong> 作业的 PID</td>
<td></td>
</tr>
<tr>
<td><code>$$</code></td>
<td>当前 bash 脚本的 PID</td>
<td></td>
</tr>
<tr>
<td><code>$PPID</code></td>
<td>当前 bash 脚本父进程的 PID</td>
<td></td>
</tr>
<tr>
<td><code>$-</code></td>
<td>当前 Shell 的启动参数</td>
<td></td>
</tr>
<tr>
<td><code>$_</code></td>
<td>命令的 <strong>最后一个</strong> 参数的值</td>
<td></td>
</tr>
<tr>
<td><code>$?</code></td>
<td>命令的退出状态码</td>
<td>一般表示命令执行成功或失败： <strong>0 ** 表示成功，</strong>其它值** 表示错误。<br/>比如 cp 命令，退出状态码 <strong>1</strong> 表示文件没有找到，<strong>2</strong> 表示文件不可读，<strong>3</strong> 表示目标目录没有找到，<strong>4</strong> 表示目标目录不可写，<strong>5</strong> 表示一般性错误。</td>
</tr>
</tbody></table>
<blockquote>
<p>在为shell脚本传递的参数中如果包含空格，应该使用单引号或者双引号将该参数括起来，以便于脚本将这个参数作为整体来接收。</p>
</blockquote>
<h3 id="变量特性"><a href="#变量特性" class="headerlink" title="变量特性"></a>变量特性</h3><ul>
<li><code>readonly</code>: 只读变量</li>
<li><code>local</code>: 局部变量（仅在当前shell实例中有效，其他shell启动的程序不能访问局部变量。）。</li>
<li><code>unset</code>：删除变量，如 <code>unset variable_name</code>。变量被删除后不能再次使用。unset 命令不能删除只读变量。</li>
<li><code>let</code>：整数变量。</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p>脚本之家网.<code>csh的基本语法介绍</code>[EB/OL].<a href="https://www.jb51.net/article/57770.htm">https://www.jb51.net/article/57770.htm</a>, 2020/12/21.</p>
</li>
<li><p>iTech.<code>csh 语法实例参考</code>[EB/OL].<a href="https://www.cnblogs.com/itech/archive/2012/08/15/2640811.html">https://www.cnblogs.com/itech/archive/2012/08/15/2640811.html</a>, 2020/12/21.</p>
</li>
<li><p>菜鸟教程.<code>Shell 变量</code>[EB/OL].<a href="https://www.runoob.com/linux/linux-shell-variable.html">https://www.runoob.com/linux/linux-shell-variable.html</a>, 2020/12/24.</p>
</li>
<li><p>sparkdev.<code>常见 Bash 内置变量介绍</code>[EB/OL].<a href="https://www.cnblogs.com/sparkdev/p/9934595.html">https://www.cnblogs.com/sparkdev/p/9934595.html</a>, 2020/12/24.</p>
</li>
<li><p>361way.com.<code>ssh几个超时参数</code>[EB/OL].<a href="http://www.361way.com/ssh-autologout/4679.html">http://www.361way.com/ssh-autologout/4679.html</a>, 2020/12/24.</p>
</li>
<li><p>13070026王志东.<code>3种shell自动交互的方法</code>[EB/OL].<a href="https://www.cnblogs.com/evi10032/p/5455990.html">https://www.cnblogs.com/evi10032/p/5455990.html</a>, 2021/02/12.</p>
</li>
<li><p>Mykola Ulianytskyi.<code>Expect Download for Linux</code>[EB/OL].<a href="https://pkgs.org/download/expect">https://pkgs.org/download/expect</a>, 2021/02/12.</p>
</li>
</ol>
<h2 id="姊妹篇"><a href="#姊妹篇" class="headerlink" title="姊妹篇"></a>姊妹篇</h2><ol>
<li><p><a href="../202012201125">csh 、 bash 的基础语法对照：变量</a></p>
</li>
<li><p><a href="../202012261636">csh 、 bash 的基础语法对照：判断表达式</a></p>
</li>
<li><p><a href="../202012261733">csh 、 bash 的基础语法对照：循环表达式</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>Linux</tag>
        <tag>csh</tag>
        <tag>bash</tag>
        <tag>变量</tag>
        <tag>语法</tag>
      </tags>
  </entry>
  <entry>
    <title>Word 2016 脚注格式问题的处理</title>
    <url>/202012261300/</url>
    <content><![CDATA[<blockquote>
<p>乖乖，这几天在 CNKI、VIP和万方上看论文，有几个比较熟悉的同事，不知不觉下就发了十多篇论文了。吓死宝宝，赶紧将 2 年前的未发表的论文拿出来修改。</p>
</blockquote>
<p>在修改论文的过程中，居然遇到了两个奇怪的问题，捣腾了好久才给解决了。以下总结一下操作方法：</p>
<h2 id="分栏内容从下一页起排版的问题"><a href="#分栏内容从下一页起排版的问题" class="headerlink" title="分栏内容从下一页起排版的问题"></a>分栏内容从下一页起排版的问题</h2><blockquote>
<p>论文分栏居然从下一页开始，果断不能忍！！！<br>刚开始的时候，我以为是存在隐藏的分页符，来回删除、重新插入，无法解决；然后以为是分栏操作方法不对，来回修改各种分栏方式以及插入方式，均无法解决。偶然间，不小心删除脚注后，分页正常了；这一下才找到解决问题的思路。</p>
</blockquote>
<p>解决方法是：<code>Word 选项</code>》<code>高级</code>》<code>兼容性选项</code>：勾选<code>按Word 6.x/95/97的方式安排脚注</code>，如下图所示：</p>
<p><img src="/static/img/Word%E8%84%9A%E6%B3%A8%E5%AF%BC%E8%87%B4%E5%88%86%E6%A0%8F%E5%86%85%E5%AE%B9%E4%BB%8E%E4%B8%8B%E4%B8%80%E9%A1%B5%E8%B5%B7%E6%8E%92-20201226.png" alt="按Word 6.x/95/97的方式安排脚注"></p>
<blockquote>
<p>注意，在“高级”选项卡中须向下拖动滚动条才能显示该项配置</p>
</blockquote>
<h2 id="脚注内容前存在两个空行的问题"><a href="#脚注内容前存在两个空行的问题" class="headerlink" title="脚注内容前存在两个空行的问题"></a>脚注内容前存在两个空行的问题</h2><ul>
<li><p>脚注默认的样式如下，存在两个空行，默认情况下无法编辑：</p>
<p>  <img src="/static/img/Word%E9%BB%98%E8%AE%A4%E7%9A%84%E8%84%9A%E6%B3%A8%E6%A0%BC%E5%BC%8F%EF%BC%88%E4%BF%AE%E6%94%B9%E5%89%8D%EF%BC%89-20201226.png" alt="Word默认的脚注格式"></p>
</li>
<li><p>脚注格式的修改方法</p>
<ul>
<li><p>进入 <code>Web 版式视图</code> （点击下方快捷工具图标，或通过上方“视图”选项卡切换），点击 <code>引用</code> 选项卡下的 <code>显示备注</code>，初始界面如下：</p>
<p>  <img src="/static/img/Word%E9%BB%98%E8%AE%A4%E7%9A%84%E8%84%9A%E6%B3%A8%E6%A0%BC%E5%BC%8F%EF%BC%88%E4%BF%AE%E6%94%B9%E5%89%8D%EF%BC%89-20201226.png" alt="Word默认的脚注格式"></p>
</li>
<li><p>在 <code>脚注</code> 下拉列表中选择 <code>脚注分隔符</code> ，对下方编辑框中的空行进行删除，上述操作流程如下：</p>
<p>  <img src="/static/img/Word%E9%BB%98%E8%AE%A4%E7%9A%84%E8%84%9A%E6%B3%A8%E6%A0%BC%E5%BC%8F-%E4%BF%AE%E6%94%B9%E8%84%9A%E6%B3%A8%E5%88%86%E9%9A%94%E7%AC%A6%E6%A0%BC%E5%BC%8F-20201226.png" alt="修改Word脚注分隔符格式"></p>
</li>
<li><p>切回至 <code>页面视图</code>，保存即可完成修改。最终效果图如下：</p>
<p>  <img src="/static/img/Word%E9%BB%98%E8%AE%A4%E7%9A%84%E8%84%9A%E6%B3%A8%E6%A0%BC%E5%BC%8F%EF%BC%88%E4%BF%AE%E6%94%B9%E5%90%8E%EF%BC%89-20201226.png" alt="Word脚注分隔符格式修改"></p>
</li>
</ul>
</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p>飞飞.<code>WORD脚注和分栏冲突的解决办法</code>[EB/OL].<a href="http://blog.sina.com.cn/s/blog_5fe506110100f2y0.html">http://blog.sina.com.cn/s/blog_5fe506110100f2y0.html</a>, 2020/12/25.</p>
</li>
<li><p>赵晓锋.<code>Word教程：编辑脚注和尾注</code>[EB/OL].<a href="http://blog.sciencenet.cn/blog-285749-350946.html">http://blog.sciencenet.cn/blog-285749-350946.html</a>, 2020/12/25.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>电脑爱好者</category>
      </categories>
      <tags>
        <tag>Word</tag>
        <tag>Office</tag>
        <tag>脚注</tag>
        <tag>论文</tag>
        <tag>分栏</tag>
        <tag>分隔符</tag>
      </tags>
  </entry>
  <entry>
    <title>csh 、 bash 的基础语法对照：循环表达式</title>
    <url>/202012261733/</url>
    <content><![CDATA[<h1 id="循环的中断"><a href="#循环的中断" class="headerlink" title="循环的中断"></a>循环的中断</h1><p>Bash 提供了两个内部命令<code>break</code>和<code>continue</code>，用来在循环内部跳出循环。<br>    - <code>break</code>命令立即终止循环，程序继续执行循环块之后的语句，即不再执行剩下的循环。<br>    - <code>continue</code>命令立即终止本轮循环，开始执行下一轮循环。</p>
<table>
<thead>
<tr>
<th>项目</th>
<th>bash</th>
<th>csh</th>
</tr>
</thead>
<tbody><tr>
<td>break</td>
<td>#!/bin/bash<br/>  for number in 1 2 3 4 5 6 do<br/>   echo “number is $number”<br/>   if [ “$number” = “3” ]; then<br/>    break<br/>   fi<br/> done</td>
<td></td>
</tr>
<tr>
<td>continue</td>
<td>#!/bin/bash<br/>  while read -p “What file do you want to test?” filename do<br/>   if [ ! -e “$filename” ]; then<br/>     echo “The file does not exist.”<br/>     continue<br/>   fi<br/>    echo “You entered a valid file..”<br/> done</td>
<td></td>
</tr>
</tbody></table>
<h2 id="while-循环的用法"><a href="#while-循环的用法" class="headerlink" title="while 循环的用法"></a>while 循环的用法</h2><p><code>while</code>循环有一个判断条件，只要符合条件，就不断循环执行指定的语句。</p>
<table>
<thead>
<tr>
<th>项目</th>
<th>bash</th>
<th>csh</th>
</tr>
</thead>
<tbody><tr>
<td>while</td>
<td>while expression; do<br/>   commands<br/> done</td>
<td>while(expression)<br/>  commands<br/>  continue<br/>  break<br/>end</td>
</tr>
<tr>
<td>示例</td>
<td>#关键字<code>do</code>可以跟<code>while</code>不在同一行，这时两者之间不需要使用分号分隔。<br/><code>while</code> true <br/>do<br/>   echo ‘Hi, while looping …’; <br/>done</td>
<td></td>
</tr>
<tr>
<td></td>
<td>#while循环写成一行，也是可以的<br/>while true; do echo ‘Hi, while looping …’; done</td>
<td></td>
</tr>
</tbody></table>
<h2 id="until-循环的用法"><a href="#until-循环的用法" class="headerlink" title="until 循环的用法"></a>until 循环的用法</h2><p><code>until</code>循环与<code>while</code>循环恰好相反，只要不符合判断条件（判断条件失败），就不断循环执行指定的语句。一旦符合判断条件，就退出循环。</p>
<table>
<thead>
<tr>
<th>项目</th>
<th>bash</th>
<th>csh</th>
</tr>
</thead>
<tbody><tr>
<td>while</td>
<td>until condition; do<br/>   commands<br/> done</td>
<td></td>
</tr>
<tr>
<td>示例</td>
<td>#!/bin/bash<br/>  number=0<br/> until [ “$number” -ge 10 ]; do<br/>   echo “Number = $number”<br/>   number=$((number + 1))<br/> done</td>
<td></td>
</tr>
</tbody></table>
<h2 id="for…in-循环"><a href="#for…in-循环" class="headerlink" title="for…in 循环"></a>for…in 循环</h2><p><code>for...in</code>循环用于遍历列表的每一项。</p>
<p><code>for</code>循环会依次从<code>list</code>列表中取出一项，作为变量<code>variable</code>，然后在循环体中进行处理。</p>
<table>
<thead>
<tr>
<th>项目</th>
<th>bash</th>
<th>csh</th>
</tr>
</thead>
<tbody><tr>
<td>for…in</td>
<td>for variable in list do<br/>   commands<br/> done</td>
<td></td>
</tr>
<tr>
<td>示例</td>
<td>#!/bin/bash<br/>  for i in word1 word2 word3; do<br/>   echo $i <br/>done</td>
<td></td>
</tr>
<tr>
<td>列表由通配符产生</td>
<td>for i in *.png; do<br/>   ls -l $i<br/> done</td>
<td></td>
</tr>
<tr>
<td>列表通过子命令产生</td>
<td>#!/bin/bash<br/>  count=0<br/> for i in $(cat ~/.bash_profile); do<br/>   count=$((count + 1))<br/>   echo “Word $count ($i) contains $(echo -n $i | wc -c) characters”<br/> done</td>
<td></td>
</tr>
</tbody></table>
<h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><table>
<thead>
<tr>
<th>项目</th>
<th>bash</th>
<th>csh</th>
</tr>
</thead>
<tbody><tr>
<td>for</td>
<td>for (( expression1; expression2; expression3 )); do<br/>   commands<br/> done</td>
<td></td>
</tr>
<tr>
<td>示例</td>
<td>for (( i=0; i&lt;5; i=i+1 )); do<br/>   echo $i<br/> done</td>
<td></td>
</tr>
<tr>
<td></td>
<td>#直到用户输入了一个点（<code>.</code>）为止，才会跳出循环<br/>for ((;;)) do<br/>   read var<br/>   if [ “$var” = “.” ]; then<br/>    break<br/>   fi<br/> done</td>
<td></td>
</tr>
</tbody></table>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li>阮一峰.<code>Bash 脚本教程</code>[EB/OL].<a href="https://wangdoc.com/bash">https://wangdoc.com/bash</a>, 2020/12/21.<blockquote>
<p>该教程的部分内容是比较完善的。</p>
</blockquote>
</li>
</ol>
<h2 id="姊妹篇"><a href="#姊妹篇" class="headerlink" title="姊妹篇"></a>姊妹篇</h2><ol>
<li><p><a href="../202012201125">csh 、 bash 的基础语法对照：变量</a></p>
</li>
<li><p><a href="../202012261636">csh 、 bash 的基础语法对照：判断表达式</a></p>
</li>
<li><p><a href="../202012261733">csh 、 bash 的基础语法对照：循环表达式</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>Linux</tag>
        <tag>csh</tag>
        <tag>bash</tag>
        <tag>语法</tag>
        <tag>判断</tag>
        <tag>表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>csh 、 bash 的基础语法对照：判断表达式</title>
    <url>/202012261636/</url>
    <content><![CDATA[<h2 id="判断表达式"><a href="#判断表达式" class="headerlink" title="判断表达式"></a>判断表达式</h2><h3 id="使用-test-判断"><a href="#使用-test-判断" class="headerlink" title="使用 test 判断"></a>使用 test 判断</h3><h4 id="1-test-基本用法"><a href="#1-test-基本用法" class="headerlink" title="1. test 基本用法"></a>1. test 基本用法</h4><pre><code class="bash"># 写法一 (不支持正则判断)
test expression

# 写法二(不支持正则判断)
[ expression ]

# 写法三 (支持正则判断)
[[ expression ]]</code></pre>
<h4 id="2-文件判断"><a href="#2-文件判断" class="headerlink" title="2. 文件判断"></a>2. 文件判断</h4><ul>
<li><code>[ -a file ]</code>：如果 file 存在，则为<code>true</code>。</li>
<li><code>[ -b file ]</code>：如果 file 存在并且是一个块（设备）文件，则为<code>true</code>。</li>
<li><code>[ -c file ]</code>：如果 file 存在并且是一个字符（设备）文件，则为<code>true</code>。</li>
<li><code>[ -d file ]</code>：如果 file 存在并且是一个目录，则为<code>true</code>。</li>
<li><code>[ -e file ]</code>：如果 file 存在，则为<code>true</code>。</li>
<li><code>[ -f file ]</code>：如果 file 存在并且是一个普通文件，则为<code>true</code>。</li>
<li><code>[ -g file ]</code>：如果 file 存在并且设置了组 ID，则为<code>true</code>。</li>
<li><code>[ -G file ]</code>：如果 file 存在并且属于有效的组 ID，则为<code>true</code>。</li>
<li><code>[ -h file ]</code>：如果 file 存在并且是符号链接，则为<code>true</code>。</li>
<li><code>[ -k file ]</code>：如果 file 存在并且设置了它的“sticky bit”，则为<code>true</code>。</li>
<li><code>[ -L file ]</code>：如果 file 存在并且是一个符号链接，则为<code>true</code>。</li>
<li><code>[ -N file ]</code>：如果 file 存在并且自上次读取后已被修改，则为<code>true</code>。</li>
<li><code>[ -O file ]</code>：如果 file 存在并且属于有效的用户 ID，则为<code>true</code>。</li>
<li><code>[ -p file ]</code>：如果 file 存在并且是一个命名管道，则为<code>true</code>。</li>
<li><code>[ -r file ]</code>：如果 file 存在并且可读（当前用户有可读权限），则为<code>true</code>。</li>
<li><code>[ -s file ]</code>：如果 file 存在且其长度大于零，则为<code>true</code>。</li>
<li><code>[ -S file ]</code>：如果 file 存在且是一个网络 socket，则为<code>true</code>。</li>
<li><code>[ -t fd ]</code>：如果 fd 是一个文件描述符，并且重定向到终端，则为<code>true</code>。用于判断是否重定向了标准输入／输出／错误。</li>
<li><code>[ -u file ]</code>：如果 file 存在并且设置了 setuid 位，则为<code>true</code>。</li>
<li><code>[ -w file ]</code>：如果 file 存在并且可写（当前用户拥有可写权限），则为<code>true</code>。</li>
<li><code>[ -x file ]</code>：如果 file 存在并且可执行（有效用户有执行／搜索权限），则为<code>true</code>。</li>
<li><code>[ file1 -nt file2 ]</code>：如果 FILE1 比 FILE2 的更新时间最近，或者 FILE1 存在而 FILE2 不存在，则为<code>true</code>。</li>
<li><code>[ file1 -ot file2 ]</code>：如果 FILE1 比 FILE2 的更新时间更旧，或者 FILE2 存在而 FILE1 不存在，则为<code>true</code>。</li>
<li><code>[ FILE1 -ef FILE2 ]</code>：如果 FILE1 和 FILE2 引用相同的设备和 inode 编号，则为<code>true</code>。</li>
</ul>
<h4 id="3-字符串判断（-）"><a href="#3-字符串判断（-）" class="headerlink" title="3. 字符串判断（==）"></a>3. 字符串判断（<code>==</code>）</h4><ul>
<li><code>[ string ]</code>：如果<code>string</code>不为空（长度大于0），则判断为真。</li>
<li><code>[ -n string ]</code>：如果字符串<code>string</code>的长度大于零，则判断为真。</li>
<li><code>[ -z string ]</code>：如果字符串<code>string</code>的长度为零，则判断为真。</li>
<li><code>[ string1 = string2 ]</code>：如果<code>string1</code>和<code>string2</code>相同，则判断为真。</li>
<li><code>[ string1 == string2 ]</code> 等同于<code>[ string1 = string2 ]</code>。</li>
<li><code>[ string1 != string2 ]</code>：如果<code>string1</code>和<code>string2</code>不相同，则判断为真。</li>
<li><code>[ string1 &#39;&gt;&#39; string2 ]</code>：如果按照字典顺序<code>string1</code>排列在<code>string2</code>之后，则判断为真。</li>
<li><code>[ string1 &#39;&lt;&#39; string2 ]</code>：如果按照字典顺序<code>string1</code>排列在<code>string2</code>之前，则判断为真。</li>
</ul>
<blockquote>
<p>注意，<code>test</code>命令内部的<code>&gt;</code>和<code>&lt;</code>，必须用引号引起来（或者是用反斜杠转义）。否则，它们会被 shell 解释为重定向操作符。</p>
</blockquote>
<h4 id="4-整数判断（-eq）"><a href="#4-整数判断（-eq）" class="headerlink" title="4. 整数判断（-eq）"></a>4. 整数判断（<code>-eq</code>）</h4><ul>
<li><code>[ n1 -eq n2 ]</code>：如果<code>n1</code>等于<code>n2</code>，则为<code>true</code>。</li>
<li><code>[ n1 -ne n2 ]</code>：如果<code>n1</code>不等于<code>n2</code>，则为<code>true</code>。</li>
<li><code>[ n1 -le n2 ]</code>：如果<code>n1</code>小于或等于<code>n2</code>，则为<code>true</code>。</li>
<li><code>[ n1 -lt n2 ]</code>：如果<code>n1</code>小于<code>n2</code>，则为<code>true</code>。</li>
<li><code>[ n1 -ge n2 ]</code>：如果<code>n1</code>大于或等于<code>n2</code>，则为<code>true</code>。</li>
<li><code>[ n1 -gt n2 ]</code>：如果<code>n1</code>大于<code>n2</code>，则为<code>true</code>。</li>
</ul>
<h4 id="5-正则判断（-）"><a href="#5-正则判断（-）" class="headerlink" title="5. 正则判断（=~）"></a>5. 正则判断（<code>=~</code>）</h4><pre><code class="bash">#!/bin/bash

INT=-5

if [[ &quot;$INT&quot; =~ ^-?[0-9]+$ ]]; then
  echo &quot;INT is an integer.&quot;
  exit 0
else
  echo &quot;INT is not an integer.&quot; &gt;&amp;2
  exit 1
fi</code></pre>
<h3 id="多条件逻辑运算"><a href="#多条件逻辑运算" class="headerlink" title="多条件逻辑运算"></a>多条件逻辑运算</h3><ul>
<li><code>AND</code>运算：符号<code>&amp;&amp;</code>，也可使用参数<code>-a</code>。</li>
<li><code>OR</code>运算：符号<code>||</code>，也可使用参数<code>-o</code>。</li>
<li><code>NOT</code>运算：符号<code>!</code>。</li>
</ul>
<h3 id="通过-进行算术运算判断"><a href="#通过-进行算术运算判断" class="headerlink" title="通过 ((...)) 进行算术运算判断"></a>通过 <code>((...))</code> 进行算术运算判断</h3><pre><code class="bash">if ((3 &gt; 2)); then
  echo &quot;true&quot;
fi</code></pre>
<h2 id="if-配套-test-或-进行条件判断"><a href="#if-配套-test-或-进行条件判断" class="headerlink" title="if 配套 test 或 ((...)) 进行条件判断"></a>if 配套 <code>test</code> 或 <code>((...))</code> 进行条件判断</h2><table>
<thead>
<tr>
<th>项目</th>
<th>bash</th>
<th>csh</th>
</tr>
</thead>
<tbody><tr>
<td>if</td>
<td>if [ -f $a ];then <br/>        echo “hello world!” <br/>fi</td>
<td>if(expression)then<br/> commands<br/>endif</td>
</tr>
<tr>
<td></td>
<td></td>
<td>if {(command)} then<br/> commands<br/>endif</td>
</tr>
<tr>
<td></td>
<td></td>
<td>if(expression) then<br/> commands<br/>else if(expression) then<br/> commands<br/>else<br/> commands<br/>endif</td>
</tr>
</tbody></table>
<h2 id="case-的条件判断"><a href="#case-的条件判断" class="headerlink" title="case 的条件判断"></a>case 的条件判断</h2><table>
<thead>
<tr>
<th>项目</th>
<th>bash</th>
<th>csh</th>
</tr>
</thead>
<tbody><tr>
<td>case</td>
<td>case expression in<br/>  pattern )<br/>    commands ;;<br/>  pattern )<br/>    commands ;;<br/>  …<br/>esac</td>
<td>switch(“$value”)<br/>case pattern1:<br/> commands<br/> breaksw<br/>case pattern2:<br/> commands<br/> breaksw<br/>default:<br/> commands<br/> breaksw<br/>endsw</td>
</tr>
</tbody></table>
<ul>
<li><p>bash 的<code>case</code>的匹配模式可以使用各种通配符，下面是一些例子。</p>
<ul>
<li><code>a)</code>：匹配<code>a</code>。</li>
<li><code>a|b)</code>：匹配<code>a</code>或<code>b</code>。</li>
<li><code>[[:alpha:]])</code>：匹配单个字母。</li>
<li><code>???)</code>：匹配3个字符的单词。</li>
<li><code>*.txt)</code>：匹配<code>.txt</code>结尾。</li>
<li><code>*)</code>：匹配任意输入，通过作为<code>case</code>结构的最后一个模式。</li>
</ul>
</li>
<li><p>Bash 4.0之前，case结构只能匹配一个条件，然后就会退出case结构。Bash 4.0之后，允许匹配多个条件，这时可以用;;&amp;终止每个条件块。</p>
</li>
</ul>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p>脚本之家网.<code>csh的基本语法介绍</code>[EB/OL].<a href="https://www.jb51.net/article/57770.htm">https://www.jb51.net/article/57770.htm</a>, 2020/12/21.</p>
</li>
<li><p>iTech.<code>csh 语法实例参考</code>[EB/OL].<a href="https://www.cnblogs.com/itech/archive/2012/08/15/2640811.html">https://www.cnblogs.com/itech/archive/2012/08/15/2640811.html</a>, 2020/12/21.</p>
</li>
<li><p>阮一峰.<code>Bash 脚本教程</code>[EB/OL].<a href="https://wangdoc.com/bash">https://wangdoc.com/bash</a>, 2020/12/21.</p>
<blockquote>
<p>该教程的部分内容是比较完善的。</p>
</blockquote>
</li>
<li><p>脚本之家.<code>shell中各种括号的作用详解()、(())、[]、[[]]、&#123;&#125;</code>[EB/OL].<a href="https://www.jb51.net/article/123081.htm">https://www.jb51.net/article/123081.htm</a>, 2020/12/24.</p>
</li>
</ol>
<h2 id="姊妹篇"><a href="#姊妹篇" class="headerlink" title="姊妹篇"></a>姊妹篇</h2><ol>
<li><p><a href="../202012201125">csh 、 bash 的基础语法对照：变量</a></p>
</li>
<li><p><a href="../202012261636">csh 、 bash 的基础语法对照：判断表达式</a></p>
</li>
<li><p><a href="../202012261733">csh 、 bash 的基础语法对照：循环表达式</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>Linux</tag>
        <tag>csh</tag>
        <tag>bash</tag>
        <tag>语法</tag>
        <tag>判断</tag>
        <tag>表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>什么才是事业成功的关键？</title>
    <url>/202101031051/</url>
    <content><![CDATA[<p>2021 年元旦，休假在家。偶然间，会想起自己2020年里工作上的点点滴滴：这一年，我投入了不少精力，取得了一定的业绩，有点骄傲、有点遗憾、也有点不满。</p>
<p>2020年里，我除了有一两个月因为一些特别重大的事情低沉了好几个星期，从年初到年底，我实际上在工作上投入的时间并不比别人少。没错，我就是那种人——明明没人安排我，回到家里还在研究工作中的事情，去探索如何能够将工作做得效果更好、操作更智能化……</p>
<p>2020年，也看着不少的同事，慢慢地领先到了前方，有些人成为了处级领导，有些人从副科转为了正科，甚至也有个别年轻人超到前方去成了副科级的领导了。我回想自己的这些年，工作付出不少，荣誉很多，业绩丰富，能力也不错，可是目前并未看到向上升迁的机会；心里不免是着急的，会盲目去比较，也会突然地爆出几句怨言来！</p>
<p>工作中，看过太多的事情没做成——哪怕是高层领导牵头的事，没做成的也是一抓一大把。因此，我对自己“每一次都将别人没做成的事情做成了，将别人不愿意做的事情默默做出来了”这一点颇为骄傲，甚至有些得意忘形了！年终评选的时候，我常常列入上级荣誉的候选人，然而很多年里都止步于候选；不知道今年结果如何，反正公司推荐到集团的名单里，我也是排名靠后的——我都已经尽力地吹嘘自己了，可是也不见得每个领导都喜欢我！</p>
<blockquote>
<p>有意思的是，2020年的评选我魔幻般的拿了大满贯，所在部门的、区域的、集团的先进我全拿了！感谢领导！</p>
</blockquote>
<p>看着别人的宣传材料，都是将普通而平凡的事情做成了。我和别人的区别，无非是我的业绩更多是与计算机相关的，不容易可视化评估；而别人的业绩往往都是加了什么设备、修好了什么东西、帮助了多少穷人，即使是外行人也能评价出一二三来。所以，我还是挺无奈的：酒再香，也怕巷子太深！</p>
<p>噢，不再说这些事情了，我还是向前看看吧，因为这些社会环境可不会自动适应我：工作上的岗位，不是我自己能定的；而我也不愿意去做一条咸鱼，哪怕可能会被一些人毫无底线地利用。因此，我，需要调整自我，不断去提升自我，与时俱进，开拓创新。</p>
<p><strong>2020年，我是做了不少工作的。我自以为：我是一些工作成功开展的关键，因为我有决心、有能力、有行动去突破困难，让我的同事没有后顾之忧！可是，我也不是成功唯一的关键，我明白，我再厉害，如果厂家不配合、使用者不接纳，那么我做的成果，也只是一堆空洞的二进制符号的集合；厂家、用户都是靠我的上上级以及上上级的上上级去驱动的——没有领导的支持，就没有相应的硬件资源，就没有实施的基础，更没有应用、推广、完善的可能性！因此，关键领导的支持，也毫无疑问是成功的最关键。</strong></p>
<p>《荀子·劝学》中提出：<code>君子生非异也，善假于物也</code>。我认为，一个事情不是我一个人做成的，并不丢人。我分析，事业成功的关键，在于<strong>资源完备</strong>、<strong>方法完整</strong>、<strong>执行到位</strong> 都落实到位了。一个人是做不成大事业的，需要集体的支持；集团未必就能长期稳健，需要个人的奋斗创新；两者相辅相成、缺一不可。</p>
<p>春城经冬，乍暖还寒。2020年已经过去，我感激领导的支持和信任，感谢同事和陌生人的帮助和支援，感恩妻子儿女默默的支撑，也点赞自己，栉风沐雨，永不放弃！</p>
<p>2021年，你好！文字前的读者，也祝你未来一切越来越好！</p>
]]></content>
      <categories>
        <category>坐井观天</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>成功</tag>
        <tag>关键</tag>
        <tag>领导</tag>
        <tag>奋斗</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox 虚拟机磁盘压缩方法（已验证）</title>
    <url>/202101101604/</url>
    <content><![CDATA[<p>VirtualBox 虚拟机的容量会随着使用自动扩容，这本来是个好事；不过在实际使用过程中，由于系统错误日志疯狂写入等原因，也可能会导致系统容量被明显扩充变大。容量变大之后，无论是转换虚拟盘格式，还是导入导出，均不能减小容量。特别是做虚拟机备份导出时，白白浪费了大量的空间。因此，进行虚拟机磁盘容量的压缩，势在必行！</p>
<p>以下两个系统我都用了很长时间，也都测试过方法的可行性，可供参考。</p>
<h2 id="虚拟机磁盘格式转换"><a href="#虚拟机磁盘格式转换" class="headerlink" title="虚拟机磁盘格式转换"></a>虚拟机磁盘格式转换</h2><blockquote>
<p>需要注意的是，虽然 VirtualBox 默认的磁盘格式为 vdi，可是经过导入、导出等一系列操作后，硬盘格式往往都是 wmdk；本文所讨论的磁盘压缩方法，只对 vdi 格式的磁盘有效；因此，磁盘压缩之前，往往都需要进行磁盘格式转换！</p>
</blockquote>
<ol>
<li><p>在 VirtualBox 管理界面上，还需要重新删除原有的 vmdk 磁盘（否则 uuid 冲突导致无法导入 vdi 磁盘）、然后指定系统需要使用的磁盘为新的 vdi 磁盘（否则无法使用后续的磁盘压缩功能）。</p>
<p> <img src="/static/img/20210108-virtualbox/0-%E9%87%8A%E6%94%BE%E3%80%81%E5%88%A0%E9%99%A4%E7%A1%AC%E7%9B%98-HHJ-20210108.png" alt="释放、删除硬盘"></p>
</li>
<li><p>转换虚拟机磁盘文件格式为 vdi </p>
<pre><code class="cmd"> cd &quot;C:\Program Files\Oracle\VirtualBox\&quot;
 &quot;VBoxManage.exe&quot; clonehd &quot;e:\source.vmdk&quot; &quot;e:\target.vdi&quot; --format vdi</code></pre>
<p> <img src="/static/img/20210108-virtualbox/1-%E5%B0%86VMDK%E7%A1%AC%E7%9B%98%E8%BD%AC%E6%8D%A2%E4%B8%BAVDI%E6%A0%BC%E5%BC%8F-2-HHJ-20210108.png" alt="将VMDK硬盘转换为VDI格式"></p>
</li>
</ol>
<ol start="3">
<li><p>将新磁盘关联到虚拟机中</p>
<p> <img src="/static/img/20210108-virtualbox/2-%E5%B0%86VDI%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD%E5%88%B0%E7%B3%BB%E7%BB%9F%E4%B8%AD-HHJ-20210108.png" alt="将VDI硬盘挂载到系统中"></p>
<p> <img src="/static/img/20210108-virtualbox/2-%E5%B0%86VDI%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD%E5%88%B0%E7%B3%BB%E7%BB%9F%E4%B8%AD-2-HHJ-20210108.png" alt="将VDI硬盘挂载到系统中"></p>
</li>
</ol>
<h2 id="Windows-虚拟机磁盘的压缩"><a href="#Windows-虚拟机磁盘的压缩" class="headerlink" title="Windows 虚拟机磁盘的压缩"></a>Windows 虚拟机磁盘的压缩</h2><p>毫无疑问，Windows 平台的磁盘压缩比较简单，在主机系统中直接执行以下命令即可。</p>
<pre><code class="ps"> &quot;C:\Program Files\Oracle\VirtualBox\VBoxManage.exe&quot; modifyhd &quot;e:\target.vdi&quot; --compact</code></pre>
<blockquote>
<p>多年前，我曾进行过上述操作，并截图，可是现在找不到之前的截图了，有空再补了。</p>
</blockquote>
<h2 id="CentOS-虚拟机磁盘的压缩"><a href="#CentOS-虚拟机磁盘的压缩" class="headerlink" title="CentOS 虚拟机磁盘的压缩"></a>CentOS 虚拟机磁盘的压缩</h2><blockquote>
<p>一开始，我尝试使用网上泛滥的手动将磁盘剩余空间写 0 的方法，可是，过了很久，不过没有看到磁盘空间变小，反而越来越大——我本来虚拟机才25GB，不到半个小时变成了 60 GB，本来主机硬盘容量就很小，吓得我赶紧终止了。</p>
<blockquote>
<pre><code class="bash">dd  if=/dev/zero   of=/empty    bs=1M
#dd if=/dev/zero   of=/dev/sda3
rm -f /empty</code></pre>
</blockquote>
</blockquote>
<p>多天以后，做完了手上的工作，重新去外网上学习相应的处理方法，发现了有个叫做 zerofree 工作的做法没有尝试过，因此我重新导入了一个虚拟机进行尝试，结果成功了，过程如下：</p>
<ol>
<li><p>使用 yum 下载安装 zerofree 程序包</p>
<pre><code class="sh"> su
 yum -y install zerofree</code></pre>
</li>
<li><p>重新启动系统，并在系统 GRUB 启动菜单出现时点击 <code>Enter</code> 键进入编辑模式</p>
<ul>
<li><p>选择含有 <code>vmlinuz</code> 字样菜单行，按 <code>e</code> 进入内容编辑状态</p>
<p><img src="/static/img/20210108-virtualbox/4-%E5%9C%A8GRUB%E8%8F%9C%E5%8D%95%E4%B8%AD%E9%80%89%E6%8B%A9%E5%90%AB%E6%9C%89vmlinuz%E5%AD%97%E6%A0%B7%E7%9A%84%E8%8F%9C%E5%8D%95%E8%BF%9B%E8%A1%8C%E7%BC%96%E8%BE%91-HHJ-20210108.png" alt="选择含有vmlinuz字样的菜单进行编辑"></p>
</li>
<li><p>在菜单末尾增加 <code>init=/bin/bash</code> 后 <code>Enter</code> 返回上级菜单</p>
<p><img src="/static/img/20210108-virtualbox/5-%E5%9C%A8vmlinuz%E5%AD%97%E6%A0%B7%E7%9A%84%E8%8F%9C%E5%8D%95%E4%B8%AD%E7%BC%96%E8%BE%91%E5%A2%9E%E5%8A%A0init%E5%8F%82%E6%95%B0%EF%BC%88%E8%BF%9B%E5%85%A5%E6%95%91%E6%8F%B4%E6%A8%A1%E5%BC%8F%EF%BC%89-HHJ-20210108.png" alt="增加init参数以进入救援模式"></p>
<table>
<thead>
<tr>
<th>内核启动参数</th>
<th>含义</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>init=/sbin/init</td>
<td>告诉内核用 <code>/sbin/init</code> 作为它的 init 程序</td>
<td></td>
</tr>
<tr>
<td>init=/bin/bash</td>
<td>只启动 bash，在紧急恢复时有用</td>
<td>救援模式</td>
</tr>
<tr>
<td>root=/dev/foo</td>
<td>告诉内核用 <code>/dev/foo</code> 作为根设备</td>
<td></td>
</tr>
<tr>
<td>single</td>
<td>引导进入单用户模式</td>
<td>单用户模式</td>
</tr>
</tbody></table>
</li>
<li><p>然后按 <code>b</code> 重新启动系统</p>
<p><img src="/static/img/20210108-virtualbox/6-%E4%BF%AE%E6%94%B9%E8%8F%9C%E5%8D%95%E5%AE%8C%E6%88%90%E5%90%8E%E6%8C%89b%E5%AD%97%E7%AC%A6%E5%90%AF%E5%8A%A8%E8%BF%9B%E5%85%A5%E7%B3%BB%E7%BB%9F-HHJ-20210108.png" alt="按b字符启动进入系统"></p>
</li>
<li><p>进入救援模式初始界面</p>
<p><img src="/static/img/20210108-virtualbox/7-%E6%95%91%E6%8F%B4%E6%A8%A1%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%88%9D%E5%A7%8B%E7%95%8C%E9%9D%A2-HHJ-20210108.png" alt="救援模式初始界面"></p>
</li>
</ul>
</li>
</ol>
<ol start="3">
<li><p>查看系统的磁盘名称</p>
<pre><code class="bash"> df</code></pre>
</li>
<li><p>执行清理（请根据前一步的查询结果进行确定需要清理的磁盘）</p>
<pre><code class="bash"> zerofree -v /dev/sda1
 zerofree -v /dev/sda3</code></pre>
<p> <img src="/static/img/20210108-virtualbox/9-zerofree%E5%A1%AB%E5%85%85%E5%AE%8C%E6%AF%95-HHJ-20210108.png" alt="zerofree填充"></p>
<p> 至此，虚拟机磁盘容量 已经明显变小。然后强制关机，重新进入系统。</p>
<p> <img src="/static/img/20210108-virtualbox/10-%E6%95%91%E6%8F%B4%E6%A8%A1%E5%BC%8F%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E5%B8%B8%E8%A7%84%E5%85%B3%E6%9C%BA%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%8F%AA%E8%83%BD%E7%A1%AC%E4%BB%B6%E5%85%B3%E9%97%AD-HHJ-20210108.png" alt="无法使用常规关机命令，只能硬件关闭"></p>
</li>
<li><p>在宿主机中，打开命令行，笔者这里是Windows系统，如下执行</p>
<pre><code class="ps"> &quot;C:\Program Files\Oracle\VirtualBox\VBoxManage.exe&quot; modifyhd &quot;e:\target.vdi&quot; --compact</code></pre>
</li>
</ol>
<h2 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h2><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ol>
<li><p>mowkeeper.<code>VirtualBox压缩vdi文件</code>[EB/OL].<a href="http://mowblog.com/virtualbox%E5%8E%8B%E7%BC%A9vdi%E6%96%87%E4%BB%B6/">http://mowblog.com/virtualbox%E5%8E%8B%E7%BC%A9vdi%E6%96%87%E4%BB%B6/</a>, 2021/01/08.</p>
</li>
<li><p>Canonical Ltd.<code>Ubuntu Manpage: zerofree — zero free blocks from ext2, ext3 and ext4 file-systems</code>[EB/OL].<a href="http://manpages.ubuntu.com/manpages/hirsute/en/man8/zerofree.8.html">http://manpages.ubuntu.com/manpages/hirsute/en/man8/zerofree.8.html</a>, 2021/01/10.</p>
</li>
</ol>
<h3 id="变更说明"><a href="#变更说明" class="headerlink" title="变更说明"></a>变更说明</h3><ul>
<li><p>1.0.0，2021/01/19 20:55:03，初始版本。</p>
</li>
<li><p>1.0.1，2021/02/12 19:36:23，补充 Linux 内核启动参数表。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>电脑爱好者</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Linux</tag>
        <tag>VirtualBox</tag>
        <tag>虚拟机</tag>
        <tag>压缩</tag>
        <tag>zerofree</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年随笔</title>
    <url>/202101171157/</url>
    <content><![CDATA[<h2 id="2021-01-28，辛苦"><a href="#2021-01-28，辛苦" class="headerlink" title="2021/01/28，辛苦"></a>2021/01/28，辛苦</h2><p>写论文，又到凌晨，身心疲惫不已的，有种长路漫漫之感。</p>
<h2 id="2021-03-03，愚钝"><a href="#2021-03-03，愚钝" class="headerlink" title="2021/03/03，愚钝"></a>2021/03/03，愚钝</h2><p>最近，母亲在老家里动作频频，自己工作上也是困难重重，好几天都无精打采的，文件也写不出来</p>
]]></content>
      <categories>
        <category>星星心事</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>2021</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 使用 yum 国内源实现加速下载</title>
    <url>/202101171156/</url>
    <content><![CDATA[<p>又是一年过去，忽然接到通知，要求更新一个之前做的展示系统，就想起来要更新一下系统。结果使用 <code>yum list kernel.x86_64</code> 提示 <code>Cannot find a valid baseurl for repo: base</code>。</p>
<p>更换国内源也不行，看了<code>http://mirrors.163.com/centos/6.10/readme</code> 文件，发现官方自 2020/11/30 起就禁止 CentOS 6.x 更新了（文件被清空）。呜呜，真是后知后觉了！</p>
<pre><code class="sh">su
cd /etc/yum.repos.d/
cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.original
    # 系统是根据 Base*.repo 来判别基础源的，因此备份的时候必须修改扩展名

gedit CentOS-Base.repo
    # 国外 http://vault.centos.org/6.10
    # 国内 http://mirrors.aliyun.com/centos-vault/6.10/；

mv epel.repo epel.original
gedit epel.repo 
    # 网址替换为 http://archives.fedoraproject.org/pub/archive/epel/6/x86_64/ 即可
    # 国内（好像不行了） http://mirrors.aliyun.com/epel-archive/6/
rm -f /var/run/yum.pid
yum clean all
yum makecache
yum repolist</code></pre>
<p>网友多喜欢用 vim ，我是普通人，我就是喜欢使用 gedit ，用上边提到的网址将文件中的网址替换一下就搞定了；如果可能需要滚动升级到下一个版本的，请参考修改一下网址的表达方式就行了。</p>
<p>你问我怎么更换国内源，方法和上边是一样的——都是更换源嘛！至于国内源有哪些，可以了解一下清华、阿里云、网易、搜狐、中科大等源。当然，如果想简单一点的话，还可以</p>
<pre><code class="bash">su

# 备份
mv /etc/yum.repos.d/CentOS-Base.repo/etc/yum.repos.d/CentOS-Base.repo.bck

# 下载替换源（依次为网易、阿里、中科大、搜狐）
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo
# wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
# curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
# wget -O /etc/yum.repos.d/CentOS-Base.repo http://centos.ustc.edu.cn/CentOS-Base.repo
# wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.sohu.com/help/CentOS-Base-sohu.repo

# 更新系统源数据库
yum clean all
yum makecache
yum repolist</code></pre>
<p>当然，也可以用这种方法：</p>
<pre><code class="sh">su
sed -e &#39;s|^mirrorlist=|#mirrorlist=|g&#39; \
         -e &#39;s|^#baseurl=http://mirror.centos.org|baseurl=https://mirrors.tuna.tsinghua.edu.cn|g&#39; \
         -i.bak \
         /etc/yum.repos.d/CentOS-*.repo</code></pre>
<p>国内源是真的快，不用真的不知道！</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p>清华大学TUNA团队.<code>CentOS 镜像使用帮助</code>[EB/OL].<a href="https://mirrors.cnnic.cn/help/centos/">https://mirrors.cnnic.cn/help/centos/</a>, 2021/02/01.</p>
</li>
<li><p>fogwu.<code>centos6 yum源失效，yum不可用处理方法及php环境搭建</code>[EB/OL].<a href="https://www.cnblogs.com/fogwang/p/14133970.html">https://www.cnblogs.com/fogwang/p/14133970.html</a>, 2021/02/01.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>电脑爱好者</category>
      </categories>
      <tags>
        <tag>yum</tag>
        <tag>国内源</tag>
        <tag>CentOS</tag>
        <tag>加速</tag>
        <tag>下载</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 使用 pip 国内源实现百倍加速下载</title>
    <url>/202101171117/</url>
    <content><![CDATA[<blockquote>
<p>pip 是一个现代的，通用的 Python 包管理工具。提供了对 Python 包的查找、下载、安装、卸载的功能。</p>
</blockquote>
<p>使用 Python 多年了，一直都坚持使用官方源的做法，结果被现实打脸了，下载一个包往往一个小时都不一定能够成功，不得不放弃了使用 Python 的念头。后来，偶尔知道了 pip 有国内源，大大加快了组件的下载速度，必须严重推荐。</p>
<p>听说曾经有以下这些国内源——</p>
<blockquote>
<p>清华  <a href="https://pypi.tuna.tsinghua.edu.cn/simple/">https://pypi.tuna.tsinghua.edu.cn/simple/</a><br>阿里  <a href="https://mirrors.aliyun.com/pypi/simple/">https://mirrors.aliyun.com/pypi/simple/</a><br>豆瓣  <a href="https://pypi.doubanio.com/simple/">https://pypi.doubanio.com/simple/</a><br>中科大    <a href="https://mirrors.ustc.edu.cn/pypi/web/simple/">https://mirrors.ustc.edu.cn/pypi/web/simple/</a><br>官网  <a href="https://pypi.org/simple">https://pypi.org/simple</a><br>华中理工  <a href="http://pypi.hustunique.com/">http://pypi.hustunique.com/</a><br>山东理工  <a href="http://pypi.sdutlinux.org/">http://pypi.sdutlinux.org/</a></p>
</blockquote>
<p>2021年了，一些国内源已经不运营了，我也不习惯照抄网上的文章，所以这里是我的实践结果。</p>
<h2 id="国内源的测评"><a href="#国内源的测评" class="headerlink" title="国内源的测评"></a>国内源的测评</h2><table>
<thead>
<tr>
<th>源</th>
<th>地址</th>
<th>测试</th>
<th>速度</th>
</tr>
</thead>
<tbody><tr>
<td>清华大学</td>
<td><a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></td>
<td>ping pypi.tuna.tsinghua.edu.cn</td>
<td>62ms</td>
</tr>
<tr>
<td>阿里云</td>
<td><a href="https://mirrors.aliyun.com/pypi/simple/">https://mirrors.aliyun.com/pypi/simple/</a></td>
<td>ping mirrors.aliyun.com</td>
<td>8ms</td>
</tr>
<tr>
<td>豆瓣</td>
<td><a href="https://pypi.douban.com/simple/">https://pypi.douban.com/simple/</a></td>
<td>ping pypi.douban.com</td>
<td>52ms</td>
</tr>
</tbody></table>
<p>综上，推荐选择阿里云，不是网友清一色的推荐清华大学源和豆瓣源。</p>
<h2 id="临时源配置"><a href="#临时源配置" class="headerlink" title="临时源配置"></a>临时源配置</h2><ol>
<li><p>普通环境下操作示例：</p>
<pre><code class="cmd"> pipenv install &lt;package&gt;           -i &lt;URL&gt;
 pip install Django          -i https://pypi.doubanio.com/simple/</code></pre>
</li>
<li><p>虚拟环境下的操作示例</p>
<pre><code class="doc"> pipenv install &lt;package&gt;           --pypi-mirror &lt;URL&gt;
 pip install Django          --pypi-mirror https://mirrors.aliyun.com/pypi/simple/</code></pre>
</li>
</ol>
<h2 id="永久源配置"><a href="#永久源配置" class="headerlink" title="永久源配置"></a>永久源配置</h2><ol>
<li><p>Windows 平台：在 <code>%HOMEPATH%</code> 路径下创建 <strong>pip</strong> 文件夹，再创建 <code>pip.ini</code> 文件，内容如下：</p>
<pre><code class="ini"> [global]
 timeout = 6000
 index-url = https://mirrors.aliyun.com/pypi/simple/
 ;清华大学：https://pypi.tuna.tsinghua.edu.cn/simple
 ;阿里云：https://mirrors.aliyun.com/pypi/simple/
 ;豆瓣：https://pypi.douban.com/simple/

 [install]
 ;use-mirrors = true
 ;mirrors = https://pypi.tuna.tsinghua.edu.cn/simple
 trusted-host = https://mirrors.aliyun.com</code></pre>
</li>
<li><p>Linux 平台：在 <code>~/.pip/pip.conf</code> 文件中增加上述内容。</p>
</li>
<li><p>pipenv 等虚拟环境，只需要在相应的 <code>Pipfile</code> 中修改相应的 URL 内容即可，举例如下：</p>
<pre><code class="ini"> [[source]]
 name = &quot;pypi&quot;
 #修改源提高锁定速度
 url = &quot;https://mirrors.aliyun.com/pypi/simple&quot;

 [[source]]
 name = &quot;aliyun&quot;
 url = &quot;https://mirrors.aliyun.com/pypi/simple&quot;
 verify_ssl = true</code></pre>
</li>
</ol>
<p>测试下载 <code>pip install pandas</code> 速度从 12kb/s 提升到 3Mb/s，妥妥地提升百倍以上速度不是梦！</p>
<p>致敬阿里云、清华大学、豆瓣这些为开源共享力量的单位！</p>
<blockquote>
<p>上述内容，有些是三四年前梳理的，早忘了是参考了哪些文章了，有空再找找，然后补上来。<br>不过尴尬的是，天下文章一大抄，多数人都是乱写一通，不成体系，不辨真伪，实在是不堪入目！</p>
</blockquote>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li>PyPA.<code>Installing Packages</code>[EB/OL].<a href="https://packaging.python.org/tutorials/installing-packages/">https://packaging.python.org/tutorials/installing-packages/</a>, 2021/01/17.</li>
</ol>
]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>国内源</tag>
        <tag>加速</tag>
        <tag>下载</tag>
        <tag>pip</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>写论文的苦，你未必想尝一下</title>
    <url>/202101301128/</url>
    <content><![CDATA[<p>最近 3 个星期，一直在忙着写论文，走路在想，吃饭在想，睡觉也在想，总感觉某个地方有个难关需要我去跨越，我到了附近，却一直没有发现；等到论文基本写出来后，发现写论文是挺辛苦的！</p>
<h2 id="选题的苦"><a href="#选题的苦" class="headerlink" title="选题的苦"></a>选题的苦</h2><p>如果认真去做科研论文的话，选题是很苦的，因为是很难找到合适的题目的。</p>
<p>我都工作快 10 年了，也就最近才有些灵感和题材。一个人很难独自拥有一些高大上的项目，我的工作是搬砖的，就很难去研究烧砖技术，更多的是考虑如何搬运、如何与人协作、如何做好工期管理等等。</p>
<p>因此，好不容易在工作中，发挥了一些重要作用，在种种压力之下，准备去写论文；拟好了粗略的提纲，感觉去找一个知识数据库的账户，将同领域、同主题的文献找出来，一看，不好了，怎么这么多人都写了，多半只能放弃，就算不放弃，题材也很难写出新意来；水论文的人很多，可是自己扪心自问，那并不是我想要的，丢掉吧！</p>
<p>由于工作繁忙以及自己心里的这一丝丝骄傲，我好长时间都没有写出论文来，明明我业绩最多、贡献最大，可是我比不少按部就班的同事晚了 2 年。有些时日里，我焦虑得不行，不肯将就，也没有天降福利，在两个单位里边都被关心我的大领导约谈了…</p>
<p>好不容易能够选了一个题目，能够勉强说有创新性、实用价值的，又得在诸多先行者的背影里，寻找空间，作出差异化来，不然，自己就真的是水论文了。</p>
<h2 id="写作的苦"><a href="#写作的苦" class="headerlink" title="写作的苦"></a>写作的苦</h2><p>如果认真去做科研论文的话，写作的过程也是很苦的，因为写的东西不一定被人认可。</p>
<p>工作的过程，事情做完就了事了；可是如果发论文，那么自己得将事情的来龙去脉、因果、主次、先后等等都弄明白。最近写的这个论文，是关于计算机技术的，在网络上、操作系统里、论文里，都有零零星星的表述，可是有些已经过期了，有些别人就写错了，有些别人提供的参数、程序、方法等等不适合实际情况，都得去一一验证，一一去比较，一一去部署，最近这两周，我的头一直很疼，因为有些试验尝试了十多次了，一次需要一两个小时；日常的工作仍然需要继续，家里儿女仍得操心，老家也有一些烦心事，新一年的工作仍然很迷茫，这一些都让我很为难。</p>
<p>好不容易写出素材来了，还得修改文字；标题是否有吸引力，摘要是否清楚，翻译是否妥当，文章各级标题是否层次鲜明，各个段落的内容是否清楚明白、是否啰嗦繁杂、是否存在逻辑问题，得来回修改。</p>
<p>感觉差不多了，得控制字数，不能太多，也不能太少；图片得自己去绘制，不然显示效果不好；图表得考虑，论文的相关指标能否让别人看得懂、评估得上等级。因此，各种修改也得耗好几个通宵！</p>
<h2 id="发表的苦"><a href="#发表的苦" class="headerlink" title="发表的苦"></a>发表的苦</h2><p>如果认真去做科研论文的话，发表过程也是很辛苦的，因为得到好期刊的认可也是相当的困难的。好不容易有了内容，得开始寻找适当的杂志了。找了几个心仪的杂志，论文格式好好捯饬了一下，存了很多个版本格式，花了几天也完成了。</p>
<p>自己一无人脉，二无平台，三无能力，核心期刊基本都很难；前一个论文我整整收了三年，投了多家期刊，有些是毫不客气的说水平不行，有些和和气气地说不符合杂志风格，有些啥也没说退稿回来。</p>
<h2 id="成果的苦"><a href="#成果的苦" class="headerlink" title="成果的苦"></a>成果的苦</h2><p>如果认真去做科研论文的话，论文发表了也是很苦的，因为不是投入越大、回报越大。</p>
<p>很不容易地，论文发表了，可是好些平时不做事的同事，不知不觉地就发了好几篇论文，评选职称了，自己又显得落后了，这种苦真不是滋味！</p>
<p>看着别人那么水，和自己发在同样的杂志上，并不知道自己来回倒腾是否有价值。其实杂志里边的论文多数都是过得去的，奈何偏偏有几个相熟的人凑了一些他从来没有弄清楚过的内容上去，也发表了，心里何其翻覆！这样一对比，再也不认为那些核心期刊里侃侃而谈的大家们徒有其表了，而是自惭形秽不已。</p>
<p>论文发表了，自己回忆起来，那个过程仍然是苦涩的，很长时间都挥之不去。可是，如果得到了认可，对别人也发挥了作用，那心里在很短的瞬间也是会有甘之如饴的愉悦的。</p>
<p>其实，写论文不一定苦，苦的是放不下心里的结，随性一点的话，一切会好很多。春城冬暖，愿大家都能享受这美好的阳光。</p>
]]></content>
      <categories>
        <category>坐井观天</category>
      </categories>
      <tags>
        <tag>论文</tag>
        <tag>科研</tag>
        <tag>冷板凳</tag>
        <tag>苦</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统的多条件查询与匹配</title>
    <url>/202102122028/</url>
    <content><![CDATA[<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><ol>
<li><p>vim 的多条件匹配</p>
<table>
<thead>
<tr>
<th>与</th>
<th>或</th>
<th>非</th>
</tr>
</thead>
<tbody><tr>
<td>?<code>.*a</code>\&amp;<code>.*b</code></td>
<td>?<code>a</code>\|<code>b</code></td>
<td></td>
</tr>
<tr>
<td>?<code>a</code>\&amp;<code>.*b</code></td>
<td></td>
<td></td>
</tr>
</tbody></table>
</li>
<li><p>grep 的多条件匹配</p>
<table>
<thead>
<tr>
<th>与</th>
<th>或</th>
<th>非</th>
</tr>
</thead>
<tbody><tr>
<td>grep <code>&#39;pattern1&#39;</code> filename | grep <code>&#39;pattern2&#39;</code></td>
<td>grep ‘<code>pattern1</code>\|<code>pattern2</code>‘ filename</td>
<td>grep -v ‘<code>pattern</code>‘ filename</td>
</tr>
<tr>
<td>grep -E ‘<code>pattern1</code>.*<code>pattern2</code>‘ filename</td>
<td>grep -E ‘<code>pattern1</code>|<code>pattern2</code>‘ filename</td>
<td></td>
</tr>
<tr>
<td>grep -E ‘<code>pattern1</code>.*<code>pattern2</code>|<code>pattern2</code>.*<code>pattern1</code>‘ filename</td>
<td>grep -e ‘<code>pattern1</code> -e <code>pattern2</code>‘ filename</td>
<td></td>
</tr>
<tr>
<td></td>
<td>egrep ‘<code>pattern1</code>|<code>pattern2</code>‘ filename</td>
<td></td>
</tr>
</tbody></table>
</li>
</ol>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="与-运算"><a href="#与-运算" class="headerlink" title="与 运算"></a><code>与</code> 运算</h3><ol>
<li><p>查看 12 月份的错误信息：<code>grep</code> ‘<strong>error</strong>‘ /var/log/message <code>| grep</code> ‘<strong>Feb</strong> ‘；</p>
</li>
<li><p>查看用户下有无特定程序：</p>
<p> ps -Af | <code>grep -E</code> ‘root’ | <code>grep</code> bash<br> ps -Af | <code>grep</code>  herc  |<code>grep</code> bash</p>
</li>
</ol>
<blockquote>
<p>在系统的日常维护中，应当应该配合上下文检索信息，例如匹配前3条、后1条： ausearch -f /etc/passwd   | <code>grep -B3 -A1</code> cat。</p>
</blockquote>
<ol start="3">
<li><p>匹配文件中的两个字符串：</p>
<p> 第一个关键词位于行首：/2021-1-18<code>\&amp;.*</code> d</p>
<p> <img src="/static/img/20210224-vim/vim-%E5%A4%9A%E6%9D%A1%E4%BB%B6%E2%80%9C%E4%B8%8E%E2%80%9D%E8%BF%90%E7%AE%97-HHJ-20210224.png" alt="vim-多条件“与”运算"></p>
<p> 第一个关键词位于行中： /<code>.*</code>9:23<code>\&amp;.*</code> d</p>
<p> <img src="/static/img/20210224-vim/vim-%E5%A4%9A%E6%9D%A1%E4%BB%B6%E2%80%9C%E4%B8%8E%E2%80%9D%E8%BF%90%E7%AE%972-HHJ-20210224.png" alt="vim-多条件“与”运算2"></p>
</li>
</ol>
<h3 id="或-运算"><a href="#或-运算" class="headerlink" title="或 运算"></a><code>或</code> 运算</h3><ol>
<li><p>查看是否存在这些进程：ps -Af | <code>grep -E</code> ‘mysql<code>|</code>postgres<code>|</code>xinetd<code>|</code>amanda’；</p>
</li>
<li><p>查看相应程序是否开机运行的配置：chkconfig –list | <code>grep -E</code> ‘mysql<code>|</code>postgres<code>|</code>xinetd<code>|</code>amanda’。</p>
</li>
<li><p>匹配文件中的两个字符串： /<code>.*</code>Send<code>\|</code>83</p>
<p> <img src="/static/img/20210224-vim/vim-%E5%A4%9A%E6%9D%A1%E4%BB%B6%E2%80%9C%E6%88%96%E2%80%9D%E8%BF%90%E7%AE%97-HHJ-20210224.png" alt="vim-多条件“与”运算"></p>
</li>
</ol>
<h3 id="非-运算"><a href="#非-运算" class="headerlink" title="非 运算"></a><code>非</code> 运算</h3><ol>
<li><p>查看非空密码用户：cat /etc/shadow |<code>grep -v</code> “!!“；</p>
</li>
<li><p>查看可以登录系统的用户：cat /etc/passwd |<code>grep -v</code> “nologin”。</p>
</li>
</ol>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p>夜之眷属.<code>vim中多条件查询</code>[EB/OL].<a href="https://blog.csdn.net/qq_28112995/article/details/106741835">https://blog.csdn.net/qq_28112995/article/details/106741835</a>, 2021/02/12.</p>
</li>
<li><p>stalin_.<code>Linux--使用grep命令进行多条件查询（AND，OR，NOT）</code>[EB/OL].<a href="https://blog.csdn.net/stalin_/article/details/81450633">https://blog.csdn.net/stalin_/article/details/81450633</a>, 2021/02/12.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>电脑爱好者</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>Linux</tag>
        <tag>多条件查询</tag>
        <tag>vim</tag>
        <tag>grep</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS6 升级安装 MySQL 5.7</title>
    <url>/202103031918/</url>
    <content><![CDATA[<p>由于 CentOS6 自带的 MySQL 5.1 性能不行，使用过程中遇到了很多问题，<del>（误）最关键的是，都不支持 utf8mb4，后台去检查数据老是遇到乱码，烦死了！mysql 5.5.3+ 才支持 utf8mb4，（逃…）</del>因此我决定安装 MySQL 5.7 。</p>
<h2 id="设置国内源"><a href="#设置国内源" class="headerlink" title="设置国内源"></a>设置国内源</h2><p>最近几年里，我给好几个系统安装过 MySQL，可是国外官网的速度实在是太瘆人了；后来才知道这软件居然也有国内源，用了之后心情都好很多了。</p>
<p><code>gedit /etc/yum.repos.d/mysql-community.repo</code>，填入以下内容：</p>
<pre><code class="ini">[mysql-connectors-community]
name=MySQL Connectors Community
baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-connectors-community-el6-$basearch/
enabled=1
gpgcheck=1
gpgkey=https://repo.mysql.com/RPM-GPG-KEY-mysql

[mysql-tools-community]
name=MySQL Tools Community
baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-tools-community-el6-$basearch/
enabled=1
gpgcheck=1
gpgkey=https://repo.mysql.com/RPM-GPG-KEY-mysql

[mysql-5.6-community]
name=MySQL 5.6 Community Server
baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-5.6-community-el6-$basearch/
enabled=0
gpgcheck=1
gpgkey=https://repo.mysql.com/RPM-GPG-KEY-mysql

[mysql-5.7-community]
name=MySQL 5.7 Community Server
#baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-5.7-community-el6-$basearch/
#baseurl=https://mirrors4.tuna.tsinghua.edu.cn/mysql/yum/mysql-5.7-community-el6-x86_64/
baseurl=https://mirrors.ustc.edu.cn/mysql-repo/yum/mysql-5.7-community/el/6/x86_64/
enabled=1
gpgcheck=1
gpgkey=https://repo.mysql.com/RPM-GPG-KEY-mysql

[mysql-8.0-community]
name=MySQL 8.0 Community Server
baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-8.0-community-el6-$basearch/
enabled=0
gpgcheck=1
gpgkey=https://repo.mysql.com/RPM-GPG-KEY-mysql</code></pre>
<h2 id="安装程序"><a href="#安装程序" class="headerlink" title="安装程序"></a>安装程序</h2><p>使用 yum 进行安装 MySQL</p>
<pre><code class="sh">yum makecache
yum install mysql-community-libs-compat*
yum install mysql-community-server</code></pre>
<p> 一般情况下，MySQL包括以下各个包：</p>
<table>
<thead>
<tr>
<th align="left">名字</th>
<th align="left">摘要说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql-community-client</td>
<td align="left">MySQL客户端应用程序和工具</td>
<td></td>
</tr>
<tr>
<td align="left">mysql-community-common</td>
<td align="left">服务器和客户端库的通用文件</td>
<td></td>
</tr>
<tr>
<td align="left">mysql-community-devel</td>
<td align="left">MySQL数据库客户端应用程序的开发头文件和库</td>
<td></td>
</tr>
<tr>
<td align="left">mysql-community-embedded-compat</td>
<td align="left">MySQL服务器作为嵌入式库，与使用库版本18的应用程序兼容</td>
<td></td>
</tr>
<tr>
<td align="left">mysql-community-libs</td>
<td align="left">MySQL数据库客户端应用程序的共享库</td>
<td></td>
</tr>
<tr>
<td align="left">mysql-community-libs-compat</td>
<td align="left">以前的MySQL安装的共享兼容性库</td>
<td></td>
</tr>
<tr>
<td align="left">mysql-community-server</td>
<td align="left">数据库服务器和相关工具</td>
<td></td>
</tr>
<tr>
<td align="left">mysql-community-server-debug</td>
<td align="left">调试服务器和插件二进制文件</td>
<td></td>
</tr>
<tr>
<td align="left">mysql-community-test</td>
<td align="left">MySQL服务器的测试套件</td>
<td></td>
</tr>
<tr>
<td align="left">mysql-community</td>
<td align="left">RPM的源代码类似于mysql-community-8.0.20-1.el7.src.rpm，具体取决于所选的OS</td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>  安装还会在系统上创建一个名为的用户 mysql和一个名为的组 mysql。</p>
</blockquote>
<h2 id="MySQL-的初始化配置"><a href="#MySQL-的初始化配置" class="headerlink" title="MySQL 的初始化配置"></a>MySQL 的初始化配置</h2><h3 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h3><p><code>gedit /etc/my.cnf</code> 设定 MySQL 的编码参数以及默认端口</p>
<pre><code class="ini">[mysqld]
port    = 6033
character-set-server=utf8mb4
collation_server=utf8mb4_general_ci
default-time-zone = &#39;+8:00&#39;
explicit_defaults_for_timestamp=true

[client]
port    = 6033
default-character-set=utf8mb4</code></pre>
<h3 id="修改服务"><a href="#修改服务" class="headerlink" title="修改服务"></a>修改服务</h3><p>设定 MySQL 开机启动</p>
<pre><code class="sh">su
chkconfig --add mysqld
chkconfig mysqld on

# 启动 MySQL 服务
service mysqld start</code></pre>
<h3 id="账户和密码管理"><a href="#账户和密码管理" class="headerlink" title="账户和密码管理"></a>账户和密码管理</h3><ol>
<li>查看 MySQL 默认密码</li>
</ol>
<pre><code class="sh">grep &quot;temporary password&quot; /var/log/mysqld.log</code></pre>
<ol start="2">
<li>设定 root 密码，并添加普通用户 david</li>
</ol>
<pre><code class="sh">mysql -uroot -p
    # 本地
    ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;fs@DB135&#39;;
        # SET PASSWORD FOR &#39;root&#39;@&#39;localhost&#39; = PASSWORD(&#39;fs@DB135&#39;);   
    # 远程
    ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;fs@ABCD.135&#39;;

    # 普通用户 david
    CREATE USER &#39;david&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;dav#D2468&#39;;
    CREATE USER &#39;david&#39;@&#39;%&#39; IDENTIFIED BY &#39;dav#D-124857&#39;;

    # 查看用户
    select user,host,password from mysql.user;

    exit</code></pre>
<blockquote>
<p>如果由于默认的密码强度校验导致本地使用的简单密码无法通过，可以在 MySQL 中使用 <code>set global validate_password_policy=0;</code> 临时关闭，不过，应当谨慎使用哦!</p>
</blockquote>
<ol start="3">
<li>如果在使用过程中，需要修改账户的本地、远方访问权限，示例如下：</li>
</ol>
<pre><code class="sh"># 局域网访问：主库
grant replication slave on *.* to &#39;david&#39;@&#39;192.168.88.%&#39; identified by &#39;dav#D2468&#39; with grant option;
# 局域网访问：从库（在对端主机配置）
grant all privileges on *.* to &#39;david&#39;@&#39;192.168.88.%&#39; identified by &#39;dav#D2468&#39; with grant option;

# 远程访问（db1、db2为系统中的数据库名）
GRANT ALL PRIVILEGES ON db1.* TO &#39;david&#39;@&#39;%&#39; IDENTIFIED BY &#39;dav.D2468-fs1&#39; WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON db2.* TO &#39;david&#39;@&#39;%&#39; IDENTIFIED BY &#39;dav#D-124857&#39; WITH GRANT OPTION;

# 本地访问（临时性修改密码策略，从而在保留原有授权的基础下，增加密码较为简单的访问）
set global validate_password_policy=0;
GRANT ALL ON db1.* TO &#39;david&#39;@&#39;localhost&#39;   IDENTIFIED BY &#39;david.1357&#39; WITH GRANT OPTION;
GRANT ALL ON db2.* TO &#39;david&#39;@&#39;127.0.0.%&#39;   IDENTIFIED BY &#39;david.2468&#39; WITH GRANT OPTION;

# 执行生效
flush privileges;</code></pre>
<ol start="4">
<li>如果需要清除权限，示例如下：</li>
</ol>
<pre><code class="sh">mysql -u root -p
    select user,host, authentication_string from mysql.user;

    # 清除  delete 权限
    REVOKE delete ON *.* FROM &#39;david&#39;@&#39;localhost&#39;;
    revoke delete on *.* from &#39;david&#39;@&#39;%&#39;;

    # 清除 all 权限
    revoke all on *.* from &#39;david&#39;@&#39;localhost&#39;;
    REVOKE ALL PRIVILEGES ON *.* FROM &#39;david&#39;@&#39;%&#39;;

    # 执行生效
    FLUSH PRIVILEGES;</code></pre>
<ol start="5">
<li>配套修改防火墙确保远程主机的访问，如下：</li>
</ol>
<pre><code class="sh">gedit /etc/sysconfig/iptables
    -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
    #-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT
    -A INPUT -m state --state NEW -m tcp -p tcp --dport 6033 -j ACCEPT
    -A INPUT -j REJECT --reject-with icmp-host-prohibited
service iptables restart</code></pre>
<h3 id="安装故障排查"><a href="#安装故障排查" class="headerlink" title="安装故障排查"></a>安装故障排查</h3><p>查看错误日志是最直接有效的，如果不指定，文件名则为主机名（此处为 hhjos6 ），如：</p>
<pre><code class="sh">tail -f /var/lib/mysql/hhjos6.err</code></pre>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p>TUNA.<code>Mysql Community Edition 镜像使用帮助</code>[EB/OL].<a href="https://mirrors.cnnic.cn/help/mysql/">https://mirrors.cnnic.cn/help/mysql/</a>, 2021/03/05.</p>
</li>
<li><p>Oracle Corporation and/or its affiliates.<code>MySQL Product Archives</code>[EB/OL].<a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a>, 2021/03/05.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>国内源</tag>
        <tag>CentOS</tag>
        <tag>MySQL</tag>
        <tag>安装</tag>
        <tag>配置</tag>
      </tags>
  </entry>
</search>

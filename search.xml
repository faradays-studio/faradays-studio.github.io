<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>How to creat svg document with svg.js</title>
    <url>/201902080900/</url>
    <content><![CDATA[<p>A  few days ago, I got stuck in the mud of creating a svg dom with svg.js. After many test and searching, I found out that someting is different from the official  manual.</p>
<h2 id="The-problem-of-using-svg-js"><a href="#The-problem-of-using-svg-js" class="headerlink" title="The problem of using svg.js"></a>The problem of using svg.js</h2><p><strong>For example, we write some dom in <some_page>.html like this:</strong></p>
<pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Creating SVG with SVG.js<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge,chrome=1&quot;</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcss.com/svg.js/3.0.11/svg.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;drawing&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>
<span class="javascript">  <span class="hljs-comment">// write down your javascript here..</span></span>
<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre>


<p>The official  manual (refer to <a href="https://svgjs.com/docs/3.0/getting-started/">https://svgjs.com/docs/3.0/getting-started/</a>) said that <code>&lt;script&gt;...&lt;/script&gt;</code>  part like this:</p>
<pre><code class="hljs javascript"><span class="hljs-keyword">var</span> draw = SVG(<span class="hljs-string">&#x27;drawing&#x27;</span>).size(<span class="hljs-number">300</span>, <span class="hljs-number">300</span>)
<span class="hljs-keyword">var</span> rect = draw.rect(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>).attr(&#123; <span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;#f06&#x27;</span> &#125;)</code></pre>

<p>The script above pass through on jsfiddle.net test (refer to <a href="https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz">https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz</a> ). However, it doesn’t work on my case, no matter running on my MSIE 7.0 to 11.0 or Chrome 58. I felt so depressed that even could not got sleep for two whole days.</p>
<h2 id="The-way-to-write-svg-js-script-and-DOM"><a href="#The-way-to-write-svg-js-script-and-DOM" class="headerlink" title="The way to write svg.js script and DOM"></a>The way to write svg.js script and DOM</h2><p>After many tests and searching, I found out that these code running: </p>
<h3 id="1-Way-1"><a href="#1-Way-1" class="headerlink" title="1. Way 1:"></a>1. Way 1:</h3><p>   DOM: <code>&lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt;</code> </p>
<p>   Script 1: <code>var draw = SVG().addTo(&#39;#drawing&#39;).size(1024,200);</code> </p>
<p>   or </p>
<p>   Script 2: <code>var draw = SVG().addTo(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<h3 id="2-Way-2"><a href="#2-Way-2" class="headerlink" title="2. Way 2:"></a>2. Way 2:</h3><p>   DOM: <code>&lt;div class=&quot;drawing&quot;&gt;&lt;/div&gt;</code></p>
<p>   Script 1: <code>var draw = SVG().addTo(&#39;.drawing&#39;).size(1024,200);</code> </p>
<p>   or </p>
<p>   Script 2: <code>var draw = SVG().addTo(&#39;.drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<h3 id="3-Way-3"><a href="#3-Way-3" class="headerlink" title="3. Way 3: "></a>3. Way 3: <br/></h3><p>   DOM: <code>&lt;svg id=&quot;drawing&quot;&gt;&lt;/svg&gt;</code> </p>
<p>   Script 1: <code>var draw = SVG(&#39;#drawing&#39;).size(1024, 200);</code></p>
<p>   or</p>
<p>   Script 2: <code>var draw = SVG(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<p>Done!</p>
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>SVG</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用 svg.js 创建 svg 文档</title>
    <url>/201902090951/</url>
    <content><![CDATA[<p>前段时间，我尝试了使用 svg.js 来创建 svg dom 文档时，并没有成功。经过反复多次的尝试，并网络检索了一些信息，初步确认为官方文档未及时更新，导致了编码错误。</p>
<h2 id="使用-svg-js-遇到的问题"><a href="#使用-svg-js-遇到的问题" class="headerlink" title="使用 svg.js 遇到的问题"></a>使用 svg.js 遇到的问题</h2><p><strong>举个例子，dom 文档 <some_page>.html 的结构如下：</strong></p>
<pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Creating SVG with SVG.js<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge,chrome=1&quot;</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcss.com/svg.js/3.0.11/svg.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;drawing&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>
<span class="javascript">  <span class="hljs-comment">// write down your javascript here..</span></span>
<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre>


<p>官方文档（见 <a href="https://svgjs.com/docs/3.0/getting-started/">https://svgjs.com/docs/3.0/getting-started/</a> ）对于 JavaScript 脚本环节的部分 <code>&lt;script&gt;...&lt;/script&gt;</code> 是这样写的：</p>
<pre><code class="hljs javascript"><span class="hljs-keyword">var</span> draw = SVG(<span class="hljs-string">&#x27;drawing&#x27;</span>).size(<span class="hljs-number">300</span>, <span class="hljs-number">300</span>)
<span class="hljs-keyword">var</span> rect = draw.rect(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>).attr(&#123; <span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;#f06&#x27;</span> &#125;)</code></pre>

<p>上述脚本在 jsfiddle.net 网站中测试是无异常的，详见 <a href="https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz">https://jsfiddle.net/wout/wmtt8rkz/7/?utm_source=website&amp;utm_medium=embed&amp;utm_campaign=wmtt8rkz</a> 。然而，无论我是在 IE 7.0 至 11.0，还是在 Chrome 58 内核的浏览器中，我的本地测试从未成功。因此，整整 2 天里，我都未能从试验的阴影中恢复过来，反反复复进行了无数次试验，均无果而终。</p>
<h2 id="使用-svg-js-书写脚本和-DOM-的方法"><a href="#使用-svg-js-书写脚本和-DOM-的方法" class="headerlink" title="使用 svg.js 书写脚本和 DOM 的方法"></a>使用 svg.js 书写脚本和 DOM 的方法</h2><p>在无数次的一边尝试、一边网络搜索的过程中，我发现了以下可行的方法：</p>
<h3 id="1-方法-1"><a href="#1-方法-1" class="headerlink" title="1. 方法 1"></a>1. 方法 1</h3><p>   DOM 文档： <code>&lt;div id=&quot;drawing&quot;&gt;&lt;/div&gt;</code> </p>
<p>   脚本 1： <code>var draw = SVG().addTo(&#39;#drawing&#39;).size(1024,200);</code> </p>
<p>   或采取以下脚本： </p>
<p>   脚本 2： <code>var draw = SVG().addTo(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<h3 id="2-方法-2"><a href="#2-方法-2" class="headerlink" title="2. 方法 2"></a>2. 方法 2</h3><p>   DOM 文档： <code>&lt;div class=&quot;drawing&quot;&gt;&lt;/div&gt;</code></p>
<p>   脚本 1： <code>var draw = SVG().addTo(&#39;.drawing&#39;).size(1024,200);</code> </p>
<p>   或采取以下脚本： </p>
<p>   脚本 2： <code>var draw = SVG().addTo(&#39;.drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<h3 id="3-方法-3"><a href="#3-方法-3" class="headerlink" title="3. 方法 3"></a>3. 方法 3</h3><p>   DOM 文档： <code>&lt;svg id=&quot;drawing&quot;&gt;&lt;/svg&gt;</code> </p>
<p>   脚本 1： <code>var draw = SVG(&#39;#drawing&#39;).size(1024, 200);</code></p>
<p>   或采取以下脚本：</p>
<p>   脚本 2： <code>var draw = SVG(&#39;#drawing&#39;).size(&#39;100%&#39;, &#39;100%&#39;);</code></p>
<p>收工完事！</p>
]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>SVG</tag>
      </tags>
  </entry>
  <entry>
    <title>网站框架更新概要</title>
    <url>/202006071600/</url>
    <content><![CDATA[<h2 id="TO-DO"><a href="#TO-DO" class="headerlink" title="TO-DO"></a>TO-DO</h2><ol>
<li><p><del>配置评论系统，实现文章留言；</del>；</p>
</li>
<li><p><del>解决链接跳转错误问题（累经数月间歇性反复测试，初步认为为编译时不支持 <strong>?</strong> 符号的使用）；</del></p>
</li>
<li><p><del>夜间模式；</del></p>
</li>
</ol>
<h2 id="系统更新日志"><a href="#系统更新日志" class="headerlink" title="系统更新日志"></a>系统更新日志</h2><ol>
<li><p>2020/04/19 16:02:08，创建《更新日志》；</p>
</li>
<li><p>2020/04/19 21:47:44，整合原有静态网站，并入站点中跳转。</p>
</li>
<li><p>2020/04/22 0:54:40，修改 URL 设置，修改《如何使用 svg.js 创建 svg 文档》文章内容为中文。</p>
</li>
<li><p>2020/04/22 21:50:16，参考网友方法，纠正网页点击时变成了下载的 Bug，主要原因是 permalink 末尾没有添加 <code>/</code>符号，最终修改为 <code>permalink: :lang/:title/</code> 。</p>
</li>
<li><p>2020/04/25 22:56:19，修改 post 模板增加封面默认页。</p>
</li>
<li><p>2020/07/19 21:02:13，投入了大量的时间研究主题的定制，初步决定个性化修改后的主题名为 <strong>Faradays</strong> 。</p>
</li>
<li><p>2020/08/07 00:01:17，修改 Faradays 主题，调整文章页打赏、分享、目录导航、作者等内容布局样式。</p>
</li>
<li><p>2020/08/18 22:23:18，博客升级至 v0.1.3，主题增加时间轴、全站字数统计等功能，完成原创字段、图标等一系列更新。</p>
</li>
<li><p>2020/08/23 01:18:51，增加 gitalk评论、代码高亮、文章序号等功能，并调整原创显示样式、URL格式（去除语言字段）等。</p>
</li>
<li><p>2020/08/25 23:03:26，升级至 v0.1.5，开展独立页功能测试，增加多作者署名、文章页QQ联系博主、增加about页等功能，并调整了首页元素的 hover 样式、版权声明等内容。</p>
</li>
<li><p>2020/08/27 22:39:43，经过 5.66h 的尝试，删除部分不恰当的 commit，重新生成网址文件；对本地的 hexo 版本库和独立的 Git 文件库均进行了处理，确保版本一致、可用。</p>
</li>
<li><p>2020/08/28 22:59:29，升级至 v0.1.6，增加 sitemap、备用链接功能，调整署名、关键词设置，完成百度站长平台抓取 Gitee 主站的适配。</p>
</li>
<li><p>2020/08/29 20:13:01，升级到 v0.1.7，主要是 SEO 适配方面的改进。包括调整 sitemap 生成结果，同时部署到 Gitee 、 GitHub 两个站点；更新站点 logo ，调整文件头的作者、关键词、描述等方面的设置，调整页脚引用的 ref 参数等。</p>
</li>
<li><p>2020/08/29 23:56:38，纠正某文章图片链接填写方式不正确的问题；增加百度自动推送的脚本。</p>
</li>
<li><p>2020/08/30 11:20:03，增加页面加载计时、去除百度自动推送脚本，解决作者分隔符添加不当等问题。</p>
</li>
<li><p>2020/09/07 00:07:38，升级到 v0.2.0，实现主题的 layout 文件解耦升级、优化 IE 9+ 的兼容效果、增加夜间模式等重大功能升级，优化代码显示样式、首页/归档页/时间轴页内容居中、标签云、完善主题文档等功能。</p>
</li>
<li><p>2020/09/07 23:09:03，升级至 v0.2.1，调整手机模式下的元素显示效果和 FHD 分辨率下的居中的效果，确保手机模式下也能使用夜间模式切换功能。</p>
</li>
<li><p>2020/09/08 20:05:36，升级至 v0.2.2，修复主页和文章页在高分屏和手机屏下显示不佳问题。</p>
</li>
<li><p>2020/10/07 00:30:53，纠正 GitHub 的 sitemap 生成的 tag 、 category 站点地址不对应问题。</p>
</li>
<li><p>2020/10/08 22:17:01，升级至 v0.2.3，增加站点横幅（文章横幅）、独立页目录、自定义404页等功能，优化实现百度自动推送功能为可设置、多级无序列表的前导符号可差异化设置，修复跨页未连续编号、HTML生成代码生成不必要的换行、sitemap 部分地址不当等问题。</p>
</li>
<li><p>2020/10/12 20:51:32，升级至 v0.2.4，增加标题文本打字特效，恢复手机目录功能，调整手机模式下的表格、链接、分享图标和电脑模式下的目录等样式。</p>
</li>
</ol>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p>猴子请来的救兵.<code>Hexo主题开发</code>[EB/OL].<a href="https://www.cnblogs.com/yyhh/p/11058985.html">https://www.cnblogs.com/yyhh/p/11058985.html</a>, 2020/07/19.</p>
<blockquote>
<p>文章介绍的主题开发的内容，对于定制 Faradays 主题起了最初的启发意义。</p>
</blockquote>
</li>
<li><p>梅卫平.<code>Hexo博客实现首页和子页面不同layout布局</code>[EB/OL].<a href="https://my.oschina.net/u/3372900/blog/911534">https://my.oschina.net/u/3372900/blog/911534</a>, 2020/07/19.</p>
<blockquote>
<p>参考该文章，分离首页和文章页的样式。</p>
</blockquote>
</li>
<li><p>MinHow.<code>MiHo-主题安装和配置详情</code>[EB/OL].<a href="https://blog.minhow.com/articles/blog/installation-configuration/">https://blog.minhow.com/articles/blog/installation-configuration/</a>, 2020/07/19.</p>
<blockquote>
<p>网站主题基于 MiHo 修改，揉入了 Ayer、3-hexo 等主题的特色。在此，特别提出感谢！</p>
</blockquote>
</li>
<li><p>沈宇.<code>Ayer中文说明</code>[EB/OL].<a href="https://shen-yu.gitee.io/2019/ayer/">https://shen-yu.gitee.io/2019/ayer/</a>, 2020/07/19.</p>
<blockquote>
<p>网站主题参考了部分 Ayer 的设计思路。</p>
</blockquote>
</li>
<li><p>MOxFIVE.<code>Yelee —— 简而不减 Hexo 双栏博客主题</code>[EB/OL].<a href="http://moxfive.xyz/yelee/">http://moxfive.xyz/yelee/</a>, 2020/08/22.</p>
</li>
<li><p>Tom-shushu.<code>一款超好用的第三方评论插件--GITALK</code>[EB/OL].<a href="https://www.cnblogs.com/Tom-shushu/p/10970526.html">https://www.cnblogs.com/Tom-shushu/p/10970526.html</a>, 2020/08/22.</p>
<blockquote>
<p>参考该文章完成 gitalk 配置。</p>
</blockquote>
</li>
<li><p>Tommy Chen, HEXO官方文档.<code>hexo 变量</code>[EB/OL].<a href="https://hexo.io/zh-cn/docs/variables.html">https://hexo.io/zh-cn/docs/variables.html</a>, 2020/08/22.</p>
<blockquote>
<p>非常有意义的官方文章。</p>
</blockquote>
</li>
<li><p>Tommy Chen, HEXO官方文档.<code>hexo 辅助函数（Helpers）</code>[EB/OL].<a href="https://hexo.io/zh-cn/docs/helpers">https://hexo.io/zh-cn/docs/helpers</a>, 2020/08/22.</p>
<blockquote>
<p>非常有意义的官方文章。</p>
</blockquote>
</li>
<li><p>菜鸟教程.<code>Font Awesome 参考手册</code>[EB/OL].<a href="https://www.runoob.com/font-awesome/fontawesome-reference.html">https://www.runoob.com/font-awesome/fontawesome-reference.html</a>, 2020/08/23.</p>
<blockquote>
<p>参考调整部分图标。</p>
</blockquote>
</li>
<li><p><del>杨玉杰.<code>Hexo 主题 3-hexo</code>[EB/OL].<a href="https://yelog.org/2017/03/07/3-hexo/">https://yelog.org/2017/03/07/3-hexo/</a>, 2020/08/23.</del></p>
<blockquote>
<p>作者也多年来进行了主题的研究，有空可以参照思考。</p>
</blockquote>
</li>
<li><p>动力节点.<code>CSS八种让人眼前一亮的HOVER效果</code>[EB/OL].<a href="https://zhuanlan.zhihu.com/p/188620420">https://zhuanlan.zhihu.com/p/188620420</a>, 2020/08/23.</p>
<blockquote>
<p>参考完成了霓虹效果。</p>
</blockquote>
</li>
<li><p>chalkit.<code>修改hexo sitemap 生成插件中的链接模板</code>[EB/OL].<a href="https://www.jianshu.com/p/7f7f81e3ab24">https://www.jianshu.com/p/7f7f81e3ab24</a>, 2020/08/28.</p>
<blockquote>
<p>参考配置形成两个站点分别使用的 sitemap 文件。</p>
</blockquote>
</li>
<li><p>ha_weii.<code>hexo文件参数及其相关说明</code>[EB/OL].<a href="https://www.jianshu.com/p/d1dedae4d970">https://www.jianshu.com/p/d1dedae4d970</a>, 2020/08/28.</p>
<blockquote>
<p>该文章提到的主题配置文件 <code>_config.yml</code> 的参数含义，可以后期研究一下，也与阅读官方部分功能说明时形成印证效果。</p>
</blockquote>
</li>
<li><p>kobe1700.<code>hexo-theme-snippet</code>[EB/OL].<a href="https://gitee.com/kobe1700/hexo-theme-snippet">https://gitee.com/kobe1700/hexo-theme-snippet</a>, 2020/08/29.</p>
<blockquote>
<p>设置文章过期等做法可以参考</p>
</blockquote>
</li>
<li><p><del>Houmin.<code>Hexo NexT 添加多级相册功能</code>[EB/OL].<a href="https://houmin.cc/posts/d487dd02/">https://houmin.cc/posts/d487dd02/</a>, 2020/08/29.</del></p>
<blockquote>
<p>文章提出了设置多级相册的方法，很有意思。</p>
</blockquote>
</li>
<li><p>胖逆的嘟嘟.<code>hexo干货系列：（六）hexo提交搜索引擎（百度+谷歌）</code>[EB/OL].<a href="https://www.cnblogs.com/tengj/p/5357879.html">https://www.cnblogs.com/tengj/p/5357879.html</a>, 2020/08/29.</p>
<blockquote>
<p>参照设置自动推送方法。</p>
</blockquote>
</li>
<li><p>百度资源搜索平台.<code>平台工具使用帮助-链接提交</code>[EB/OL].<a href="https://ziyuan.baidu.com/college/courseinfo?id=267&amp;page=2">https://ziyuan.baidu.com/college/courseinfo?id=267&amp;page=2</a>, 2020/08/29.</p>
<blockquote>
<p>文章提出，百度自动推送功能已暂停使用。</p>
</blockquote>
</li>
<li><p>叶少翔.<code>js统计页面加载时间</code>[EB/OL].<a href="https://blog.csdn.net/jiangzunshao/article/details/53040785">https://blog.csdn.net/jiangzunshao/article/details/53040785</a>, 2020/08/30.</p>
<blockquote>
<p>参照设置了了页面加载的时间计算脚本。</p>
</blockquote>
</li>
<li><p>周思伟.<code>hexo-theme-yilia-plus</code>[EB/OL].<a href="https://github.com/JoeyBling/hexo-theme-yilia-plus">https://github.com/JoeyBling/hexo-theme-yilia-plus</a>, 2020/08/30.</p>
<blockquote>
<p>这个主题关于组件的集成思路可以参考。</p>
</blockquote>
</li>
<li><p>恶魔萝莉控.<code>给博客添加夜间模式</code>[EB/OL].<a href="https://nocilol.me/archives/code/add-night-mode-to-blog/">https://nocilol.me/archives/code/add-night-mode-to-blog/</a>, 2020/09/05.</p>
<blockquote>
<p>参考这个设置了主题夜间模式的脚本。</p>
</blockquote>
</li>
<li><p><del>crosschannel.cc.<code>面向小白的Hexo添加暗色模式教程</code>[EB/OL].<a href="https://crosschannel.cc/daily/hexo%E6%B7%BB%E5%8A%A0%E6%9A%97%E8%89%B2%E6%A8%A1%E5%BC%8F.html">https://crosschannel.cc/daily/hexo%E6%B7%BB%E5%8A%A0%E6%9A%97%E8%89%B2%E6%A8%A1%E5%BC%8F.html</a>, 2020/09/05.</del></p>
<blockquote>
<p>该文章提出了使用媒体查询的方式来切换夜间模式，可以参考，下一步研究。</p>
</blockquote>
</li>
<li><p><del>小康.<code>Hexo博客之butterfly主题优雅魔改系列（持续更新）</code>[EB/OL].<a href="https://www.antmoe.com/posts/a811d614/index.html">https://www.antmoe.com/posts/a811d614/index.html</a>, 2020/09/05.</del></p>
<blockquote>
<p>作者的魔改主题，有空可以研究。</p>
</blockquote>
</li>
<li><p><del>阳光派Plus.<code>hexo之Volantis添加暗黑模式</code>[EB/OL].<a href="https://www.zyoushuo.cn/post/e8f5.html">https://www.zyoushuo.cn/post/e8f5.html</a>, 2020/09/05.</del></p>
<blockquote>
<p>　作者的切换模式的动画，很有特色。</p>
</blockquote>
</li>
<li><p>菜鸟教程.<code>HTML DOM getElementsByClassName() 方法</code>[EB/OL].<a href="https://www.runoob.com/jsref/met-document-getelementsbyclassname.html">https://www.runoob.com/jsref/met-document-getelementsbyclassname.html</a>, 2020/09/06.</p>
<blockquote>
<p>通过该文章，学会对获取的元素进行长度处理，避免没有元素却执行 remove 的操作。</p>
</blockquote>
</li>
<li><p>葵花点穴手.<code>div onload事件</code>[EB/OL].<a href="https://blog.csdn.net/skylzc/article/details/79436336">https://blog.csdn.net/skylzc/article/details/79436336</a>, 2020/09/06.</p>
<blockquote>
<p>The onload event can only be used on the document(body) itself, frames, images, and scripts. In other words, it can be attached to only body and/or each external resource. The div is not an external resource and it’s loaded as part of the body, so the onload event doesn’t apply there.<br>onload event it only supports with few tags like listed below: <code>&lt;body&gt;, &lt;frame&gt;, &lt;iframe&gt;, &lt;img&gt;, &lt;input type=&quot;image&quot;&gt;, &lt;link&gt;, &lt;script&gt;, &lt;style&gt;</code> .<br>参考该文章，解决了灰暗模式的加载问题。</p>
</blockquote>
</li>
<li><p>Mozilla.<code>list-style-type</code>[EB/OL].<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/list-style-type">https://developer.mozilla.org/zh-CN/docs/Web/CSS/list-style-type</a>, 2020/10/08.</p>
<blockquote>
<p>多级列表前导符号、数字的 list-style-type 属性。</p>
</blockquote>
</li>
<li><p>腾讯寻人.<code>公益 404 页面介绍</code>[EB/OL].<a href="https://www.qq.com/404/">https://www.qq.com/404/</a>, 2020/10/08.</p>
</li>
<li><p>wensonlee.<code>表格自动换行，避免撑开</code>[EB/OL].<a href="https://blog.csdn.net/wensonlee/article/details/83156892">https://blog.csdn.net/wensonlee/article/details/83156892</a>, 2020/10/09.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>开发笔记</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World（世界，你好）</title>
    <url>/202008090000/</url>
    <content><![CDATA[<p>追求卓越！</p>
]]></content>
      <categories>
        <category>Faradays&#39; Studio</category>
      </categories>
  </entry>
  <entry>
    <title>Windows 批处理的字符运算（未完待续）</title>
    <url>/202008200927/</url>
    <content><![CDATA[<p>字符运算历来是编程中的重要内容，如何拼接字符，如何截取字符，如何判断字符是否存在，如何判断两个字符串是否相同，成为了编程任务中的重要环节。因此，我结合网络的资料和个人的实践经验来总结一下。</p>
<h2 id="Windows-批处理中字符的基本常识"><a href="#Windows-批处理中字符的基本常识" class="headerlink" title="Windows 批处理中字符的基本常识"></a>Windows 批处理中字符的基本常识</h2><ol>
<li><p>批处理中变量的赋值符号两侧不能包含空格，如 <code>set str_date=&#39;20200820&#39;</code>，这与很多编程规范是相悖的。</p>
</li>
<li><p>批处理中的字符可以不添加双引号，但是如果包含空格的话，必须使用引号，，如 <code>set str_name=&quot;20200820 Windows 批处理的字符运算经验总结&quot;</code>。</p>
</li>
<li><p>自定义变量使用 % 来包围来进行引用，即 <code>%变量%</code> ；而 Windows 内置变量（含文件路径变量扩展）则使用 % 符号来引导，即 <code>%内置变量</code> 。</p>
</li>
</ol>
<h2 id="截取字符串"><a href="#截取字符串" class="headerlink" title="截取字符串"></a>截取字符串</h2><h3 id="一般性的字符截取"><a href="#一般性的字符截取" class="headerlink" title="一般性的字符截取"></a>一般性的字符截取</h3><ol>
<li>基本语法： <code>%**变量名**:~**起点位置**,**截取数量|终点位置**%</code></li>
</ol>
<p><strong>起点位置</strong> ：如果为正数，那么就是从左往右截取，而如果为负数，那么就是说从右向左截取；不过无论为正还是为负，截取结果都是不包含处于 <strong>起点位置</strong> 的那个字符的。</p>
<p><strong>截取数量|终点位置</strong> ：如果为正数，那么就是单纯的 <strong>截取数量</strong> ；如果为负数，那么应当表述为 <strong>终点位置</strong> ，而且，与 <strong>起点位置</strong> 对应，截取结果也是不包含该负数所对应的字符的，即上述的 -5 对应的是终点位置为右侧第 6 个字符截止。</p>
<p>举例说明，如下：</p>
<pre><code class="hljs powershell"><span class="hljs-built_in">echo</span> on
<span class="hljs-built_in">set</span> ifo=abcdefghijklmnopqrstuvwxyz0123456789
<span class="hljs-built_in">echo</span> %ifo%
<span class="hljs-built_in">echo</span>.
<span class="hljs-built_in">echo</span> 截取前<span class="hljs-number">4</span>个字符：%ifo:~<span class="hljs-number">0</span>,<span class="hljs-number">4</span>%
<span class="hljs-built_in">echo</span> 截取年度：%date:~<span class="hljs-number">0</span>,<span class="hljs-number">4</span>%
<span class="hljs-built_in">echo</span>.
<span class="hljs-built_in">echo</span> 截取最后<span class="hljs-number">2</span>个字符：%ifo:~<span class="hljs-literal">-2</span>%
<span class="hljs-built_in">echo</span> 截取星期：%date:~<span class="hljs-literal">-2</span>%
<span class="hljs-built_in">echo</span>.
<span class="hljs-built_in">echo</span> 截取第一个到倒数第<span class="hljs-number">6</span>个字符：%ifo:~<span class="hljs-number">0</span>,<span class="hljs-literal">-5</span>%
<span class="hljs-built_in">echo</span> 截取日期（含分隔符）：%date:~<span class="hljs-number">0</span>,<span class="hljs-literal">-3</span>%
<span class="hljs-built_in">echo</span>.
<span class="hljs-built_in">echo</span> 从第<span class="hljs-number">5</span>个字符开始，截取<span class="hljs-number">2</span>个字符：%ifo:~<span class="hljs-number">4</span>,<span class="hljs-number">2</span>%
<span class="hljs-built_in">echo</span> 截取月份：%date:~<span class="hljs-number">5</span>,<span class="hljs-number">2</span>%
<span class="hljs-built_in">echo</span> 截取天数：%date:~<span class="hljs-number">8</span>,<span class="hljs-number">2</span>%
<span class="hljs-built_in">echo</span>.
<span class="hljs-built_in">echo</span> 从倒数第<span class="hljs-number">14</span>个字符开始，截取<span class="hljs-number">5</span>个字符：%ifo:~<span class="hljs-literal">-14</span>,<span class="hljs-number">5</span>%
<span class="hljs-built_in">echo</span> 截取秒数：%time:~<span class="hljs-number">3</span>,<span class="hljs-number">2</span>%
<span class="hljs-built_in">echo</span>.
<span class="hljs-built_in">echo</span> 当前时间是：%time% 即 %time:~<span class="hljs-number">0</span>,<span class="hljs-number">2</span>%点%time:~<span class="hljs-number">3</span>,<span class="hljs-number">2</span>%分%time:~<span class="hljs-number">6</span>,<span class="hljs-number">2</span>%秒%time:~<span class="hljs-number">9</span>,<span class="hljs-number">2</span>%厘秒
pause</code></pre>

<p>当然，我最常用的就是对日期、时间等内置变量的操作。</p>
<h3 id="文件路径字符的截取"><a href="#文件路径字符的截取" class="headerlink" title="文件路径字符的截取"></a>文件路径字符的截取</h3><p>主要依靠 Windows 内置的扩展变量用法来进行。</p>
<p>执行 <code>for /?</code> 可以查看路径扩展的</p>
<p>举例说明，如下（注意，需要另存为 test.bat 文件形式执行）：</p>
<pre><code class="hljs powershell">@<span class="hljs-built_in">echo</span> off
<span class="hljs-built_in">echo</span> 当前路径的完整字符串：%<span class="hljs-number">0</span>
<span class="hljs-built_in">echo</span> 当前路径的完整字符串（如被双引号包围，去除双引号）：%~<span class="hljs-number">0</span>
<span class="hljs-built_in">echo</span> 当前路径的所在分区：%~d0
<span class="hljs-built_in">echo</span> 当前路径的目录：%~p0
<span class="hljs-built_in">echo</span> 文件名：%~n0
<span class="hljs-built_in">echo</span> 扩展名：%~x0
<span class="hljs-built_in">echo</span> 文件属性：%~a0
<span class="hljs-built_in">echo</span> 修改时间：%~t0
<span class="hljs-built_in">echo</span> 文件大小：%~z0
pause</code></pre>

<p>路径处理，往往都配合 for 函数进行操作。</p>
<p><strong>未完待续…</strong></p>
<h2 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h2><h3 id="变更日志"><a href="#变更日志" class="headerlink" title="变更日志"></a>变更日志</h3><ol>
<li>2020/08/20 10:49:23，创建文章。</li>
</ol>
<h3 id="参考索引"><a href="#参考索引" class="headerlink" title="参考索引"></a>参考索引</h3><ol>
<li><strong>CharyGao</strong>.<code>DOS命令（cmd）批处理：替换字符串、截取字符串、扩充字符串、获取字符串长度</code>[EB/OL].<a href="https://www.cnblogs.com/Chary/p/No0000A4.html">https://www.cnblogs.com/Chary/p/No0000A4.html</a>, 2020/08/20.</li>
</ol>
]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>批处理</tag>
        <tag>字符运算</tag>
      </tags>
  </entry>
  <entry>
    <title>苹果 Macbook Pro 笔记本从 U 盘启动以及重置开机密码的方法</title>
    <url>/202008272141/</url>
    <content><![CDATA[<p>前几天，有位老领导委托我对其苹果 Macbook Pro 2018 笔记本进行优化处理。由于网上的资料比较零散、挂一漏万，因此我也来总结一下操作经验。</p>
<h2 id="配置-U盘启动或者切换系统的方法"><a href="#配置-U盘启动或者切换系统的方法" class="headerlink" title="配置 U盘启动或者切换系统的方法"></a>配置 U盘启动或者切换系统的方法</h2><ul>
<li><p>Macbook 没有 BISO 等设置，所谓的进入 U盘 PE 或者切换双系统的方法是：按住 <kbd>Option</kbd> 键，然后按电源键开机，那么就会出现一个类似于 Windows 启动项的界面，从而用于实现改变启动方式的效果。</p>
<p>  <img src="/static/img/Macbook-%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%95%8C%E9%9D%A2-20200824.jpg" alt="Macbook启动项界面-HHJ"></p>
</li>
</ul>
<blockquote>
<p>苹果电脑安装 Windows 系统，一般都是通过 Boot Camp 等软件来实现。对于双系统的主机，也可以在 Windows 系统中输入 <strong>“恢复”</strong> 找到相应的菜单进入切换启动盘的功能，不过具体功能我没有完整测试。</p>
</blockquote>
<blockquote>
<p>有意思的是，进入 MacOS 的启动方式选择界面后，如果接入 U盘 PE，那么也能很快识别出来；跟我之前在 BISO 里边配置 U盘启动需要提前接入还是有明显差别的。</p>
</blockquote>
<h2 id="Macbook-重置密码的方法"><a href="#Macbook-重置密码的方法" class="headerlink" title="Macbook 重置密码的方法"></a>Macbook 重置密码的方法</h2><p>结合网络资料测试了一下，操作流程如下：</p>
<ol>
<li><p>按住 <kbd>Option</kbd> 键，然后按电源键开机；</p>
</li>
<li><p>按方向键选择 Macintosh （苹果） 系统，按 <kbd>Command</kbd> + <kbd>r</kbd> 后自动进入系统恢复界面；</p>
</li>
<li><p>在经历进度条界面一会后，选择界面的操作语言后，出现以下界面，执行菜单命令 <code>使用工具</code>→<code>终端</code> ，弹出终端界面：</p>
<p> <img src="/static/img/Macbook-%E7%BB%B4%E6%8A%A4%E7%BB%88%E7%AB%AF-20200824.jpg" alt="Macbook系统恢复界面-HHJ"></p>
</li>
<li><p>在终端中执行 <code>resetpassword</code> ，在弹窗中选择需要重置的用户名，并填入新密码，然后存储到系统即可完成修改。</p>
<p> <img src="/static/img/Macbook-%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81%E7%A4%BA%E6%84%8F%E5%9B%BE-20200824.jpg" alt="Macbook重置密码示意图-HHJ"></p>
</li>
<li><p>完成修改后重新使用第 1 步的方法进入苹果系统，在登入后可能会提示钥匙串密码是否修改等内容，我选择了修改成一致后，重复登录检查账户使用正常。</p>
</li>
</ol>
<blockquote>
<p>需要注意的是，上述方法仅应使用在合法授权的电脑上，请勿滥用！践行社会主义核心价值观，人人有责！</p>
</blockquote>
<h2 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h2><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ol>
<li>学知网.<code>苹果笔记本进入BIOS设置教程</code>[EB/OL].<a href="https://www.jmqz1000.com/dnzs/23488.html">https://www.jmqz1000.com/dnzs/23488.html</a>, 2020/08/24.</li>
</ol>
<h3 id="变更说明"><a href="#变更说明" class="headerlink" title="变更说明"></a>变更说明</h3><ul>
<li><p>1.0.0，2020/08/27 22:29:16，初始版本。</p>
</li>
<li><p>1.0.1，2020/08/28 18:11:26，重新组织语言，去除一些自以为是的废话。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>电脑爱好者</category>
      </categories>
      <tags>
        <tag>Apple</tag>
        <tag>Macbook</tag>
        <tag>MacOS</tag>
        <tag>密码</tag>
        <tag>操作系统</tag>
        <tag>PE</tag>
        <tag>U盘</tag>
      </tags>
  </entry>
  <entry>
    <title>评《Margin Call》：高个不挑担，世上永无光</title>
    <url>/202010021008/</url>
    <content><![CDATA[<blockquote>
<p>直到落幕，我才意识到 《Margin Call》（商海通牒） 已经结束，可是对它的感悟我才刚刚开始…</p>
<p>剧本 ☆☆☆☆<br>场景 ☆☆☆☆<br>演绎 ☆☆☆☆<br>综合 ☆☆☆☆</p>
</blockquote>
<h2 id="剧情"><a href="#剧情" class="headerlink" title="剧情"></a>剧情</h2><p>整个故事不复杂：一家公司正在大幅裁员，领导 Sam 带头鼓掌并发表了鼓舞人心的讲话，员工们纷纷加班至深夜；努力工作的新员工 Peter 在别人下班去娱乐的时候，发现了公司风险模型预测到未来走势将大幅下跌，光是一层楼 25% 的亏损将超过公司的市值，立即汇报领导 Will ，领导也汇报他的领导 Sam，最后二把手贾德·科恩也在凌晨 2 点乘坐直升机来到公司，并决策抛售公司资产、及时止损。</p>
<p>整部电影一直都没有正面展开商业斗争的波谲云诡（bō jué yún guǐ），而是大量了使用了各种背景阐述，各种侧面语言动作渲染。电影的节奏一直比较缓慢，没有快步奔跑的员工，也没有大幅的悲伤情绪，即使大结局了，既没有看到行业动荡的场景，也没有被阴谋拖入破产骗局的投资人纷纷跳楼的场景；只见暗淡的月色底下，与会者深锁的眉头、凝重的表情，晦涩难懂、含糊不清的经营风险陈述，与员工们纸醉金迷的生活、老板来去直升机、投资人高大上言论形成鲜明的对比。</p>
<p>Eric Dale （艾力克·戴尔）负责风险管理部门，工作了 19 年的员工，秋毫不觉就被即时辞退了。他希望在离职时将工作交接清楚，可是无论是人力资源部门主管还是自己的直属领导 Will Emerson，都没有人搭理他；在电梯门关闭之际，他将做了一半工作的资料U盘给了赶来告别的新员工 Peter，然后到了楼下工作手机就被公司关停了。</p>
<p>发生问题后公司想请他说清楚以及对数据进行保密时，公司才发现已经联系不上他了，只能等到凌晨他妻子打来电话说他在家了，公司才决定去他家里找他、用每小时 17 万多美元的代价来要求他对公司的风险秘密予以保守一天。</p>
<h2 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h2><h3 id="个人利益至上，屠龙少年终成恶龙"><a href="#个人利益至上，屠龙少年终成恶龙" class="headerlink" title="个人利益至上，屠龙少年终成恶龙"></a>个人利益至上，屠龙少年终成恶龙</h3><p>尽管行业性的经济危机将至，但只有一个镜头表现了 2008 年经济大动荡的可怕的之处——因年入 25 万美元而自豪不已的小员工 Seth （赛斯·布雷格曼）面对即将辞退的困境，在卫生间里边痛哭失声，他十多分钟前还镇定自若地说，OK！</p>
<p>公司的领导人 Sam 尽管工作了 34 年，积累了大量的财富，作为人性未泯的领导者，他依然无法放弃对利益的追逐。</p>
<p>他是靠公司体制成功的领导者。他入职早，高高在上，做出英明的决策，英明地裁员、果断地抛售资产，然而公司的主要利润都是那些小员工辛辛苦苦赚来的，他甚至不知道的如何看明白预示着公司未来的曲线怎么看、指标是什么，他也记不住下层员工的名字，但是不影响他拿着公司基层无法企及、难以想象的高薪。他的狗生病了，每天都要花费一千美元治病，他太过于悲伤甚至于不觉得80%的下属被辞退了能怎么样，毕竟他早已从长期的人员流动中变得麻木不仁了！</p>
<p>他来自基层，也拼搏过，因此他同情弱者、忧心行业，良心未泯。 Sam 的手下员工，不乏能力卓著的年轻人，比如说火箭科学家 Peter（彼得·苏利文）；也有出身不凡的得力下属，比如说桥梁工程师 Eric。因此，当二把手要求他出售资产时，他考虑到了对行业的影响以及年轻人的未来，他质疑何为老板毫无选择，他拒绝聆听风险评估，他嚎叫老板让开，他一次又一次地拒绝了二把手的要求，直到杰瑞开出了天价的报酬。</p>
<p>他是利益追逐的一员，当首席风险评估分析师 Sarah（莎拉·罗伯森）等其他部门的人员被二把手说服后，他也自甘堕落，即使明知严重违反良知与诚信，明知 3/7 的人员还将被裁决，他仍然镇定自若地完成了所有下属的工作安排——在一天之内完成风险资产的全部抛售，那么是打六五折也可以。跟他的下属 Will 一样，渴望保留人性，但无法拒绝金钱利益的侵蚀—— Will 站在楼顶做出跳楼的假动作，他颤动地看着深渊，最终还是说“not today”，并向下属员工轻描淡写地描述了去年收入的 250 万美元是如何轻而易举地全部花完的！</p>
<h3 id="遍身罗绮者，不是养蚕人"><a href="#遍身罗绮者，不是养蚕人" class="headerlink" title="遍身罗绮者，不是养蚕人"></a>遍身罗绮者，不是养蚕人</h3><blockquote>
<p>评估员塞斯问长官威尔，这次的危机会给平常人带来的影响？</p>
<p>威尔这样说：这些普通人，他们想要的生活就是香车豪宅，但是他们根本负担不起。这就是为什么我们这么重要，我们是他们豪华生活的根本原因。我们用手指在他们天平的一端压了一下，我们抽走手指，那时候才是真正的公平社会，但是他们马上就会不干。他们想要我们给的东西，但是又喜欢假装不知道这些东西是怎么来的。他们装伪君子比我强多了，去他们的吧！</p>
</blockquote>
<p>尽管二把手很年轻，但是手段非常老到，他左右拉拢员工，用尽方法；他信口开河，满是利益，让人毫无拒绝的可能性。是的，无论是 Sam 还是 Jerry，尽管技术能力平平，但是都心狠手辣，善于言谈，洞察人心，这是他们驱动那些比他们更有技术手段的人为他们卖命赚钱！</p>
<p>更绝的是，最后的老大 John（约翰·图尔德），更是老手中的老手，他左一句你可以 <strong>保留</strong> 股份与分红，右一句 <strong>及时止损比整年焦头烂额更好</strong> 的深入分析，直接将 Sam 说服了。将相本无种，奈何无论人数如何变化，富贵与贫贱的比例永远不变，无论时间过去多长，名利的游戏将永存不朽，历史中的一次次经济危机游戏给了我们无限的启迪：</p>
<blockquote>
<p>1637年、1797年、1819年、1837年、1857年、1884年、1901年、1907年、1929年、1937年、1974年、1987年、1992年、1997年、2000年、还有这次，不管我们叫它什么，一样的缘故，一次又一次，我们挡都挡不住，我们还想阻止它，控制它，甚至放慢它，我们的本性一丁点都没变，我们仅仅是随机应变，如果对了就赚一大笔，如果错了就被晾到一边，这个世界上过去会有，将来也会有，同样比例的赢家和输家，得意洋洋者和垂头丧气者，撑的撑死，饿的饿死，今天像我们这样的人也许前所未有的多，但是那个比例，原封未动。</p>
</blockquote>
<p>历史总是存在输家和赢家，至此， Sam 完全被征服；他已毫不在乎之前是如何如何地一次次的痛苦挣扎， 唯余 “我只是不想事情发展到如此操蛋的地步！” 的感叹给观众去慢慢品味！</p>
<p>夜晚， Sam 回到前妻的房前，埋葬了自己深爱的狗，也埋葬了自己的良心。从来都没有屠龙的英雄，有的都是最终都会皮毛并带角的怪兽！公平平等从来都不存在过，古今中外，资本逐利，2% 的头部资本家拥有绝对控股的资源，也许一部分人分到了羹汤成为了人上人，但始终不可能让广大底层人员享受到福利，从来如此，社会主义道路何其远哉！</p>
]]></content>
      <categories>
        <category>坐井观天</category>
      </categories>
      <tags>
        <tag>影评</tag>
        <tag>Margin Call</tag>
        <tag>商海通牒</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery 用法入门</title>
    <url>/202010052246/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>虽然已经 2020 年了，但是，对于非专业编程人士来说，使用 jQuery 仍然是一个不错的选择的。因为它是一个希望用户 <strong>写的少，做的多</strong> 的 JavaScript 库，并得到了广泛的使用。它具有以下功能：</p>
<ul>
<li>HTML 元素选取</li>
<li>HTML 元素操作</li>
<li>CSS 操作</li>
<li>HTML 事件函数</li>
<li>JavaScript 特效和动画</li>
<li>HTML DOM 遍历和修改</li>
<li>AJAX</li>
<li>Utilities</li>
</ul>
<blockquote>
<p>我并非是职业写程序的，既没有完整的时间去学习，也没有那样的环境让我学习；只是偶尔由于工作需要使用编程工具，因此 jQuery 帮我快速地完成了网站菜单、网站 UI 等其他工具没有帮我完成的事情。因此即使在大量的批评意见之下，我仍然愿意为 jQuery 代言。</p>
</blockquote>
<h3 id="jQuery版本"><a href="#jQuery版本" class="headerlink" title="jQuery版本"></a>jQuery版本</h3><ol>
<li><p><strong>1.xx</strong> 的版兼容 IE 6/7/8，官方只做 BUG 维护，功能不再新增。最终版本：1.12.4 (2016年5月20日)</p>
</li>
<li><p><strong>2.xx</strong> 版本不兼容 IE 6/7/8，官方只做 BUG 维护，功能不再新增。</p>
</li>
<li><p><strong>3.xx</strong> 版本不兼容 IE 6/7/8，只支持最新的浏览器。并且很多老的jQuery插件不支持 3.x 版。目前该版本是官方主要更新维护的版本。</p>
</li>
</ol>
<blockquote>
<p>压缩版（mini,js）与未压缩版本的功能一致，区别只在于文件大小</p>
</blockquote>
<h3 id="引用-jQuery-到-HTML"><a href="#引用-jQuery-到-HTML" class="headerlink" title="引用 jQuery 到 HTML"></a>引用 jQuery 到 HTML</h3><p>在网页中引入 jQuery 库的方法有很多种，简单总结如下：</p>
<ol>
<li><p>本地引用</p>
 <pre><div class="caption"><span>basic.html</span></div><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-1.10.2.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></code></pre>

<blockquote>
<p>JavaScript 是 HTML5 以及所有现代浏览器中的默认脚本语言！因此没有必要在 <code>&lt;script&gt;</code> 标签中使用 <code>type=&quot;text/javascript&quot;</code> 了。</p>
</blockquote>
</li>
<li><p>CDN 引用</p>
 <pre><code class="hljs language">&lt;head&gt;
    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;jquery&#x2F;1.10.2&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;
    
    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;apps.bdimg.com&#x2F;libs&#x2F;jquery&#x2F;2.1.4&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;
    
    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;upcdn.b0.upaiyun.com&#x2F;libs&#x2F;jquery&#x2F;jquery-2.0.2.min.js&quot;&gt;&lt;&#x2F;script&gt;
    
    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;lib.sinaapp.com&#x2F;js&#x2F;jquery&#x2F;2.0.2&#x2F;jquery-2.0.2.min.js&quot;&gt;&lt;&#x2F;script&gt;
    
    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;ajax.aspnetcdn.com&#x2F;ajax&#x2F;jquery&#x2F;jquery-1.9.0.min.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;&#x2F;head&gt;</code></pre>

<blockquote>
<p><strong>使用 CDN 的原因</strong><br>许多用户在访问其他站点时，已经从百度、又拍云、新浪、谷歌或微软加载过 jQuery。所以结果是，当他们访问您的站点时，会从缓存中加载 jQuery，这样可以减少加载时间。同时，大多数 CDN 都可以确保当用户向其请求文件时，会从离用户最近的服务器上返回响应，这样也可以提高加载速度。</p>
</blockquote>
</li>
</ol>
<h2 id="jQuery-的语法"><a href="#jQuery-的语法" class="headerlink" title="jQuery 的语法"></a>jQuery 的语法</h2><h3 id="jQuery-库的引用字符"><a href="#jQuery-库的引用字符" class="headerlink" title="jQuery 库的引用字符"></a>jQuery 库的引用字符</h3><p>当然要在 JavaScript 语句中指明使用的是 jQuery 库，否则网页怎么知道呢？用法有两种：</p>
<ul>
<li>最常见： <strong>$</strong> ，如 <code>$(&quot;#ID值&quot;);</code> ；</li>
<li>最安全： <strong>jQuery</strong> ，如 <code>jQuery(&quot;#ID值&quot;);</code> 。</li>
</ul>
<p>这两种我都用过，不过网上最常见的是第一种用法，后续也采用这种表述，字面上简洁一些。</p>
<h3 id="入口函数"><a href="#入口函数" class="headerlink" title="入口函数"></a>入口函数</h3><p>为了确保 JavaScript 脚本能够正确执行，建议 jQuery 的编写如下：</p>
<pre><div class="caption"><span>basic.html   一般脚本都放在 HTML 文件的末尾</span></div><code class="hljs JavaScript">&lt;script&gt;
    
    $(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;
     
       <span class="hljs-comment">// 开始写 jQuery 代码...</span>
     
    &#125;);
    
&lt;/script&gt;</code></pre>

<blockquote>
<p>这是为了防止文档在完全加载（就绪）之前运行 jQuery 代码，即在 DOM 加载完成后才可以对 DOM 进行操作。<br>上述方法可以对多个脚本片段进行加载。</p>
</blockquote>
<h3 id="语法公式"><a href="#语法公式" class="headerlink" title="语法公式"></a>语法公式</h3><pre><code>$(selector).action()</code></pre><ul>
<li><p>选择符（selector）：需要 “查询”和”查找” HTML 元素</p>
</li>
<li><p>action()：执行对元素的操作</p>
  <pre><div class="caption"><span>用法示例</span></div><code class="hljs JavaScript">$(<span class="hljs-built_in">this</span>).hide() - 隐藏当前元素

$(<span class="hljs-string">&quot;p&quot;</span>).hide() - 隐藏所有 &lt;p&gt; 元素

$(<span class="hljs-string">&quot;p.test&quot;</span>).hide() - 隐藏所有 <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;test&quot;</span> 的 &lt;p&gt; 元素

$(<span class="hljs-string">&quot;#test&quot;</span>).hide() - 隐藏 id=<span class="hljs-string">&quot;test&quot;</span> 的元素</code></pre>


</li>
</ul>
<h3 id="jQuery-选择器"><a href="#jQuery-选择器" class="headerlink" title="jQuery 选择器"></a>jQuery 选择器</h3><p>jQuery 选择器允许您对 HTML 元素组或单个元素进行操作。它基于已经存在的 CSS 选择器，实现对元素的 id、类、类型、属性、属性值等 “查找”（或选择）HTML 元素的功能。</p>
<ol>
<li><p>选择器的基本用法</p>
 <pre><code class="hljs JavaScript"><span class="hljs-comment">//id选择器</span>
$(<span class="hljs-string">&quot;#ID值&quot;</span>);

<span class="hljs-comment">//标签选择器</span>
$(<span class="hljs-string">&#x27;tagName&#x27;</span>);

<span class="hljs-comment">//class类选择器</span>
$(<span class="hljs-string">&#x27;.className&#x27;</span>);

<span class="hljs-comment">//交集选择器,选择两个条件同时成立的标签</span>
$(<span class="hljs-string">&#x27;div.c1&#x27;</span>); <span class="hljs-comment">//选择class=c1的div标签</span>

<span class="hljs-comment">//并集选择器，选择满足以下条件中任意一个的所有标签</span>
$(<span class="hljs-string">&#x27;#d,.c1,p&#x27;</span>); <span class="hljs-comment">//选择id=d的标签，具有class=c1的标签，标签是p的标签。</span>

<span class="hljs-comment">//所有元素选择器</span>
$(<span class="hljs-string">&#x27;*&#x27;</span>); <span class="hljs-comment">//选择所有的标签</span></code></pre>
</li>
<li><p>多层匹配选择</p>
<p> jQuery 的选择器不仅可以选择一个层级的元素，还可以像串珠子一样依次选择多个层级的元素，化简代码的处理逻辑，主要方法如下：</p>
 <pre><code class="hljs JavaScript"><span class="hljs-comment">//后代选择器</span>
$(<span class="hljs-string">&#x27;a b&#x27;</span>); <span class="hljs-comment">//处于a标签级别下的所有b标签，用空格分开。</span>

<span class="hljs-comment">//子类选择器</span>
$(<span class="hljs-string">&#x27;a&gt;b&#x27;</span>); <span class="hljs-comment">//处于a标签级别下一级别的所有b标签。</span>

<span class="hljs-comment">//毗邻单一弟弟选择器</span>
$(<span class="hljs-string">&#x27;a+b&#x27;</span>); <span class="hljs-comment">//与a标签同一级别的紧挨着a标签的b标签。</span>

<span class="hljs-comment">//毗邻多个弟弟选择器</span>
$(<span class="hljs-string">&#x27;a~b&#x27;</span>); <span class="hljs-comment">//与a标签同一级别的位于a标签之后的所有b标签。</span></code></pre>
</li>
<li><p>精确筛选元素</p>
<p> 嗯，jQuery 还可以精确地筛选第 1 个、最后 1 个等元素，相当方便，如下：</p>
<table>
<thead>
<tr>
<th align="left">选择器</th>
<th align="left">实例</th>
<th align="left">选取</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-first.html">:first</a></td>
<td align="left">$(“p:first”)</td>
<td align="left">第一个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-last.html">:last</a></td>
<td align="left">$(“p:last”)</td>
<td align="left">最后一个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-even.html">:even</a></td>
<td align="left">$(“tr:even”)</td>
<td align="left">所有偶数 <code>&lt;tr&gt;</code> 元素，索引值从 0 开始，第一个元素是偶数 (0)，第二个元素是奇数 (1)，以此类推。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-odd.html">:odd</a></td>
<td align="left">$(“tr:odd”)</td>
<td align="left">所有奇数 <code>&lt;tr&gt;</code> 元素，索引值从 0 开始，第一个元素是偶数 (0)，第二个元素是奇数 (1)，以此类推。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/jq-sel-firstchild.html">:first-child</a></td>
<td align="left">$(“p:first-child”)</td>
<td align="left">属于其父元素的第一个子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-firstoftype.html">:first-of-type</a></td>
<td align="left">$(“p:first-of-type”)</td>
<td align="left">属于其父元素的第一个 <code>&lt;p&gt;</code> 元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-lastchild.html">:last-child</a></td>
<td align="left">$(“p:last-child”)</td>
<td align="left">属于其父元素的最后一个子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-lastoftype.html">:last-of-type</a></td>
<td align="left">$(“p:last-of-type”)</td>
<td align="left">属于其父元素的最后一个 <code>&lt;p&gt;</code> 元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-nthchild.html">:nth-child(<em>n</em>)</a></td>
<td align="left">$(“p:nth-child(2)”)</td>
<td align="left">属于其父元素的第二个子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-nthlastchild.html">:nth-last-child(<em>n</em>)</a></td>
<td align="left">$(“p:nth-last-child(2)”)</td>
<td align="left">属于其父元素的第二个子元素的所有 <code>&lt;p&gt;</code> 元素，从最后一个子元素开始计数</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-nthoftype.html">:nth-of-type(<em>n</em>)</a></td>
<td align="left">$(“p:nth-of-type(2)”)</td>
<td align="left">属于其父元素的第二个 <code>&lt;p&gt;</code> 元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-nthlastoftype.html">:nth-last-of-type(<em>n</em>)</a></td>
<td align="left">$(“p:nth-last-of-type(2)”)</td>
<td align="left">属于其父元素的第二个 <code>&lt;p&gt;</code> 元素的所有 <code>&lt;p&gt;</code> 元素，从最后一个子元素开始计数</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-onlychild.html">:only-child</a></td>
<td align="left">$(“p:only-child”)</td>
<td align="left">属于其父元素的唯一子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-onlyoftype.html">:only-of-type</a></td>
<td align="left">$(“p:only-of-type”)</td>
<td align="left">属于其父元素的特定类型的唯一子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
</tbody></table>
</li>
<li><p>当然，如果涉及上下层级之间的关系切换，那就需要在选择器的基础上使用筛选方法了。</p>
<table>
<thead>
<tr>
<th align="left">选择器</th>
<th align="left">实例</th>
<th align="left">选取</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-parent-child.html">parent &gt; child</a></td>
<td align="left">$(“div &gt; p”)</td>
<td align="left"><code>&lt;div&gt;</code> 元素的直接子元素的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-parent-descendant.html">parent descendant</a></td>
<td align="left">$(“div p”)</td>
<td align="left"><code>&lt;div&gt;</code> 元素的后代的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-previous-next.html">element + next</a></td>
<td align="left">$(“div + p”)</td>
<td align="left">每个 <code>&lt;div&gt;</code> 元素相邻的下一个 <code>&lt;p&gt;</code> 元素</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/jquery/sel-previous-siblings.html">element ~ siblings</a></td>
<td align="left">$(“div ~ p”)</td>
<td align="left"><code>&lt;div&gt;</code> 元素同级的所有 <code>&lt;p&gt;</code> 元素</td>
</tr>
</tbody></table>
</li>
<li><p>表单的筛选</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>$(“:text”);</td>
<td>找出type=”text”(文本)的input标签</td>
</tr>
<tr>
<td>$(“:password”);</td>
<td>找出type=”password”（密码）的input标签</td>
</tr>
<tr>
<td>$(“:file”);</td>
<td>找出type=”file”（文件）的input标签</td>
</tr>
<tr>
<td>$(“:radio”);</td>
<td>找出type=”radio”（单选框）的input标签</td>
</tr>
<tr>
<td>$(“:checkbox”);</td>
<td>找出type=”checkbox”（多选框）的input标签</td>
</tr>
<tr>
<td>$(“:submit”);</td>
<td>找出type=”submit”的input标签</td>
</tr>
<tr>
<td>$(“:reset”);</td>
<td>找出type=”reset”的input标签</td>
</tr>
<tr>
<td>$(“:button”);</td>
<td>找出type=”button”的input标签</td>
</tr>
</tbody></table>
</li>
</ol>
<blockquote>
<p>注意：$(“:text”)与$(“input:text”);结果相同</p>
</blockquote>
<ol start="6">
<li><p>表单对象的属性</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>$(“input:enabled”);</td>
<td>找出属性为enabled（可用）的input标签</td>
</tr>
<tr>
<td>$(“input:disabled”);</td>
<td>找出属性为disabled（不可用）的input标签</td>
</tr>
<tr>
<td>$(“input:checked”);</td>
<td>找出属性为checked（显示默认选择）的input标签</td>
</tr>
<tr>
<td>$(“:selected”);</td>
<td>找出属性为selected（显示默认选择）的option标签</td>
</tr>
</tbody></table>
</li>
</ol>
<h3 id="jQuery-的方法"><a href="#jQuery-的方法" class="headerlink" title="jQuery 的方法"></a>jQuery 的方法</h3><p>jQuery 方法涉及到事件的操作方法、元素的筛选方法以及元素的动态效果等等。由于该部分内容较为复杂，此处不再展开，详询参考文献 <a href="#refer-anchor-4"><sup>6-12</sup></a> 相关部分。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p>张三帅.<code>jQuery</code>[EB/OL].<a href="https://www.cnblogs.com/mingkong-z/articles/9131866.html">https://www.cnblogs.com/mingkong-z/articles/9131866.html</a>, 2020/10/05.</p>
</li>
<li><p>老佐.<code>JavaScript 及 jQuery 常用dom操作方法</code>[EB/OL].<a href="https://www.cnblogs.com/html5css3js/p/4550666.html">https://www.cnblogs.com/html5css3js/p/4550666.html</a>, 2020/10/05.</p>
</li>
<li><p>hemin.<code>jQuery 1.12.1 速查表</code>[EB/OL].<a href="http://hemin.cn/jq/">http://hemin.cn/jq/</a>, 2020/10/05.</p>
</li>
<li><p>minoz.<code>JQuery字符串的操作</code>[EB/OL].<a href="https://www.cnblogs.com/minozMin/p/8328028.html">https://www.cnblogs.com/minozMin/p/8328028.html</a>, 2020/10/05.</p>
</li>
</ol>
<div id="refer-anchor-4"></div>

<ol start="5">
<li>菜鸟教程.<code>jQuery 安装</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-install.html">https://www.runoob.com/jquery/jquery-install.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-5"></div>

<ol start="6">
<li>菜鸟教程.<code>jQuery 选择器</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-selectors.html">https://www.runoob.com/jquery/jquery-ref-selectors.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-6"></div>

<ol start="7">
<li>菜鸟教程.<code>jQuery 事件方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-events.html">https://www.runoob.com/jquery/jquery-ref-events.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-7"></div>

<ol start="8">
<li>菜鸟教程.<code>jQuery 效果方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-effects.html">https://www.runoob.com/jquery/jquery-ref-effects.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-8"></div>

<ol start="9">
<li>菜鸟教程.<code>jQuery HTML / CSS 方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-html.html">https://www.runoob.com/jquery/jquery-ref-html.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-9"></div>

<ol start="10">
<li>菜鸟教程.<code>jQuery 遍历 方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-traversing.html">https://www.runoob.com/jquery/jquery-ref-traversing.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-10"></div>

<ol start="11">
<li>菜鸟教程.<code>jQuery AJAX 方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-ajax.html">https://www.runoob.com/jquery/jquery-ref-ajax.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-11"></div>

<ol start="12">
<li>菜鸟教程.<code>jQuery 杂项方法</code>[EB/OL].<a href="https://www.runoob.com/jquery/jquery-ref-misc.html">https://www.runoob.com/jquery/jquery-ref-misc.html</a>, 2020/10/07.</li>
</ol>
<div id="refer-anchor-12"></div>





]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年随笔</title>
    <url>/202009022111/</url>
    <content><![CDATA[<h2 id="2020-09-02，明月"><a href="#2020-09-02，明月" class="headerlink" title="2020/09/02，明月"></a>2020/09/02，明月</h2><blockquote>
<p>  凌晨将寝，看见一轮明月从百叶窗的缝隙中漏了出来。江天一色无纤尘，皎皎空中孤月轮，我想起来了我的老父亲，突然好一阵心酸。</p>
<p>  这世界就这一轮明月，父亲看到的明月，和我看到的是不是一样的呢？我无从得知，但是我知道他清澈的心底，应该也和这明月一样，明朗、简洁、孤独的挂在那里！我现在正在重构的 hexo 主题，是否也能和它一样明朗呢？</p>
</blockquote>
<h2 id="2020-09-11，疲倦"><a href="#2020-09-11，疲倦" class="headerlink" title="2020/09/11，疲倦"></a>2020/09/11，疲倦</h2><blockquote>
<p>今天颇为疲倦，那是种种摧残对生活热爱的力量。</p>
<p>生活无望的摧残有之。生活压力太大，家庭收入有限，总是有种种债务要还，明明金额也不多，可是月月都是勉勉强强，总有一种秦琼卖马、穷途末路的感觉，既担不起风险去谋份新工作拼出路，也割舍不了那些缠缠绵绵的家庭责任。</p>
<p>与人相处的困顿有之。我总以为自己是个文人，家国情怀、儿女情长；然而也不知道如何面对糟糠之妻，是勉励还是鞭策，是举案齐眉还是听之任之；也不知道如何面对幼年儿女，是宠爱还是严厉，是陪伴成长还是执鞭指导。看过不少教育理论和案例，也曾以自身做过很多试验，终究是了了，每一个方向都言之凿凿，然而都不曾看得到光明。一人独行的孤独，布满了天空。</p>
<p>报国无门的失望有之。①得不到应有的回报：在单位里，也曾以一己之力，年年月月坚持去做了很多别人不想做、不能做的事情，但体制之下，来回调动，兜兜转转，始终只是棋子一枚。不少人长袖善舞、坑蒙拐骗，都获得了层层升迁，改善了生活，而我被所谓的工作需要调动等等排除在外，连每月的账单都要发愁。②官僚主义严重。每一个努力，总有领导说你先做，他先这样，长时间在电脑前做的优化工作也只是别人眼里的你只是在不知道在忙什么。企业年年亏损，只有人浮于事，形式主义，总是有很多人满为患的会议，但是工作的永远都只有少数的几个人，我都不知道我10多年来夜以继日做的实验做出来的成果到底有没有意义了！我从小在学校的贫困补助下获得了一些帮助，然而在年复一年的人治环境下失去挣扎的活力，台账记录、检查活动、宣传总结、表态发言，只有节点时期有人关心有没有成果，没有人关心日常应该怎么做提升效率、没有人有魄力面对上级的考核压力，更没有人具有规章制度里边要求的那些工作能力，制度永远只是规范下级、杀鸡儆猴的玩物。</p>
</blockquote>
<h2 id="2020-09-26，迷茫"><a href="#2020-09-26，迷茫" class="headerlink" title="2020/09/26，迷茫"></a>2020/09/26，迷茫</h2><blockquote>
<p>昨日，在公司某部门那里被批评项目文件写的不清不楚。我的内容别人看不明白，因此需要修改；这本来也没啥，偏偏别人要告诉我他不是搞这个专业的，这让人有点难受。</p>
<p>法国作家 John Collier 说过，If Youth Knew, If Age Could。我自己理解的意思就是，如果年轻人经验丰富，那么就不会栽在人情世故和盲目自大上；如果老年人能力充沛、能闯善干，那么就不会就不必利用特权来设置那么多莫名其妙的规则来限制或阻挡事物的发展。</p>
<p>就事论事而言，我自己手上偶尔也直接参与不少重要的基础事务，那天的项目申请书和可行性研究报告都是一天之内匆匆写就的，而要花费一大笔钱，涉及不少未知的研究和探索，怎么不可能足够完善到内容足够清晰到一个非专业人员能够几分钟就读明白并作出投资决策的！所以，对于这些身居要位、日常看报的中老年专家，我是有看法的：他们平时或是好好先生、或是好为人师，遇到高层级的领导，以好意见为基调，遇到低层级的员工，以挑刺的眼光来看问题；对我们这样的打工仔造成的混乱也是难免的。他们作为从我们这样的基础工种提拔上去的技术管理人员，平时不指导和帮助我们，不率先垂范，却要求下层人员有所作为、还要求遵守一堆只有下层人员需要遵守的规则，何不食肉糜！</p>
<p>我一度迷茫，本想纠正每一个专业术语上的错误，本想指出英雄伟人的同名出处而不是我异想天开，本想据理力争到底…然而，一念之间，放弃了这个念头，我们参与日常事务，希望企业兴旺、国家繁荣，那是我们自己主动参与实现的，不是等来的，如果我们退却了，旁观了，哪何来希望？！</p>
<p>我指望着的人，是我自己一厢情愿的幻想——幻想这些被生活和工作刺破了梦想也熬不来高官厚禄的上级能够礼贤下士、推陈出新，然而谁何曾不想“仗剑走天涯”，谁料遭遇遍体鳞伤，至今怕蛇咬？他们不也和我现在一样吗？总以为自己作出了一点业绩就能睥睨天下，然后总是在等待组织去变好，总是在说生态被破坏，可是我自己又继续做了什么了呢？我自以为低微，不也有一些人说自己更低微，等待着我不要挑刺，给他们一个不着边际的认可吗？</p>
<p>做自己能做的事吧！希望明天会好一点，希望“日行一善，积善成德；日行一善，功满三千”，时间自有定论。</p>
</blockquote>
]]></content>
      <categories>
        <category>随想录</category>
      </categories>
      <tags>
        <tag>2020</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Shell 中使用 printf 格式化输出语句</title>
    <url>/202009292008/</url>
    <content><![CDATA[<p>在使用 shell 编程的过程，难免要进行内容输出，我们一般情况下都使用 <code>echo</code> 命令进行输出，如 <code>echo &quot;Hello, World&quot;</code> ，不过功能比较有限；如果需要高级的格式化功能控制，那么应当使用 <code>printf</code> 命令。</p>
<pre><code>printf 由 POSIX 标准所定义，是C语言 `printf()` 库函数的一个有限的变形（在语法上也有些不同），是 echo 命令的增强版。
printf 不像 echo 那样会自动换行，必须显式添加换行符 `\n` 。</code></pre><h2 id="语法说明"><a href="#语法说明" class="headerlink" title="语法说明"></a>语法说明</h2><h3 id="printf-命令的语法"><a href="#printf-命令的语法" class="headerlink" title="printf 命令的语法"></a>printf 命令的语法</h3><pre><code>printf   &#123;format-string1 format-string2...&#125;   [arguments1 arguments2...]</code></pre><ol>
<li><p><code>format-string</code> 为格式控制字符串（可以没有引号，但最好加上，单引号、双引号均可；多个格式字符使用空格进行分隔），按 <strong>%[标志][输出最小宽度][.精度][长度]类型</strong> 格式书写：</p>
<ul>
<li><p>标志：即正负号或进制符号的设定</p>
<table>
<thead>
<tr>
<th>标 志</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>-</td>
<td>结果左对齐，右边填空格</td>
</tr>
<tr>
<td>+</td>
<td>输出符号(正号或负号)</td>
</tr>
<tr>
<td>空格</td>
<td>输出值为正时冠以空格，为负时冠以负号</td>
</tr>
<tr>
<td>#</td>
<td>对c、s、d、u类无影响； 对o类，在输出时加前缀o； 对x类，在输出时加前缀0x； 对e、g、f 类当结果有小数时才给出小数点。</td>
</tr>
</tbody></table>
</li>
<li><p>输出最小宽度：用十进制整数来表示输出的最少位数。若实际位数多于定义的宽度，则按实际位数输出，若实际位数少于定义的宽度则补以 <strong>空格</strong> 或 <code>0</code>。</p>
</li>
<li><p>精度：以 <code>.</code> 开头，后跟十进制整数。本项的意义是：如果输出数字，则表示小数的位数；如果输出的是字符，则表示输出字符的个数；若实际位数大于所定义的精度数，则截去超过的部分。</p>
</li>
<li><p>长度：格式符分为h、l两种， <code>h</code> 表示按短整型量输出，<code>l</code> 表示按长整型量输出。</p>
</li>
<li><p>类型：即输出数据的变量类型设定</p>
<table>
<thead>
<tr>
<th>格式字符</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>d</td>
<td>以十进制形式输出带符号整数(正数不输出符号)</td>
</tr>
<tr>
<td>o</td>
<td>以八进制形式输出无符号整数(不输出前缀0)</td>
</tr>
<tr>
<td>x,X</td>
<td>以十六进制形式输出无符号整数(不输出前缀Ox)</td>
</tr>
<tr>
<td>u</td>
<td>以十进制形式输出无符号整数</td>
</tr>
<tr>
<td>f</td>
<td>以小数形式输出单、双精度实数</td>
</tr>
<tr>
<td>e,E</td>
<td>以指数形式输出单、双精度实数</td>
</tr>
<tr>
<td>g,G</td>
<td>以%f或%e中较短的输出宽度输出单、双精度实数</td>
</tr>
<tr>
<td>c</td>
<td>输出单个字符</td>
</tr>
<tr>
<td>s</td>
<td>输出字符串</td>
</tr>
</tbody></table>
</li>
<li><p>举例</p>
<ul>
<li><code>%d</code> 表示按十进制整型输出；</li>
<li><code>%ld</code> 表示按十进制长整型输出；</li>
<li><code>%c</code> 表示按字符型输出等。</li>
</ul>
</li>
</ul>
</li>
<li><p><code>arguments</code> 为参数列表（多个参数使用空格分隔，不用逗号；若 <code>arguments</code> 多于 <code>format-string</code> 时，<code>format-string</code> 将自动重用）。</p>
<blockquote>
<p>参数来自于前序程序段，也就是需要格式化输出的变量。</p>
</blockquote>
</li>
</ol>
<h3 id="printf-命令的转义序列"><a href="#printf-命令的转义序列" class="headerlink" title="printf 命令的转义序列"></a>printf 命令的转义序列</h3><p>由于部分控制字符并不含在变量（参数）中，也无法使用格式控制符导入，比如变量之间的连接符等等，因此需要使用转义字符来完善格式化功能。最常见的就是增加换行符和制表符等，如 <code>printf &quot;Hello, Shell\n&quot;</code> 。</p>
<table>
<thead>
<tr>
<th align="left">序列</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">\a</td>
<td align="left">警告字符，通常为 ASCII 的 BEL 字符</td>
</tr>
<tr>
<td align="left">\b</td>
<td align="left">后退</td>
</tr>
<tr>
<td align="left">\c</td>
<td align="left">抑制（不显示）输出结果中任何结尾的换行字符（只在 %b 格式指示符控制下的参数字符串中有效），而且，任何留在参数里的字符、任何接下来的参数以及任何留在格式字符串中的字符，都被忽略</td>
</tr>
<tr>
<td align="left">\f</td>
<td align="left">换页（formfeed）</td>
</tr>
<tr>
<td align="left">\n</td>
<td align="left">换行</td>
</tr>
<tr>
<td align="left">\r</td>
<td align="left">回车（Carriage return）</td>
</tr>
<tr>
<td align="left">\t</td>
<td align="left">水平制表符</td>
</tr>
<tr>
<td align="left">\v</td>
<td align="left">垂直制表符</td>
</tr>
<tr>
<td align="left">\</td>
<td align="left">一个字面上的反斜杠字符</td>
</tr>
<tr>
<td align="left">\ddd</td>
<td align="left">表示 1 到 3 位数八进制值的字符。仅在格式字符串中有效</td>
</tr>
<tr>
<td align="left">\0ddd</td>
<td align="left">表示 1 到 3 位的八进制值字符</td>
</tr>
</tbody></table>
<h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><ol>
<li><p>示例1（shell 示例）</p>
 <pre><div class="caption"><span>/home/user/test.sh</span></div><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>
<span class="hljs-meta">#</span><span class="bash"> author: david faraday</span>
<span class="hljs-meta">#</span><span class="bash"> created: 2020/10/05 17:05:13</span>
 
<span class="hljs-meta">#</span><span class="bash"> format-string为双引号</span>
printf &quot;%d %s\n&quot; 1 &quot;abc&quot;

<span class="hljs-meta">#</span><span class="bash"> 单引号与双引号效果一样 </span>
printf &#x27;%d %s\n&#x27; 1 &quot;abc&quot; 

<span class="hljs-meta">#</span><span class="bash"> 没有引号也可以输出</span>
printf %s abcdef

<span class="hljs-meta">#</span><span class="bash"> 格式只指定了一个参数，但多出的参数仍然会按照该格式输出，format-string 被重用</span>
printf %s abc def

printf &quot;%s\n&quot; abc def

printf &quot;%s %s %s\n&quot; a b c d e f g h i j

<span class="hljs-meta">#</span><span class="bash"> 如果没有 arguments，那么 %s 用NULL代替，%d 用 0 代替</span>
printf &quot;%s and %d \n&quot;</code></pre>

<p> 上述输出结果为：</p>
<pre><code>1 abc
1 abc
abcdefabcdefabc
def
a b c
d e f
g h i
j  
 and 0</code></pre></li>
<li><p>示例2：表格化输出</p>
 <pre><div class="caption"><span>/home/user/test_2.sh</span></div><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>
<span class="hljs-meta">#</span><span class="bash"> author: david faraday</span>
<span class="hljs-meta">#</span><span class="bash"> created: 2020/10/05 17:15:25</span>
 
printf &quot;%-10s %-8s %-4s\n&quot; 姓名 性别 体重kg  
printf &quot;%-10s %-8s %-4.2f\n&quot; 郭靖 男 66.1234 
printf &quot;%-10s %-8s %-4.2f\n&quot; 杨过 男 48.6543 
printf &quot;%-10s %-8s %-4.2f\n&quot; 郭芙 女 47.9876</code></pre>

<blockquote>
<p><code>%-10s</code> 指一个宽度为 10 个字符（ <code>-</code> 表示左对齐，没有则表示右对齐），任何字符都会被显示在 10 个字符宽的字符内，如果不足则自动以空格填充，超过也会将内容全部显示出来。<br><code>%-4.2f</code> 指格式化为小数，其中 <code>.2</code> 指保留 2 位小数。</p>
</blockquote>
<p> 执行脚本，输出结果如下所示：</p>
<pre><code>姓名     性别   体重kg
郭靖     男      66.12
杨过     男      48.65
郭芙     女      47.99</code></pre></li>
<li><p>示例（C 语言示例）</p>
 <pre><div class="caption"><span>/home/user/test.c 【注意，求值顺序虽是自右至左，但是输出顺序还是从左至右】</span></div><code class="hljs C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span>
<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;
    <span class="hljs-keyword">int</span> i=<span class="hljs-number">8</span>;
    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The raw value: i=%d\n&quot;</span>, i);
    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;++i=%d \n++i=%d \n--i=%d \n--i=%d\n&quot;</span>,++i,++i,--i,--i);
    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
&#125;</code></pre>

<p> 运行结果：</p>
<pre><code>The raw value: i=8
++i=8
++i=7
--i=6
--i=7</code></pre></li>
</ol>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h3><ul>
<li>1.0.0，2020/10/05 21:51:03，初始版本。</li>
</ul>
<h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ol>
<li><p>w3cschool编程狮.<code>Shell printf 命令</code>[EB/OL].<a href="https://www.w3cschool.cn/linux/linux-shell-printf.html">https://www.w3cschool.cn/linux/linux-shell-printf.html</a>, 2020/09/29.</p>
</li>
<li><p>C语言中文网.<code>shell printf命令：格式化输出语句</code>[EB/OL].<a href="http://c.biancheng.net/cpp/view/1499.html">http://c.biancheng.net/cpp/view/1499.html</a>, 2020/09/29.</p>
</li>
<li><p>C语言中文网.<code>C语言格式输出函数printf()详解</code>[EB/OL].<a href="http://c.biancheng.net/cpp/html/33.html">http://c.biancheng.net/cpp/html/33.html</a>, 2020/10/05.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>编程笔记</category>
      </categories>
      <tags>
        <tag>Shell</tag>
        <tag>printf</tag>
        <tag>格式化</tag>
      </tags>
  </entry>
</search>
